const {
  createNewInvoker,
  getEnvironment,
} = require("../../../helper.js")
const { ruleId, ruleFile, testBase } = getEnvironment(__dirname)

describe(ruleId, () => {
  const invoke = createNewInvoker(ruleId, ruleFile, testBase)

  
    test("lib_xml_with_noent_true", () => {
      const testCase = "lib_xml_with_noent_true.js"

      const results = invoke(testCase)

      expect(results.Missing).toEqual([])
      expect(results.Extra).toEqual([])
    })
  

    test("ok_lib_xml_with_noent_false", () => {
      const testCase = "ok_lib_xml_with_noent_false.js"

      const results = invoke(testCase)

      expect(results.Missing).toEqual([])
      expect(results.Extra).toEqual([])
    })
  

    test("ok_no_xxe_vuln_present", () => {
      const testCase = "ok_no_xxe_vuln_present.js"

      const results = invoke(testCase)

      expect(results.Missing).toEqual([])
      expect(results.Extra).toEqual([])
    })
  

    test("xxe_vuln_with_node_expat", () => {
      const testCase = "xxe_vuln_with_node_expat.js"

      const results = invoke(testCase)

      expect(results.Missing).toEqual([])
      expect(results.Extra).toEqual([])
    })
  

    test("xxe_vuln_with_xml2js", () => {
      const testCase = "xxe_vuln_with_xml2js.js"

      const results = invoke(testCase)

      expect(results.Missing).toEqual([])
      expect(results.Extra).toEqual([])
    })
  

    test("xxe_vuln_with_xml2json", () => {
      const testCase = "xxe_vuln_with_xml2json.js"

      const results = invoke(testCase)

      expect(results.Missing).toEqual([])
      expect(results.Extra).toEqual([])
    })
  
})