// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`javascript_express_xml_external_entity_vulnerability lib_xml_with_noent_true 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "611"
      ],
      "id": "javascript_express_xml_external_entity_vulnerability",
      "title": "Unsanitized user input in XML parsing method",
      "description": "## Description\\nAvoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.\\n\\n## Remediations\\n❌ Do not enable parsing of external entities.\\n\\nFor LibXML, for example, do not set \`noent\` to \`true\`.\\n\`\`\`javascript\\n  var libxml = require(\\"libxmljs\\");\\n  libxml.parseXmlString(xml, { noent: true, noblanks: true });\\n\`\`\`\\n\\n## Resources\\n- [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_express_xml_external_entity_vulnerability",
      "line_number": 4,
      "full_filename": "/tmp/bearer-scan/lib_xml_with_noent_true.js",
      "filename": ".",
      "source": {
        "start": 4,
        "end": 4,
        "column": {
          "start": 30,
          "end": 41
        }
      },
      "sink": {
        "start": 4,
        "end": 4,
        "column": {
          "start": 30,
          "end": 41
        },
        "content": "noent: true"
      },
      "parent_line_number": 4,
      "snippet": "noent: true",
      "fingerprint": "aeddcc748b5741b64a0bae9b6e6aee06_0",
      "old_fingerprint": "6bc9351ee0ec6da80a5da07054561f88_0",
      "code_extract": "libxml.parseXmlString(xml, { noent: true, noblanks: true });"
    }
  ]
}"
`;

exports[`javascript_express_xml_external_entity_vulnerability ok_lib_xml_with_noent_false 1`] = `"{}"`;

exports[`javascript_express_xml_external_entity_vulnerability ok_no_xxe_vuln_present 1`] = `"{}"`;

exports[`javascript_express_xml_external_entity_vulnerability xxe_vuln_with_node_expat 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "611"
      ],
      "id": "javascript_express_xml_external_entity_vulnerability",
      "title": "Unsanitized user input in XML parsing method",
      "description": "## Description\\nAvoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.\\n\\n## Remediations\\n❌ Do not enable parsing of external entities.\\n\\nFor LibXML, for example, do not set \`noent\` to \`true\`.\\n\`\`\`javascript\\n  var libxml = require(\\"libxmljs\\");\\n  libxml.parseXmlString(xml, { noent: true, noblanks: true });\\n\`\`\`\\n\\n## Resources\\n- [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_express_xml_external_entity_vulnerability",
      "line_number": 6,
      "full_filename": "/tmp/bearer-scan/xxe_vuln_with_node_expat.js",
      "filename": ".",
      "source": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 3,
          "end": 37
        }
      },
      "sink": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 3,
          "end": 37
        },
        "content": "parser.parse(req.body.user, false)"
      },
      "parent_line_number": 6,
      "snippet": "parser.parse(req.body.user, false)",
      "fingerprint": "aeddcc748b5741b64a0bae9b6e6aee06_0",
      "old_fingerprint": "fb615134e46dedb3f5cce48f482bb597_0",
      "code_extract": "  parser.parse(req.body.user, false)"
    }
  ]
}"
`;

exports[`javascript_express_xml_external_entity_vulnerability xxe_vuln_with_xml2js 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "611"
      ],
      "id": "javascript_express_xml_external_entity_vulnerability",
      "title": "Unsanitized user input in XML parsing method",
      "description": "## Description\\nAvoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.\\n\\n## Remediations\\n❌ Do not enable parsing of external entities.\\n\\nFor LibXML, for example, do not set \`noent\` to \`true\`.\\n\`\`\`javascript\\n  var libxml = require(\\"libxmljs\\");\\n  libxml.parseXmlString(xml, { noent: true, noblanks: true });\\n\`\`\`\\n\\n## Resources\\n- [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_express_xml_external_entity_vulnerability",
      "line_number": 5,
      "full_filename": "/tmp/bearer-scan/xxe_vuln_with_xml2js.js",
      "filename": ".",
      "source": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 3,
          "end": 64
        }
      },
      "sink": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 3,
          "end": 64
        },
        "content": "parser.parseString(req.body.data, function(_err, _result) {})"
      },
      "parent_line_number": 5,
      "snippet": "parser.parseString(req.body.data, function(_err, _result) {})",
      "fingerprint": "aeddcc748b5741b64a0bae9b6e6aee06_0",
      "old_fingerprint": "8da759e02b8f37a9385b887a7495ba2b_0",
      "code_extract": "  parser.parseString(req.body.data, function(_err, _result) {})"
    }
  ]
}"
`;

exports[`javascript_express_xml_external_entity_vulnerability xxe_vuln_with_xml2json 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "611"
      ],
      "id": "javascript_express_xml_external_entity_vulnerability",
      "title": "Unsanitized user input in XML parsing method",
      "description": "## Description\\nAvoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.\\n\\n## Remediations\\n❌ Do not enable parsing of external entities.\\n\\nFor LibXML, for example, do not set \`noent\` to \`true\`.\\n\`\`\`javascript\\n  var libxml = require(\\"libxmljs\\");\\n  libxml.parseXmlString(xml, { noent: true, noblanks: true });\\n\`\`\`\\n\\n## Resources\\n- [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_express_xml_external_entity_vulnerability",
      "line_number": 4,
      "full_filename": "/tmp/bearer-scan/xxe_vuln_with_xml2json.js",
      "filename": ".",
      "source": {
        "start": 4,
        "end": 4,
        "column": {
          "start": 10,
          "end": 54
        }
      },
      "sink": {
        "start": 4,
        "end": 4,
        "column": {
          "start": 10,
          "end": 54
        },
        "content": "parser.toXml(req.body, { ignoreNull: true })"
      },
      "parent_line_number": 4,
      "snippet": "parser.toXml(req.body, { ignoreNull: true })",
      "fingerprint": "aeddcc748b5741b64a0bae9b6e6aee06_0",
      "old_fingerprint": "280adc54125f04430aac02e0611e9291_0",
      "code_extract": "  return parser.toXml(req.body, { ignoreNull: true })"
    }
  ]
}"
`;
