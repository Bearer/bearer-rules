// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`javascript_express_jwt_not_revoked express_jwt_not_revoked 1`] = `
"{
  "low": [
    {
      "cwe_ids": [
        "525"
      ],
      "id": "javascript_express_jwt_not_revoked",
      "title": "Unrevoked JWT detected.",
      "description": "## Description\\nThe best practice caching policy is to revoke JWTs especially when these contain senstitive information.\\n\\n## Remediations\\n✅ Ensure JWTs are short-lived by revoking them\\n\\n\`\`\`javascript\\nexpressjwt({\\n  ...\\n  isRevoked: this.customRevokeCall(),\\n  ...\\n})\\n\`\`\`\\n\\n## Resources\\n- [ExpressJWT documentation on revoking tokens](https://github.com/auth0/express-jwt#revoked-tokens)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_express_jwt_not_revoked",
      "line_number": 11,
      "full_filename": "/tmp/bearer-scan/express_jwt_not_revoked.js",
      "filename": ".",
      "source": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 3,
          "end": 63
        }
      },
      "sink": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 3,
          "end": 63
        },
        "content": "expressjwt({ secret: config.secret, algorithms: [\\"HS256\\"] })"
      },
      "parent_line_number": 11,
      "snippet": "expressjwt({ secret: config.secret, algorithms: [\\"HS256\\"] })",
      "fingerprint": "eaae2a30ff6ed4568ddf01dd63a61387_0",
      "old_fingerprint": "14c001b1dc34682262b42469b5f5fe84_0",
      "code_extract": "  expressjwt({ secret: config.secret, algorithms: [\\"HS256\\"] }),"
    },
    {
      "cwe_ids": [
        "525"
      ],
      "id": "javascript_express_jwt_not_revoked",
      "title": "Unrevoked JWT detected.",
      "description": "## Description\\nThe best practice caching policy is to revoke JWTs especially when these contain senstitive information.\\n\\n## Remediations\\n✅ Ensure JWTs are short-lived by revoking them\\n\\n\`\`\`javascript\\nexpressjwt({\\n  ...\\n  isRevoked: this.customRevokeCall(),\\n  ...\\n})\\n\`\`\`\\n\\n## Resources\\n- [ExpressJWT documentation on revoking tokens](https://github.com/auth0/express-jwt#revoked-tokens)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_express_jwt_not_revoked",
      "line_number": 12,
      "full_filename": "/tmp/bearer-scan/express_jwt_not_revoked.js",
      "filename": ".",
      "source": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 3,
          "end": 63
        }
      },
      "sink": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 3,
          "end": 63
        },
        "content": "expressJwt({ secret: config.secret, algorithms: [\\"HS256\\"] })"
      },
      "parent_line_number": 12,
      "snippet": "expressJwt({ secret: config.secret, algorithms: [\\"HS256\\"] })",
      "fingerprint": "eaae2a30ff6ed4568ddf01dd63a61387_1",
      "old_fingerprint": "14c001b1dc34682262b42469b5f5fe84_1",
      "code_extract": "  expressJwt({ secret: config.secret, algorithms: [\\"HS256\\"] }),"
    },
    {
      "cwe_ids": [
        "525"
      ],
      "id": "javascript_express_jwt_not_revoked",
      "title": "Unrevoked JWT detected.",
      "description": "## Description\\nThe best practice caching policy is to revoke JWTs especially when these contain senstitive information.\\n\\n## Remediations\\n✅ Ensure JWTs are short-lived by revoking them\\n\\n\`\`\`javascript\\nexpressjwt({\\n  ...\\n  isRevoked: this.customRevokeCall(),\\n  ...\\n})\\n\`\`\`\\n\\n## Resources\\n- [ExpressJWT documentation on revoking tokens](https://github.com/auth0/express-jwt#revoked-tokens)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_express_jwt_not_revoked",
      "line_number": 13,
      "full_filename": "/tmp/bearer-scan/express_jwt_not_revoked.js",
      "filename": ".",
      "source": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 3,
          "end": 63
        }
      },
      "sink": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 3,
          "end": 63
        },
        "content": "ExpressJWT({ secret: config.secret, algorithms: [\\"HS256\\"] })"
      },
      "parent_line_number": 13,
      "snippet": "ExpressJWT({ secret: config.secret, algorithms: [\\"HS256\\"] })",
      "fingerprint": "eaae2a30ff6ed4568ddf01dd63a61387_2",
      "old_fingerprint": "14c001b1dc34682262b42469b5f5fe84_2",
      "code_extract": "  ExpressJWT({ secret: config.secret, algorithms: [\\"HS256\\"] }),"
    }
  ]
}"
`;

exports[`javascript_express_jwt_not_revoked insecurity_express_jwt_revoked 1`] = `
"{
  "low": [
    {
      "cwe_ids": [
        "525"
      ],
      "id": "javascript_express_jwt_not_revoked",
      "title": "Unrevoked JWT detected.",
      "description": "## Description\\nThe best practice caching policy is to revoke JWTs especially when these contain senstitive information.\\n\\n## Remediations\\n✅ Ensure JWTs are short-lived by revoking them\\n\\n\`\`\`javascript\\nexpressjwt({\\n  ...\\n  isRevoked: this.customRevokeCall(),\\n  ...\\n})\\n\`\`\`\\n\\n## Resources\\n- [ExpressJWT documentation on revoking tokens](https://github.com/auth0/express-jwt#revoked-tokens)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_express_jwt_not_revoked",
      "line_number": 1,
      "full_filename": "/tmp/bearer-scan/insecurity.ts",
      "filename": ".",
      "source": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 43
        }
      },
      "sink": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 43
        },
        "content": "expressJwt({ secret: \\"\\" + Math.random() })"
      },
      "parent_line_number": 1,
      "snippet": "expressJwt({ secret: \\"\\" + Math.random() })",
      "fingerprint": "eaae2a30ff6ed4568ddf01dd63a61387_0",
      "old_fingerprint": "bc1db353c43740bf9d7b7d4bddbcddb4_0",
      "code_extract": "expressJwt({ secret: \\"\\" + Math.random() })"
    },
    {
      "cwe_ids": [
        "525"
      ],
      "id": "javascript_express_jwt_not_revoked",
      "title": "Unrevoked JWT detected.",
      "description": "## Description\\nThe best practice caching policy is to revoke JWTs especially when these contain senstitive information.\\n\\n## Remediations\\n✅ Ensure JWTs are short-lived by revoking them\\n\\n\`\`\`javascript\\nexpressjwt({\\n  ...\\n  isRevoked: this.customRevokeCall(),\\n  ...\\n})\\n\`\`\`\\n\\n## Resources\\n- [ExpressJWT documentation on revoking tokens](https://github.com/auth0/express-jwt#revoked-tokens)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_express_jwt_not_revoked",
      "line_number": 2,
      "full_filename": "/tmp/bearer-scan/insecurity.ts",
      "filename": ".",
      "source": {
        "start": 2,
        "end": 2,
        "column": {
          "start": 30,
          "end": 79
        }
      },
      "sink": {
        "start": 2,
        "end": 2,
        "column": {
          "start": 30,
          "end": 79
        },
        "content": "expressjwt({ secret: \\"\\" + Math.random() } as any)"
      },
      "parent_line_number": 2,
      "snippet": "expressjwt({ secret: \\"\\" + Math.random() } as any)",
      "fingerprint": "eaae2a30ff6ed4568ddf01dd63a61387_1",
      "old_fingerprint": "bc1db353c43740bf9d7b7d4bddbcddb4_1",
      "code_extract": "export const denyAll = () => expressjwt({ secret: \\"\\" + Math.random() } as any)"
    }
  ]
}"
`;

exports[`javascript_express_jwt_not_revoked ok_express_jwt_revoked 1`] = `"{}"`;
