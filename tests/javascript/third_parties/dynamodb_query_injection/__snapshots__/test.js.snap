// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`javascript_third_parties_dynamodb_query_injection dynamodb_query_injection 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "89"
      ],
      "id": "javascript_third_parties_dynamodb_query_injection",
      "title": "Raw user input in data store query detected.",
      "description": "## Description\\nIncluding unsanitized data, such as user input or request data, in raw queries makes your application vulnerable to injection attacks.\\n\\n## Remediations\\n\\nNarrow down your query from the code instead of using unsanitzed user input to define it.\\n\\nExample:\\n\\n\`\`\`javascript\\nexports.handler = async function(event, context) {\\n    var params = {\\n        Key: {\\n         \\"artist\\": {\\"S\\": event.input },\\n         \\"song\\": {\\"S\\": \\"Carrot Eton\\"}\\n        },\\n        TableName: \\"artists\\"\\n    };\\n    var result = await dynamodb.getItem(params).promise()\\n    console.log(JSON.stringify(result))\\n}\\n\`\`\`\\n\\n\\n## Resources\\n- [OWASP nosql injection explained](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.6-Testing_for_NoSQL_Injection)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_third_parties_dynamodb_query_injection",
      "line_number": 10,
      "full_filename": "/tmp/bearer-scan/dynamodb_query_injection.js",
      "filename": ".",
      "source": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 37,
          "end": 61
        }
      },
      "sink": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 37,
          "end": 61
        },
        "content": "new QueryCommand(params)"
      },
      "parent_line_number": 10,
      "snippet": "new QueryCommand(params)",
      "fingerprint": "d3d9829e398dc3fa0b84684d1f8da7ef_0",
      "old_fingerprint": "f80826420da7749a22d012e08e53f48f_0"
    },
    {
      "cwe_ids": [
        "89"
      ],
      "id": "javascript_third_parties_dynamodb_query_injection",
      "title": "Raw user input in data store query detected.",
      "description": "## Description\\nIncluding unsanitized data, such as user input or request data, in raw queries makes your application vulnerable to injection attacks.\\n\\n## Remediations\\n\\nNarrow down your query from the code instead of using unsanitzed user input to define it.\\n\\nExample:\\n\\n\`\`\`javascript\\nexports.handler = async function(event, context) {\\n    var params = {\\n        Key: {\\n         \\"artist\\": {\\"S\\": event.input },\\n         \\"song\\": {\\"S\\": \\"Carrot Eton\\"}\\n        },\\n        TableName: \\"artists\\"\\n    };\\n    var result = await dynamodb.getItem(params).promise()\\n    console.log(JSON.stringify(result))\\n}\\n\`\`\`\\n\\n\\n## Resources\\n- [OWASP nosql injection explained](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.6-Testing_for_NoSQL_Injection)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_third_parties_dynamodb_query_injection",
      "line_number": 18,
      "full_filename": "/tmp/bearer-scan/dynamodb_query_injection.js",
      "filename": ".",
      "source": {
        "start": 18,
        "end": 18,
        "column": {
          "start": 3,
          "end": 68
        }
      },
      "sink": {
        "start": 18,
        "end": 18,
        "column": {
          "start": 3,
          "end": 68
        },
        "content": "docClient.query(event[\\"query\\"][\\"params\\"], function(err, data) {})"
      },
      "parent_line_number": 18,
      "snippet": "docClient.query(event[\\"query\\"][\\"params\\"], function(err, data) {})",
      "fingerprint": "d3d9829e398dc3fa0b84684d1f8da7ef_1",
      "old_fingerprint": "f80826420da7749a22d012e08e53f48f_1"
    },
    {
      "cwe_ids": [
        "89"
      ],
      "id": "javascript_third_parties_dynamodb_query_injection",
      "title": "Raw user input in data store query detected.",
      "description": "## Description\\nIncluding unsanitized data, such as user input or request data, in raw queries makes your application vulnerable to injection attacks.\\n\\n## Remediations\\n\\nNarrow down your query from the code instead of using unsanitzed user input to define it.\\n\\nExample:\\n\\n\`\`\`javascript\\nexports.handler = async function(event, context) {\\n    var params = {\\n        Key: {\\n         \\"artist\\": {\\"S\\": event.input },\\n         \\"song\\": {\\"S\\": \\"Carrot Eton\\"}\\n        },\\n        TableName: \\"artists\\"\\n    };\\n    var result = await dynamodb.getItem(params).promise()\\n    console.log(JSON.stringify(result))\\n}\\n\`\`\`\\n\\n\\n## Resources\\n- [OWASP nosql injection explained](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.6-Testing_for_NoSQL_Injection)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_third_parties_dynamodb_query_injection",
      "line_number": 32,
      "full_filename": "/tmp/bearer-scan/dynamodb_query_injection.js",
      "filename": ".",
      "source": {
        "start": 32,
        "end": 32,
        "column": {
          "start": 37,
          "end": 61
        }
      },
      "sink": {
        "start": 32,
        "end": 32,
        "column": {
          "start": 37,
          "end": 61
        },
        "content": "new QueryCommand(params)"
      },
      "parent_line_number": 32,
      "snippet": "new QueryCommand(params)",
      "fingerprint": "d3d9829e398dc3fa0b84684d1f8da7ef_2",
      "old_fingerprint": "f80826420da7749a22d012e08e53f48f_2"
    }
  ]
}"
`;

exports[`javascript_third_parties_dynamodb_query_injection ok_no_injection 1`] = `"{}"`;
