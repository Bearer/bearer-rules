high:
    - rule:
        cwe_ids:
            - "89"
        id: javascript_third_parties_dynamodb_query_injection
        title: Raw user input in data store query detected.
        description: |
            ## Description
            Including unsanitized data, such as user input or request data, in raw queries makes your application vulnerable to injection attacks.

            ## Remediations

            Narrow down your query from the code instead of using unsanitzed user input to define it.

            Example:

            ```javascript
            exports.handler = async function(event, context) {
                var params = {
                    Key: {
                     "artist": {"S": event.input },
                     "song": {"S": "Carrot Eton"}
                    },
                    TableName: "artists"
                };
                var result = await dynamodb.getItem(params).promise()
                console.log(JSON.stringify(result))
            }
            ```


            ## Resources
            - [OWASP nosql injection explained](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.6-Testing_for_NoSQL_Injection)
        documentation_url: https://docs.bearer.com/reference/rules/javascript_third_parties_dynamodb_query_injection
      line_number: 10
      full_filename: /tmp/scan/dynamodb_query_injection.js
      filename: .
      source:
        location:
            start: 10
            end: 10
            column:
                start: 37
                end: 61
      sink:
        location:
            start: 10
            end: 10
            column:
                start: 37
                end: 61
        content: new QueryCommand(params)
      parent_line_number: 10
      snippet: new QueryCommand(params)
      fingerprint: d3d9829e398dc3fa0b84684d1f8da7ef_0
      old_fingerprint: 843ada685944ddd8250f044e04fabf87_0
    - rule:
        cwe_ids:
            - "89"
        id: javascript_third_parties_dynamodb_query_injection
        title: Raw user input in data store query detected.
        description: |
            ## Description
            Including unsanitized data, such as user input or request data, in raw queries makes your application vulnerable to injection attacks.

            ## Remediations

            Narrow down your query from the code instead of using unsanitzed user input to define it.

            Example:

            ```javascript
            exports.handler = async function(event, context) {
                var params = {
                    Key: {
                     "artist": {"S": event.input },
                     "song": {"S": "Carrot Eton"}
                    },
                    TableName: "artists"
                };
                var result = await dynamodb.getItem(params).promise()
                console.log(JSON.stringify(result))
            }
            ```


            ## Resources
            - [OWASP nosql injection explained](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.6-Testing_for_NoSQL_Injection)
        documentation_url: https://docs.bearer.com/reference/rules/javascript_third_parties_dynamodb_query_injection
      line_number: 18
      full_filename: /tmp/scan/dynamodb_query_injection.js
      filename: .
      source:
        location:
            start: 18
            end: 18
            column:
                start: 3
                end: 68
      sink:
        location:
            start: 18
            end: 18
            column:
                start: 3
                end: 68
        content: docClient.query(event["query"]["params"], function(err, data) {})
      parent_line_number: 18
      snippet: docClient.query(event["query"]["params"], function(err, data) {})
      fingerprint: d3d9829e398dc3fa0b84684d1f8da7ef_1
      old_fingerprint: 843ada685944ddd8250f044e04fabf87_1
    - rule:
        cwe_ids:
            - "89"
        id: javascript_third_parties_dynamodb_query_injection
        title: Raw user input in data store query detected.
        description: |
            ## Description
            Including unsanitized data, such as user input or request data, in raw queries makes your application vulnerable to injection attacks.

            ## Remediations

            Narrow down your query from the code instead of using unsanitzed user input to define it.

            Example:

            ```javascript
            exports.handler = async function(event, context) {
                var params = {
                    Key: {
                     "artist": {"S": event.input },
                     "song": {"S": "Carrot Eton"}
                    },
                    TableName: "artists"
                };
                var result = await dynamodb.getItem(params).promise()
                console.log(JSON.stringify(result))
            }
            ```


            ## Resources
            - [OWASP nosql injection explained](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/05.6-Testing_for_NoSQL_Injection)
        documentation_url: https://docs.bearer.com/reference/rules/javascript_third_parties_dynamodb_query_injection
      line_number: 32
      full_filename: /tmp/scan/dynamodb_query_injection.js
      filename: .
      source:
        location:
            start: 32
            end: 32
            column:
                start: 37
                end: 61
      sink:
        location:
            start: 32
            end: 32
            column:
                start: 37
                end: 61
        content: new QueryCommand(params)
      parent_line_number: 32
      snippet: new QueryCommand(params)
      fingerprint: d3d9829e398dc3fa0b84684d1f8da7ef_2
      old_fingerprint: 843ada685944ddd8250f044e04fabf87_2

