// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`javascript_lang_jwt insecure 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "312"
      ],
      "id": "javascript_lang_jwt",
      "title": "Leakage of sensitive data in JWT",
      "description": "## Description\\n\\nJWTs are not a secure place to store sensitive data. This rule looks for any sensitive data types saved to a JWT.\\n\\n## Remediations\\n\\n❌ Avoid storing sensitive data in JWTs:\\n\\n\`\`\`javascript\\n  const jwt = require('jsonwebtoken');\\n  const token = jwt.sign({ user: { email: 'jhon@gmail.com' }});\\n\`\`\`\\n\\n✅ If you need to store user's information, use their unique database identifier instead of personal identifiable information:\\n\\n\`\`\`javascript\\n  const jwt = require('jsonwebtoken');\\n  const token = jwt.sign({ user: user.uuid });\\n\`\`\`\\n\\n## Resources\\n  - [OWASP sensitive data exposure](https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_lang_jwt",
      "line_number": 2,
      "full_filename": "/tmp/bearer-scan/insecure.js",
      "filename": ".",
      "data_type": {
        "category_uuid": "cef587dd-76db-430b-9e18-7b031e1a193b",
        "name": "Email Address"
      },
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 3,
        "end": 3,
        "column": {
          "start": 12,
          "end": 35
        }
      },
      "sink": {
        "start": 2,
        "end": 5,
        "column": {
          "start": 13,
          "end": 2
        },
        "content": "jwt.sign(\\n\\t{ user: { email: \\"jhon@gmail.com\\" } },\\n\\tprocess.env.JWT_SECRET\\n)"
      },
      "parent_line_number": 2,
      "snippet": "jwt.sign(\\n\\t{ user: { email: \\"jhon@gmail.com\\" } },\\n\\tprocess.env.JWT_SECRET\\n)",
      "fingerprint": "a07bf92978c23dd3276b9f99c6468078_0",
      "old_fingerprint": "033a53b024d0cc266ed79667e570c3ba_0",
      "code_extract": "var token = jwt.sign(\\n\\t{ user: { email: \\"jhon@gmail.com\\" } },\\n\\tprocess.env.JWT_SECRET\\n);"
    }
  ]
}"
`;

exports[`javascript_lang_jwt secure 1`] = `"{}"`;
