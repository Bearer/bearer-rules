// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`javascript_lang_manual_html_sanitization safe 1`] = `"{}"`;

exports[`javascript_lang_manual_html_sanitization unsafe 1`] = `
"{
  "low": [
    {
      "cwe_ids": [
        "79"
      ],
      "id": "javascript_lang_manual_html_sanitization",
      "title": "Usage of manual HTML sanitization (XSS)",
      "description": "## Description\\nSanitizing HTML manually is error prone and can lead to Cross Site\\nScripting (XSS) vulnerabilities.\\n\\n## Remediations\\n\\n❌ Avoid manually escaping HTML:\\n\\n\`\`\`javascript\\nconst sanitizedUserInput = user.Input\\n  .replaceAll('<', '&lt;')\\n  .replaceAll('>', '&gt;');\\nconst html = \`<strong>\${sanitizedUserInput}</strong>\`;\\n\`\`\`\\n\\n✅ Use a HTML sanitization library:\\n\\n\`\`\`javascript\\nimport sanitizeHtml from 'sanitize-html';\\n\\nconst html = sanitizeHtml(\`<strong>\${user.Input}</strong>\`);\\n\`\`\`\\n\\n## Resources\\n- [OWASP XSS explained](https://owasp.org/www-community/attacks/xss/)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/javascript_lang_manual_html_sanitization",
      "line_number": 1,
      "full_filename": "/tmp/bearer-scan/unsafe.js",
      "filename": ".",
      "source": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 28,
          "end": 86
        }
      },
      "sink": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 28,
          "end": 62
        },
        "content": "user.Input.replaceAll('<', '&lt;')"
      },
      "parent_line_number": 1,
      "snippet": "user.Input.replaceAll('<', '&lt;')",
      "fingerprint": "883581e9effcc89f50531cd2677ebf31_0",
      "old_fingerprint": "f64354c034f32ea4927e1f751b63cb3b_0",
      "code_extract": "const sanitizedUserInput = user.Input.replaceAll('<', '&lt;').replaceAll('>', '&gt;');"
    }
  ]
}"
`;
