// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ruby_lang_path_using_user_input ok_not_unsafe 1`] = `"{}"`;

exports[`ruby_lang_path_using_user_input unsafe_event 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 2,
      "full_filename": "/tmp/bearer-scan/unsafe_event.rb",
      "filename": ".",
      "source": {
        "start": 2,
        "end": 2,
        "column": {
          "start": 3,
          "end": 34
        }
      },
      "sink": {
        "start": 2,
        "end": 2,
        "column": {
          "start": 3,
          "end": 34
        },
        "content": "Dir[\\"foo\\", base: event[\\"oops\\"]]"
      },
      "parent_line_number": 2,
      "snippet": "Dir[\\"foo\\", base: event[\\"oops\\"]]",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_0",
      "old_fingerprint": "98f587f9a494c40b746fd08f11011f88_0",
      "code_extract": "  Dir[\\"foo\\", base: event[\\"oops\\"]]"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 4,
      "full_filename": "/tmp/bearer-scan/unsafe_event.rb",
      "filename": ".",
      "source": {
        "start": 4,
        "end": 4,
        "column": {
          "start": 3,
          "end": 38
        }
      },
      "sink": {
        "start": 4,
        "end": 4,
        "column": {
          "start": 3,
          "end": 38
        },
        "content": "Dir.chdir(\\"/home/#{event[\\"oops\\"]}\\")"
      },
      "parent_line_number": 4,
      "snippet": "Dir.chdir(\\"/home/#{event[\\"oops\\"]}\\")",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_1",
      "old_fingerprint": "98f587f9a494c40b746fd08f11011f88_1",
      "code_extract": "  Dir.chdir(\\"/home/#{event[\\"oops\\"]}\\")"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 6,
      "full_filename": "/tmp/bearer-scan/unsafe_event.rb",
      "filename": ".",
      "source": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 3,
          "end": 29
        }
      },
      "sink": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 3,
          "end": 29
        },
        "content": "File.exist?(event[\\"oops\\"])"
      },
      "parent_line_number": 6,
      "snippet": "File.exist?(event[\\"oops\\"])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_2",
      "old_fingerprint": "98f587f9a494c40b746fd08f11011f88_2",
      "code_extract": "  File.exist?(event[\\"oops\\"])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 8,
      "full_filename": "/tmp/bearer-scan/unsafe_event.rb",
      "filename": ".",
      "source": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 3,
          "end": 41
        }
      },
      "sink": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 3,
          "end": 41
        },
        "content": "IO.readlines(\\"/home/#{event[\\"oops\\"]}\\")"
      },
      "parent_line_number": 8,
      "snippet": "IO.readlines(\\"/home/#{event[\\"oops\\"]}\\")",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_3",
      "old_fingerprint": "98f587f9a494c40b746fd08f11011f88_3",
      "code_extract": "  IO.readlines(\\"/home/#{event[\\"oops\\"]}\\")"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 10,
      "full_filename": "/tmp/bearer-scan/unsafe_event.rb",
      "filename": ".",
      "source": {
        "start": 10,
        "end": 11,
        "column": {
          "start": 3,
          "end": 6
        }
      },
      "sink": {
        "start": 10,
        "end": 11,
        "column": {
          "start": 3,
          "end": 6
        },
        "content": "Kernel.open(event[\\"oops\\"], \\"w+\\") do\\n  end"
      },
      "parent_line_number": 10,
      "snippet": "Kernel.open(event[\\"oops\\"], \\"w+\\") do\\n  end",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_4",
      "old_fingerprint": "98f587f9a494c40b746fd08f11011f88_4",
      "code_extract": "  Kernel.open(event[\\"oops\\"], \\"w+\\") do\\n  end"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 13,
      "full_filename": "/tmp/bearer-scan/unsafe_event.rb",
      "filename": ".",
      "source": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 3,
          "end": 22
        }
      },
      "sink": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 3,
          "end": 22
        },
        "content": "open(event[\\"oops\\"])"
      },
      "parent_line_number": 13,
      "snippet": "open(event[\\"oops\\"])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_5",
      "old_fingerprint": "98f587f9a494c40b746fd08f11011f88_5",
      "code_extract": "  open(event[\\"oops\\"])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 15,
      "full_filename": "/tmp/bearer-scan/unsafe_event.rb",
      "filename": ".",
      "source": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 3,
          "end": 28
        }
      },
      "sink": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 3,
          "end": 28
        },
        "content": "PStore.new(event[\\"oops\\"])"
      },
      "parent_line_number": 15,
      "snippet": "PStore.new(event[\\"oops\\"])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_6",
      "old_fingerprint": "98f587f9a494c40b746fd08f11011f88_6",
      "code_extract": "  PStore.new(event[\\"oops\\"])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 17,
      "full_filename": "/tmp/bearer-scan/unsafe_event.rb",
      "filename": ".",
      "source": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 10,
          "end": 37
        }
      },
      "sink": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 10,
          "end": 37
        },
        "content": "Pathname.new(event[\\"oops\\"])"
      },
      "parent_line_number": 17,
      "snippet": "Pathname.new(event[\\"oops\\"])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_7",
      "old_fingerprint": "98f587f9a494c40b746fd08f11011f88_7",
      "code_extract": "  path = Pathname.new(event[\\"oops\\"])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 18,
      "full_filename": "/tmp/bearer-scan/unsafe_event.rb",
      "filename": ".",
      "source": {
        "start": 18,
        "end": 18,
        "column": {
          "start": 3,
          "end": 22
        }
      },
      "sink": {
        "start": 18,
        "end": 18,
        "column": {
          "start": 3,
          "end": 22
        },
        "content": "path + event[\\"two\\"]"
      },
      "parent_line_number": 18,
      "snippet": "path + event[\\"two\\"]",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_8",
      "old_fingerprint": "98f587f9a494c40b746fd08f11011f88_8",
      "code_extract": "  path + event[\\"two\\"]"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 19,
      "full_filename": "/tmp/bearer-scan/unsafe_event.rb",
      "filename": ".",
      "source": {
        "start": 19,
        "end": 19,
        "column": {
          "start": 3,
          "end": 22
        }
      },
      "sink": {
        "start": 19,
        "end": 19,
        "column": {
          "start": 3,
          "end": 22
        },
        "content": "path / event[\\"two\\"]"
      },
      "parent_line_number": 19,
      "snippet": "path / event[\\"two\\"]",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_9",
      "old_fingerprint": "98f587f9a494c40b746fd08f11011f88_9",
      "code_extract": "  path / event[\\"two\\"]"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 20,
      "full_filename": "/tmp/bearer-scan/unsafe_event.rb",
      "filename": ".",
      "source": {
        "start": 20,
        "end": 20,
        "column": {
          "start": 3,
          "end": 33
        }
      },
      "sink": {
        "start": 20,
        "end": 20,
        "column": {
          "start": 3,
          "end": 33
        },
        "content": "path.join(\\"a\\", event[\\"three\\"])"
      },
      "parent_line_number": 20,
      "snippet": "path.join(\\"a\\", event[\\"three\\"])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_10",
      "old_fingerprint": "98f587f9a494c40b746fd08f11011f88_10",
      "code_extract": "  path.join(\\"a\\", event[\\"three\\"])"
    }
  ]
}"
`;

exports[`ruby_lang_path_using_user_input unsafe_params 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 1,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 32
        }
      },
      "sink": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 32
        },
        "content": "Dir[\\"foo\\", base: params[:oops]]"
      },
      "parent_line_number": 1,
      "snippet": "Dir[\\"foo\\", base: params[:oops]]",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_0",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_0",
      "code_extract": "Dir[\\"foo\\", base: params[:oops]]"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 3,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 3,
        "end": 3,
        "column": {
          "start": 1,
          "end": 36
        }
      },
      "sink": {
        "start": 3,
        "end": 3,
        "column": {
          "start": 1,
          "end": 36
        },
        "content": "Dir.chdir(\\"/home/#{params[:oops]}\\")"
      },
      "parent_line_number": 3,
      "snippet": "Dir.chdir(\\"/home/#{params[:oops]}\\")",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_1",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_1",
      "code_extract": "Dir.chdir(\\"/home/#{params[:oops]}\\")"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 5,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 27
        }
      },
      "sink": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 27
        },
        "content": "File.exist?(params[:oops])"
      },
      "parent_line_number": 5,
      "snippet": "File.exist?(params[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_2",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_2",
      "code_extract": "File.exist?(params[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 39
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 39
        },
        "content": "IO.readlines(\\"/home/#{params[:oops]}\\")"
      },
      "parent_line_number": 7,
      "snippet": "IO.readlines(\\"/home/#{params[:oops]}\\")",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_3",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_3",
      "code_extract": "IO.readlines(\\"/home/#{params[:oops]}\\")"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 9,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 9,
        "end": 10,
        "column": {
          "start": 1,
          "end": 4
        }
      },
      "sink": {
        "start": 9,
        "end": 10,
        "column": {
          "start": 1,
          "end": 4
        },
        "content": "Kernel.open(params[:oops], \\"w+\\") do\\nend"
      },
      "parent_line_number": 9,
      "snippet": "Kernel.open(params[:oops], \\"w+\\") do\\nend",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_4",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_4",
      "code_extract": "Kernel.open(params[:oops], \\"w+\\") do\\nend"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 12,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 20
        }
      },
      "sink": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 20
        },
        "content": "open(params[:oops])"
      },
      "parent_line_number": 12,
      "snippet": "open(params[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_5",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_5",
      "code_extract": "open(params[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 14,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 14,
        "end": 14,
        "column": {
          "start": 1,
          "end": 26
        }
      },
      "sink": {
        "start": 14,
        "end": 14,
        "column": {
          "start": 1,
          "end": 26
        },
        "content": "PStore.new(params[:oops])"
      },
      "parent_line_number": 14,
      "snippet": "PStore.new(params[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_6",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_6",
      "code_extract": "PStore.new(params[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 16,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 16,
        "end": 16,
        "column": {
          "start": 8,
          "end": 35
        }
      },
      "sink": {
        "start": 16,
        "end": 16,
        "column": {
          "start": 8,
          "end": 35
        },
        "content": "Pathname.new(params[:oops])"
      },
      "parent_line_number": 16,
      "snippet": "Pathname.new(params[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_7",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_7",
      "code_extract": "path = Pathname.new(params[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 17,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 1,
          "end": 20
        }
      },
      "sink": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 1,
          "end": 20
        },
        "content": "path + params[:two]"
      },
      "parent_line_number": 17,
      "snippet": "path + params[:two]",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_8",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_8",
      "code_extract": "path + params[:two]"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 18,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 18,
        "end": 18,
        "column": {
          "start": 1,
          "end": 22
        }
      },
      "sink": {
        "start": 18,
        "end": 18,
        "column": {
          "start": 1,
          "end": 22
        },
        "content": "path / params[:three]"
      },
      "parent_line_number": 18,
      "snippet": "path / params[:three]",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_9",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_9",
      "code_extract": "path / params[:three]"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 19,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 19,
        "end": 19,
        "column": {
          "start": 1,
          "end": 30
        }
      },
      "sink": {
        "start": 19,
        "end": 19,
        "column": {
          "start": 1,
          "end": 30
        },
        "content": "path.join(\\"a\\", params[:four])"
      },
      "parent_line_number": 19,
      "snippet": "path.join(\\"a\\", params[:four])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_10",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_10",
      "code_extract": "path.join(\\"a\\", params[:four])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 21,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 21,
        "end": 21,
        "column": {
          "start": 1,
          "end": 31
        }
      },
      "sink": {
        "start": 21,
        "end": 21,
        "column": {
          "start": 1,
          "end": 31
        },
        "content": "Rails.root.join(params[:oops])"
      },
      "parent_line_number": 21,
      "snippet": "Rails.root.join(params[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_11",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_11",
      "code_extract": "Rails.root.join(params[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 23,
      "full_filename": "/tmp/bearer-scan/unsafe_params.rb",
      "filename": ".",
      "source": {
        "start": 23,
        "end": 23,
        "column": {
          "start": 1,
          "end": 45
        }
      },
      "sink": {
        "start": 23,
        "end": 23,
        "column": {
          "start": 1,
          "end": 45
        },
        "content": "Gem::Util.traverse_parents(params[:oops]) {}"
      },
      "parent_line_number": 23,
      "snippet": "Gem::Util.traverse_parents(params[:oops]) {}",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_12",
      "old_fingerprint": "a41dfcef57ab30320d9fbfa209e8fa3a_12",
      "code_extract": "Gem::Util.traverse_parents(params[:oops]) {}"
    }
  ]
}"
`;

exports[`ruby_lang_path_using_user_input unsafe_rails 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 1,
      "full_filename": "/tmp/bearer-scan/unsafe_rails.rb",
      "filename": ".",
      "source": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 31
        }
      },
      "sink": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 31
        },
        "content": "Rails.root.join(params[:oops])"
      },
      "parent_line_number": 1,
      "snippet": "Rails.root.join(params[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_0",
      "old_fingerprint": "426908f413fa11f9575e96958780e984_0",
      "code_extract": "Rails.root.join(params[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 3,
      "full_filename": "/tmp/bearer-scan/unsafe_rails.rb",
      "filename": ".",
      "source": {
        "start": 3,
        "end": 3,
        "column": {
          "start": 1,
          "end": 31
        }
      },
      "sink": {
        "start": 3,
        "end": 3,
        "column": {
          "start": 1,
          "end": 31
        },
        "content": "render(partial: params[:oops])"
      },
      "parent_line_number": 3,
      "snippet": "render(partial: params[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_1",
      "old_fingerprint": "426908f413fa11f9575e96958780e984_1",
      "code_extract": "render(partial: params[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 4,
      "full_filename": "/tmp/bearer-scan/unsafe_rails.rb",
      "filename": ".",
      "source": {
        "start": 4,
        "end": 4,
        "column": {
          "start": 1,
          "end": 37
        }
      },
      "sink": {
        "start": 4,
        "end": 4,
        "column": {
          "start": 1,
          "end": 37
        },
        "content": "render(\\"something/#{params[:oops]}\\")"
      },
      "parent_line_number": 4,
      "snippet": "render(\\"something/#{params[:oops]}\\")",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_2",
      "old_fingerprint": "426908f413fa11f9575e96958780e984_2",
      "code_extract": "render(\\"something/#{params[:oops]}\\")"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 5,
      "full_filename": "/tmp/bearer-scan/unsafe_rails.rb",
      "filename": ".",
      "source": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 58
        }
      },
      "sink": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 58
        },
        "content": "render_to_string({ file: \\"/templates/#{params[:oops]}\\" })"
      },
      "parent_line_number": 5,
      "snippet": "render_to_string({ file: \\"/templates/#{params[:oops]}\\" })",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_3",
      "old_fingerprint": "426908f413fa11f9575e96958780e984_3",
      "code_extract": "render_to_string({ file: \\"/templates/#{params[:oops]}\\" })"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/unsafe_rails.rb",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 43
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 43
        },
        "content": "send_file params[:oops], type: \\"text/html\\""
      },
      "parent_line_number": 7,
      "snippet": "send_file params[:oops], type: \\"text/html\\"",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_4",
      "old_fingerprint": "426908f413fa11f9575e96958780e984_4",
      "code_extract": "send_file params[:oops], type: \\"text/html\\""
    }
  ]
}"
`;

exports[`ruby_lang_path_using_user_input unsafe_request 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 1,
      "full_filename": "/tmp/bearer-scan/unsafe_request.rb",
      "filename": ".",
      "source": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 37
        }
      },
      "sink": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 37
        },
        "content": "Dir[\\"foo\\", base: request.env[:oops]]"
      },
      "parent_line_number": 1,
      "snippet": "Dir[\\"foo\\", base: request.env[:oops]]",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_0",
      "old_fingerprint": "e422a4f7b5342a72e859f1b84e263fc8_0",
      "code_extract": "Dir[\\"foo\\", base: request.env[:oops]]"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 3,
      "full_filename": "/tmp/bearer-scan/unsafe_request.rb",
      "filename": ".",
      "source": {
        "start": 3,
        "end": 3,
        "column": {
          "start": 1,
          "end": 41
        }
      },
      "sink": {
        "start": 3,
        "end": 3,
        "column": {
          "start": 1,
          "end": 41
        },
        "content": "Dir.chdir(\\"/home/#{request.env[:oops]}\\")"
      },
      "parent_line_number": 3,
      "snippet": "Dir.chdir(\\"/home/#{request.env[:oops]}\\")",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_1",
      "old_fingerprint": "e422a4f7b5342a72e859f1b84e263fc8_1",
      "code_extract": "Dir.chdir(\\"/home/#{request.env[:oops]}\\")"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 5,
      "full_filename": "/tmp/bearer-scan/unsafe_request.rb",
      "filename": ".",
      "source": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 32
        }
      },
      "sink": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 32
        },
        "content": "File.exist?(request.env[:oops])"
      },
      "parent_line_number": 5,
      "snippet": "File.exist?(request.env[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_2",
      "old_fingerprint": "e422a4f7b5342a72e859f1b84e263fc8_2",
      "code_extract": "File.exist?(request.env[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/unsafe_request.rb",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 44
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 44
        },
        "content": "IO.readlines(\\"/home/#{request.env[:oops]}\\")"
      },
      "parent_line_number": 7,
      "snippet": "IO.readlines(\\"/home/#{request.env[:oops]}\\")",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_3",
      "old_fingerprint": "e422a4f7b5342a72e859f1b84e263fc8_3",
      "code_extract": "IO.readlines(\\"/home/#{request.env[:oops]}\\")"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 9,
      "full_filename": "/tmp/bearer-scan/unsafe_request.rb",
      "filename": ".",
      "source": {
        "start": 9,
        "end": 10,
        "column": {
          "start": 1,
          "end": 4
        }
      },
      "sink": {
        "start": 9,
        "end": 10,
        "column": {
          "start": 1,
          "end": 4
        },
        "content": "Kernel.open(request.env[:oops], \\"w+\\") do\\nend"
      },
      "parent_line_number": 9,
      "snippet": "Kernel.open(request.env[:oops], \\"w+\\") do\\nend",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_4",
      "old_fingerprint": "e422a4f7b5342a72e859f1b84e263fc8_4",
      "code_extract": "Kernel.open(request.env[:oops], \\"w+\\") do\\nend"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 12,
      "full_filename": "/tmp/bearer-scan/unsafe_request.rb",
      "filename": ".",
      "source": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 25
        }
      },
      "sink": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 25
        },
        "content": "open(request.env[:oops])"
      },
      "parent_line_number": 12,
      "snippet": "open(request.env[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_5",
      "old_fingerprint": "e422a4f7b5342a72e859f1b84e263fc8_5",
      "code_extract": "open(request.env[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 14,
      "full_filename": "/tmp/bearer-scan/unsafe_request.rb",
      "filename": ".",
      "source": {
        "start": 14,
        "end": 14,
        "column": {
          "start": 1,
          "end": 31
        }
      },
      "sink": {
        "start": 14,
        "end": 14,
        "column": {
          "start": 1,
          "end": 31
        },
        "content": "PStore.new(request.env[:oops])"
      },
      "parent_line_number": 14,
      "snippet": "PStore.new(request.env[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_6",
      "old_fingerprint": "e422a4f7b5342a72e859f1b84e263fc8_6",
      "code_extract": "PStore.new(request.env[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 16,
      "full_filename": "/tmp/bearer-scan/unsafe_request.rb",
      "filename": ".",
      "source": {
        "start": 16,
        "end": 16,
        "column": {
          "start": 8,
          "end": 40
        }
      },
      "sink": {
        "start": 16,
        "end": 16,
        "column": {
          "start": 8,
          "end": 40
        },
        "content": "Pathname.new(request.env[:oops])"
      },
      "parent_line_number": 16,
      "snippet": "Pathname.new(request.env[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_7",
      "old_fingerprint": "e422a4f7b5342a72e859f1b84e263fc8_7",
      "code_extract": "path = Pathname.new(request.env[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 17,
      "full_filename": "/tmp/bearer-scan/unsafe_request.rb",
      "filename": ".",
      "source": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 1,
          "end": 30
        }
      },
      "sink": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 1,
          "end": 30
        },
        "content": "path + request.headers[:oops]"
      },
      "parent_line_number": 17,
      "snippet": "path + request.headers[:oops]",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_8",
      "old_fingerprint": "e422a4f7b5342a72e859f1b84e263fc8_8",
      "code_extract": "path + request.headers[:oops]"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 18,
      "full_filename": "/tmp/bearer-scan/unsafe_request.rb",
      "filename": ".",
      "source": {
        "start": 18,
        "end": 18,
        "column": {
          "start": 1,
          "end": 39
        }
      },
      "sink": {
        "start": 18,
        "end": 18,
        "column": {
          "start": 1,
          "end": 39
        },
        "content": "path / request.query_parameters[:oops]"
      },
      "parent_line_number": 18,
      "snippet": "path / request.query_parameters[:oops]",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_9",
      "old_fingerprint": "e422a4f7b5342a72e859f1b84e263fc8_9",
      "code_extract": "path / request.query_parameters[:oops]"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 19,
      "full_filename": "/tmp/bearer-scan/unsafe_request.rb",
      "filename": ".",
      "source": {
        "start": 19,
        "end": 19,
        "column": {
          "start": 1,
          "end": 29
        }
      },
      "sink": {
        "start": 19,
        "end": 19,
        "column": {
          "start": 1,
          "end": 29
        },
        "content": "path.join(\\"a\\", request.body)"
      },
      "parent_line_number": 19,
      "snippet": "path.join(\\"a\\", request.body)",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_10",
      "old_fingerprint": "e422a4f7b5342a72e859f1b84e263fc8_10",
      "code_extract": "path.join(\\"a\\", request.body)"
    }
  ]
}"
`;

exports[`ruby_lang_path_using_user_input unsafe_shell 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 3,
      "full_filename": "/tmp/bearer-scan/unsafe_shell.rb",
      "filename": ".",
      "source": {
        "start": 3,
        "end": 3,
        "column": {
          "start": 1,
          "end": 24
        }
      },
      "sink": {
        "start": 3,
        "end": 3,
        "column": {
          "start": 1,
          "end": 24
        },
        "content": "Shell.cd(params[:oops])"
      },
      "parent_line_number": 3,
      "snippet": "Shell.cd(params[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_0",
      "old_fingerprint": "8d19ebd634f5b6323ecb822ea72721ad_0",
      "code_extract": "Shell.cd(params[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 5,
      "full_filename": "/tmp/bearer-scan/unsafe_shell.rb",
      "filename": ".",
      "source": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 42
        }
      },
      "sink": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 42
        },
        "content": "Shell.default_system_path = params[:oops]"
      },
      "parent_line_number": 5,
      "snippet": "Shell.default_system_path = params[:oops]",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_1",
      "old_fingerprint": "8d19ebd634f5b6323ecb822ea72721ad_1",
      "code_extract": "Shell.default_system_path = params[:oops]"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/unsafe_shell.rb",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 9,
          "end": 40
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 9,
          "end": 40
        },
        "content": "Shell.new(params[:oops], umask)"
      },
      "parent_line_number": 7,
      "snippet": "Shell.new(params[:oops], umask)",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_2",
      "old_fingerprint": "8d19ebd634f5b6323ecb822ea72721ad_2",
      "code_extract": "shell = Shell.new(params[:oops], umask)"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 9,
      "full_filename": "/tmp/bearer-scan/unsafe_shell.rb",
      "filename": ".",
      "source": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 35
        }
      },
      "sink": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 35
        },
        "content": "shell.pushdir(params[:oops], true)"
      },
      "parent_line_number": 9,
      "snippet": "shell.pushdir(params[:oops], true)",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_3",
      "old_fingerprint": "8d19ebd634f5b6323ecb822ea72721ad_3",
      "code_extract": "shell.pushdir(params[:oops], true)"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 12,
      "full_filename": "/tmp/bearer-scan/unsafe_shell.rb",
      "filename": ".",
      "source": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 41
        }
      },
      "sink": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 41
        },
        "content": "processor1.foreach(params[:oops], rs) {}"
      },
      "parent_line_number": 12,
      "snippet": "processor1.foreach(params[:oops], rs) {}",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_4",
      "old_fingerprint": "8d19ebd634f5b6323ecb822ea72721ad_4",
      "code_extract": "processor1.foreach(params[:oops], rs) {}"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 15,
      "full_filename": "/tmp/bearer-scan/unsafe_shell.rb",
      "filename": ".",
      "source": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 1,
          "end": 44
        }
      },
      "sink": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 1,
          "end": 44
        },
        "content": "processor2.test(:exists?, x, params[:oops])"
      },
      "parent_line_number": 15,
      "snippet": "processor2.test(:exists?, x, params[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_5",
      "old_fingerprint": "8d19ebd634f5b6323ecb822ea72721ad_5",
      "code_extract": "processor2.test(:exists?, x, params[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 17,
      "full_filename": "/tmp/bearer-scan/unsafe_shell.rb",
      "filename": ".",
      "source": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 1,
          "end": 42
        }
      },
      "sink": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 1,
          "end": 42
        },
        "content": "processor2[:exists?, x, params[:oops], y]"
      },
      "parent_line_number": 17,
      "snippet": "processor2[:exists?, x, params[:oops], y]",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_6",
      "old_fingerprint": "8d19ebd634f5b6323ecb822ea72721ad_6",
      "code_extract": "processor2[:exists?, x, params[:oops], y]"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 20,
      "full_filename": "/tmp/bearer-scan/unsafe_shell.rb",
      "filename": ".",
      "source": {
        "start": 20,
        "end": 20,
        "column": {
          "start": 3,
          "end": 32
        }
      },
      "sink": {
        "start": 20,
        "end": 20,
        "column": {
          "start": 3,
          "end": 32
        },
        "content": "test(:exists?, params[:oops])"
      },
      "parent_line_number": 20,
      "snippet": "test(:exists?, params[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_7",
      "old_fingerprint": "8d19ebd634f5b6323ecb822ea72721ad_7",
      "code_extract": "  test(:exists?, params[:oops])"
    },
    {
      "cwe_ids": [
        "73"
      ],
      "id": "ruby_lang_path_using_user_input",
      "title": "Unsanitized user input in file path",
      "description": "## Description\\nUsing raw unsanitized input when forming filenames or file paths is bad practice.\\nIt can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.\\n\\n## Remediations\\n❌ Avoid wherever possible\\n\\n✅ Validate expected file paths using \`File\` methods\\n\\n\`\`\`ruby\\n  path = File.expand(\\"/home/\\" + params[:resource_name])\\n  if path.starts_with?(\\"/home/\\")\\n    Dir.chdir(path)\\n  else\\n    # path is unexpected\\n  end\\n\`\`\`\\n\\n## Resources\\n- [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input",
      "line_number": 24,
      "full_filename": "/tmp/bearer-scan/unsafe_shell.rb",
      "filename": ".",
      "source": {
        "start": 24,
        "end": 24,
        "column": {
          "start": 9,
          "end": 33
        }
      },
      "sink": {
        "start": 24,
        "end": 24,
        "column": {
          "start": 9,
          "end": 33
        },
        "content": "Shell.new(params[:oops])"
      },
      "parent_line_number": 24,
      "snippet": "Shell.new(params[:oops])",
      "fingerprint": "d8ab0f4720e4b75e105ae709050ef6ed_8",
      "old_fingerprint": "8d19ebd634f5b6323ecb822ea72721ad_8",
      "code_extract": "shell = Shell.new(params[:oops])"
    }
  ]
}"
`;
