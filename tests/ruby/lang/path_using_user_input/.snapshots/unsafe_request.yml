high:
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 1
      full_filename: /tmp/scan/unsafe_request.rb
      filename: .
      source:
        location:
            start: 1
            end: 1
            column:
                start: 1
                end: 37
      sink:
        location:
            start: 1
            end: 1
            column:
                start: 1
                end: 37
        content: 'Dir["foo", base: request.env[:oops]]'
      parent_line_number: 1
      snippet: 'Dir["foo", base: request.env[:oops]]'
      fingerprint: d8ab0f4720e4b75e105ae709050ef6ed_0
      old_fingerprint: 68749ea9ad0a1efc78eb91d2ee99fb50_0
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 3
      full_filename: /tmp/scan/unsafe_request.rb
      filename: .
      source:
        location:
            start: 3
            end: 3
            column:
                start: 1
                end: 41
      sink:
        location:
            start: 3
            end: 3
            column:
                start: 1
                end: 41
        content: Dir.chdir("/home/#{request.env[:oops]}")
      parent_line_number: 3
      snippet: Dir.chdir("/home/#{request.env[:oops]}")
      fingerprint: d8ab0f4720e4b75e105ae709050ef6ed_1
      old_fingerprint: 68749ea9ad0a1efc78eb91d2ee99fb50_1
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 5
      full_filename: /tmp/scan/unsafe_request.rb
      filename: .
      source:
        location:
            start: 5
            end: 5
            column:
                start: 1
                end: 32
      sink:
        location:
            start: 5
            end: 5
            column:
                start: 1
                end: 32
        content: File.exist?(request.env[:oops])
      parent_line_number: 5
      snippet: File.exist?(request.env[:oops])
      fingerprint: d8ab0f4720e4b75e105ae709050ef6ed_2
      old_fingerprint: 68749ea9ad0a1efc78eb91d2ee99fb50_2
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 7
      full_filename: /tmp/scan/unsafe_request.rb
      filename: .
      source:
        location:
            start: 7
            end: 7
            column:
                start: 1
                end: 44
      sink:
        location:
            start: 7
            end: 7
            column:
                start: 1
                end: 44
        content: IO.readlines("/home/#{request.env[:oops]}")
      parent_line_number: 7
      snippet: IO.readlines("/home/#{request.env[:oops]}")
      fingerprint: d8ab0f4720e4b75e105ae709050ef6ed_3
      old_fingerprint: 68749ea9ad0a1efc78eb91d2ee99fb50_3
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 9
      full_filename: /tmp/scan/unsafe_request.rb
      filename: .
      source:
        location:
            start: 9
            end: 10
            column:
                start: 1
                end: 4
      sink:
        location:
            start: 9
            end: 10
            column:
                start: 1
                end: 4
        content: |-
            Kernel.open(request.env[:oops], "w+") do
            end
      parent_line_number: 9
      snippet: |-
        Kernel.open(request.env[:oops], "w+") do
        end
      fingerprint: d8ab0f4720e4b75e105ae709050ef6ed_4
      old_fingerprint: 68749ea9ad0a1efc78eb91d2ee99fb50_4
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 12
      full_filename: /tmp/scan/unsafe_request.rb
      filename: .
      source:
        location:
            start: 12
            end: 12
            column:
                start: 1
                end: 25
      sink:
        location:
            start: 12
            end: 12
            column:
                start: 1
                end: 25
        content: open(request.env[:oops])
      parent_line_number: 12
      snippet: open(request.env[:oops])
      fingerprint: d8ab0f4720e4b75e105ae709050ef6ed_5
      old_fingerprint: 68749ea9ad0a1efc78eb91d2ee99fb50_5
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 14
      full_filename: /tmp/scan/unsafe_request.rb
      filename: .
      source:
        location:
            start: 14
            end: 14
            column:
                start: 1
                end: 31
      sink:
        location:
            start: 14
            end: 14
            column:
                start: 1
                end: 31
        content: PStore.new(request.env[:oops])
      parent_line_number: 14
      snippet: PStore.new(request.env[:oops])
      fingerprint: d8ab0f4720e4b75e105ae709050ef6ed_6
      old_fingerprint: 68749ea9ad0a1efc78eb91d2ee99fb50_6
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 16
      full_filename: /tmp/scan/unsafe_request.rb
      filename: .
      source:
        location:
            start: 16
            end: 16
            column:
                start: 8
                end: 40
      sink:
        location:
            start: 16
            end: 16
            column:
                start: 8
                end: 40
        content: Pathname.new(request.env[:oops])
      parent_line_number: 16
      snippet: Pathname.new(request.env[:oops])
      fingerprint: d8ab0f4720e4b75e105ae709050ef6ed_7
      old_fingerprint: 68749ea9ad0a1efc78eb91d2ee99fb50_7
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 17
      full_filename: /tmp/scan/unsafe_request.rb
      filename: .
      source:
        location:
            start: 17
            end: 17
            column:
                start: 1
                end: 30
      sink:
        location:
            start: 17
            end: 17
            column:
                start: 1
                end: 30
        content: path + request.headers[:oops]
      parent_line_number: 17
      snippet: path + request.headers[:oops]
      fingerprint: d8ab0f4720e4b75e105ae709050ef6ed_8
      old_fingerprint: 68749ea9ad0a1efc78eb91d2ee99fb50_8
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 18
      full_filename: /tmp/scan/unsafe_request.rb
      filename: .
      source:
        location:
            start: 18
            end: 18
            column:
                start: 1
                end: 39
      sink:
        location:
            start: 18
            end: 18
            column:
                start: 1
                end: 39
        content: path / request.query_parameters[:oops]
      parent_line_number: 18
      snippet: path / request.query_parameters[:oops]
      fingerprint: d8ab0f4720e4b75e105ae709050ef6ed_9
      old_fingerprint: 68749ea9ad0a1efc78eb91d2ee99fb50_9
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 19
      full_filename: /tmp/scan/unsafe_request.rb
      filename: .
      source:
        location:
            start: 19
            end: 19
            column:
                start: 1
                end: 29
      sink:
        location:
            start: 19
            end: 19
            column:
                start: 1
                end: 29
        content: path.join("a", request.body)
      parent_line_number: 19
      snippet: path.join("a", request.body)
      fingerprint: d8ab0f4720e4b75e105ae709050ef6ed_10
      old_fingerprint: 68749ea9ad0a1efc78eb91d2ee99fb50_10

