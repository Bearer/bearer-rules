// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ruby_lang_insecure_ftp ftp_new 1`] = `
"{
  "medium": [
    {
      "cwe_ids": [
        "319"
      ],
      "id": "ruby_lang_insecure_ftp",
      "title": "Communication with an insecure FTP server detected.",
      "description": "## Description\\n\\nCommunication with FTP servers should be done securely over SFTP in applications that process sensitive data. This rule checks if all FTP connections are made using SFTP.\\n\\n## Remediations\\n\\n✅ To ensure secure FTP connections are made, use the Net::SFTP [library](https://github.com/net-ssh/net-sftp) instead of Net::FTP:\\n\\n\`\`\`ruby\\nrequire 'net/sftp'\\nNet::SFTP.start('host', 'username', password: ENV['password') do |sftp|\\n\\t...\\nend\\n\`\`\`\\n\\n## Resources\\n- [net-sftp](https://github.com/net-ssh/net-sftp)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_insecure_ftp",
      "line_number": 8,
      "full_filename": "/tmp/bearer-scan/ftp_new.rb",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 7,
          "end": 40
        }
      },
      "sink": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 7,
          "end": 40
        },
        "content": "Net::FTP.new(\\"ftp.ruby-lang.org\\")"
      },
      "parent_line_number": 8,
      "snippet": "Net::FTP.new(\\"ftp.ruby-lang.org\\")",
      "fingerprint": "b48187bc987e84ed94e63b90448fda84_0",
      "old_fingerprint": "68a2c2e3f7fe31846311256891bfb647_0",
      "code_extract": "ftp = Net::FTP.new(\\"ftp.ruby-lang.org\\")"
    }
  ]
}"
`;

exports[`ruby_lang_insecure_ftp ftp_open 1`] = `
"{
  "low": [
    {
      "cwe_ids": [
        "319"
      ],
      "id": "ruby_lang_insecure_ftp",
      "title": "Communication with an insecure FTP server detected.",
      "description": "## Description\\n\\nCommunication with FTP servers should be done securely over SFTP in applications that process sensitive data. This rule checks if all FTP connections are made using SFTP.\\n\\n## Remediations\\n\\n✅ To ensure secure FTP connections are made, use the Net::SFTP [library](https://github.com/net-ssh/net-sftp) instead of Net::FTP:\\n\\n\`\`\`ruby\\nrequire 'net/sftp'\\nNet::SFTP.start('host', 'username', password: ENV['password') do |sftp|\\n\\t...\\nend\\n\`\`\`\\n\\n## Resources\\n- [net-sftp](https://github.com/net-ssh/net-sftp)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_insecure_ftp",
      "line_number": 3,
      "full_filename": "/tmp/bearer-scan/ftp_open.rb",
      "filename": ".",
      "source": {
        "start": 3,
        "end": 8,
        "column": {
          "start": 1,
          "end": 4
        }
      },
      "sink": {
        "start": 3,
        "end": 8,
        "column": {
          "start": 1,
          "end": 4
        },
        "content": "Net::FTP.open(\\"example.com\\") do |ftp|\\n  ftp.login\\n  files = ftp.chdir('pub/lang/ruby/contrib')\\n  files = ftp.list('n*')\\n  ftp.getbinaryfile('nif.rb-0.91.gz', 'nif.gz', 1024)\\nend"
      },
      "parent_line_number": 3,
      "snippet": "Net::FTP.open(\\"example.com\\") do |ftp|\\n  ftp.login\\n  files = ftp.chdir('pub/lang/ruby/contrib')\\n  files = ftp.list('n*')\\n  ftp.getbinaryfile('nif.rb-0.91.gz', 'nif.gz', 1024)\\nend",
      "fingerprint": "b48187bc987e84ed94e63b90448fda84_0",
      "old_fingerprint": "1e30e272a5ba8f351486a1d632fc7653_0",
      "code_extract": "Net::FTP.open(\\"example.com\\") do |ftp|\\n  ftp.login\\n  files = ftp.chdir('pub/lang/ruby/contrib')\\n  files = ftp.list('n*')\\n  ftp.getbinaryfile('nif.rb-0.91.gz', 'nif.gz', 1024)\\nend"
    }
  ]
}"
`;

exports[`ruby_lang_insecure_ftp ftp_open_with_datatype 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "319"
      ],
      "id": "ruby_lang_insecure_ftp",
      "title": "Communication with an insecure FTP server detected.",
      "description": "## Description\\n\\nCommunication with FTP servers should be done securely over SFTP in applications that process sensitive data. This rule checks if all FTP connections are made using SFTP.\\n\\n## Remediations\\n\\n✅ To ensure secure FTP connections are made, use the Net::SFTP [library](https://github.com/net-ssh/net-sftp) instead of Net::FTP:\\n\\n\`\`\`ruby\\nrequire 'net/sftp'\\nNet::SFTP.start('host', 'username', password: ENV['password') do |sftp|\\n\\t...\\nend\\n\`\`\`\\n\\n## Resources\\n- [net-sftp](https://github.com/net-ssh/net-sftp)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_insecure_ftp",
      "line_number": 3,
      "full_filename": "/tmp/bearer-scan/ftp_open_with_datatype.rb",
      "filename": ".",
      "data_type": {
        "category_uuid": "94007e1e-57d8-43e8-90f2-246236dc5dde",
        "name": "Gender"
      },
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 14,
          "end": 24
        }
      },
      "sink": {
        "start": 3,
        "end": 13,
        "column": {
          "start": 1,
          "end": 4
        },
        "content": "Net::FTP.open(\\"ftp.site.com\\") do |ftp|\\n  file = Tempfile.new(\\"user_data\\")\\n  begin\\n    file << [user.email, user.gender]\\n    file.close\\n\\n    ftp.puttextfile(file.path, \\"/users/123.json\\")\\n  ensure\\n    file.close!\\n  end\\nend"
      },
      "parent_line_number": 3,
      "snippet": "Net::FTP.open(\\"ftp.site.com\\") do |ftp|\\n  file = Tempfile.new(\\"user_data\\")\\n  begin\\n    file << [user.email, user.gender]\\n    file.close\\n\\n    ftp.puttextfile(file.path, \\"/users/123.json\\")\\n  ensure\\n    file.close!\\n  end\\nend",
      "fingerprint": "b48187bc987e84ed94e63b90448fda84_0",
      "old_fingerprint": "939ea86449fb9e763a3cc5786dbc7672_0",
      "code_extract": "Net::FTP.open(\\"ftp.site.com\\") do |ftp|\\n  file = Tempfile.new(\\"user_data\\")\\n  begin\\n    file << [user.email, user.gender]\\n    file.close\\n\\n    ftp.puttextfile(file.path, \\"/users/123.json\\")\\n  ensure\\n    file.close!\\n  end\\nend"
    }
  ]
}"
`;

exports[`ruby_lang_insecure_ftp ok_secure_ftp 1`] = `"{}"`;
