// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ruby_lang_raw_html_using_user_input bad 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "79"
      ],
      "id": "ruby_lang_raw_html_using_user_input",
      "title": "Unsanitized user input in raw HTML strings (XSS)",
      "description": "## Description\\n\\nApplications should not include unsanitized user input in HTML. This\\ncan allow cross-site scripting (XSS) attacks.\\n\\n## Remediations\\n\\n❌ Avoid including user input directly in HTML strings:\\n\\n\`\`\`ruby\\nhtml = \\"<h1>#{params[:title]}</h1>\\"\\n\`\`\`\\n\\n✅ Use a templating language such as ERB, and place the template in a separate file.\\n\\n✅ When HTML strings must be used, sanitize user input:\\n\\n\`\`\`ruby\\nhtml = \\"<h1>#{strip_tags(params[:title])}</h1>\\"\\n\`\`\`\\n\\n## Resources\\n- [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_raw_html_using_user_input",
      "line_number": 1,
      "full_filename": "/tmp/bearer-scan/bad.rb",
      "filename": ".",
      "source": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 43
        }
      },
      "sink": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 43
        },
        "content": "\\"<h1 class=\\\\\\"test\\\\\\">#{params[:oops]}</h1>\\""
      },
      "parent_line_number": 1,
      "snippet": "\\"<h1 class=\\\\\\"test\\\\\\">#{params[:oops]}</h1>\\"",
      "fingerprint": "bbce316340479255472a6bc49330c542_0",
      "old_fingerprint": "eef01466c0f4aefe92a29f710d1513d9_0",
      "code_extract": "\\"<h1 class=\\\\\\"test\\\\\\">#{params[:oops]}</h1>\\""
    },
    {
      "cwe_ids": [
        "79"
      ],
      "id": "ruby_lang_raw_html_using_user_input",
      "title": "Unsanitized user input in raw HTML strings (XSS)",
      "description": "## Description\\n\\nApplications should not include unsanitized user input in HTML. This\\ncan allow cross-site scripting (XSS) attacks.\\n\\n## Remediations\\n\\n❌ Avoid including user input directly in HTML strings:\\n\\n\`\`\`ruby\\nhtml = \\"<h1>#{params[:title]}</h1>\\"\\n\`\`\`\\n\\n✅ Use a templating language such as ERB, and place the template in a separate file.\\n\\n✅ When HTML strings must be used, sanitize user input:\\n\\n\`\`\`ruby\\nhtml = \\"<h1>#{strip_tags(params[:title])}</h1>\\"\\n\`\`\`\\n\\n## Resources\\n- [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_raw_html_using_user_input",
      "line_number": 2,
      "full_filename": "/tmp/bearer-scan/bad.rb",
      "filename": ".",
      "source": {
        "start": 2,
        "end": 2,
        "column": {
          "start": 1,
          "end": 28
        }
      },
      "sink": {
        "start": 2,
        "end": 2,
        "column": {
          "start": 1,
          "end": 28
        },
        "content": "\\"<h1>#{params[:oops]}</h1>\\""
      },
      "parent_line_number": 2,
      "snippet": "\\"<h1>#{params[:oops]}</h1>\\"",
      "fingerprint": "bbce316340479255472a6bc49330c542_1",
      "old_fingerprint": "eef01466c0f4aefe92a29f710d1513d9_1",
      "code_extract": "\\"<h1>#{params[:oops]}</h1>\\""
    },
    {
      "cwe_ids": [
        "79"
      ],
      "id": "ruby_lang_raw_html_using_user_input",
      "title": "Unsanitized user input in raw HTML strings (XSS)",
      "description": "## Description\\n\\nApplications should not include unsanitized user input in HTML. This\\ncan allow cross-site scripting (XSS) attacks.\\n\\n## Remediations\\n\\n❌ Avoid including user input directly in HTML strings:\\n\\n\`\`\`ruby\\nhtml = \\"<h1>#{params[:title]}</h1>\\"\\n\`\`\`\\n\\n✅ Use a templating language such as ERB, and place the template in a separate file.\\n\\n✅ When HTML strings must be used, sanitize user input:\\n\\n\`\`\`ruby\\nhtml = \\"<h1>#{strip_tags(params[:title])}</h1>\\"\\n\`\`\`\\n\\n## Resources\\n- [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_raw_html_using_user_input",
      "line_number": 4,
      "full_filename": "/tmp/bearer-scan/bad.rb",
      "filename": ".",
      "source": {
        "start": 4,
        "end": 4,
        "column": {
          "start": 1,
          "end": 31
        }
      },
      "sink": {
        "start": 4,
        "end": 4,
        "column": {
          "start": 1,
          "end": 31
        },
        "content": "raw(\\"Hello: #{params[:oops]}\\")"
      },
      "parent_line_number": 4,
      "snippet": "raw(\\"Hello: #{params[:oops]}\\")",
      "fingerprint": "bbce316340479255472a6bc49330c542_2",
      "old_fingerprint": "eef01466c0f4aefe92a29f710d1513d9_2",
      "code_extract": "raw(\\"Hello: #{params[:oops]}\\")"
    },
    {
      "cwe_ids": [
        "79"
      ],
      "id": "ruby_lang_raw_html_using_user_input",
      "title": "Unsanitized user input in raw HTML strings (XSS)",
      "description": "## Description\\n\\nApplications should not include unsanitized user input in HTML. This\\ncan allow cross-site scripting (XSS) attacks.\\n\\n## Remediations\\n\\n❌ Avoid including user input directly in HTML strings:\\n\\n\`\`\`ruby\\nhtml = \\"<h1>#{params[:title]}</h1>\\"\\n\`\`\`\\n\\n✅ Use a templating language such as ERB, and place the template in a separate file.\\n\\n✅ When HTML strings must be used, sanitize user input:\\n\\n\`\`\`ruby\\nhtml = \\"<h1>#{strip_tags(params[:title])}</h1>\\"\\n\`\`\`\\n\\n## Resources\\n- [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_raw_html_using_user_input",
      "line_number": 5,
      "full_filename": "/tmp/bearer-scan/bad.rb",
      "filename": ".",
      "source": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 33
        }
      },
      "sink": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 5,
          "end": 32
        },
        "content": "\\"<h1>#{params[:oops]}</h1>\\""
      },
      "parent_line_number": 5,
      "snippet": "\\"<h1>#{params[:oops]}</h1>\\"",
      "fingerprint": "bbce316340479255472a6bc49330c542_3",
      "old_fingerprint": "eef01466c0f4aefe92a29f710d1513d9_3",
      "code_extract": "raw(\\"<h1>#{params[:oops]}</h1>\\")"
    },
    {
      "cwe_ids": [
        "79"
      ],
      "id": "ruby_lang_raw_html_using_user_input",
      "title": "Unsanitized user input in raw HTML strings (XSS)",
      "description": "## Description\\n\\nApplications should not include unsanitized user input in HTML. This\\ncan allow cross-site scripting (XSS) attacks.\\n\\n## Remediations\\n\\n❌ Avoid including user input directly in HTML strings:\\n\\n\`\`\`ruby\\nhtml = \\"<h1>#{params[:title]}</h1>\\"\\n\`\`\`\\n\\n✅ Use a templating language such as ERB, and place the template in a separate file.\\n\\n✅ When HTML strings must be used, sanitize user input:\\n\\n\`\`\`ruby\\nhtml = \\"<h1>#{strip_tags(params[:title])}</h1>\\"\\n\`\`\`\\n\\n## Resources\\n- [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_raw_html_using_user_input",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/bad.rb",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 36
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 36
        },
        "content": "\\"Hello: #{params[:oops]}\\".html_safe"
      },
      "parent_line_number": 7,
      "snippet": "\\"Hello: #{params[:oops]}\\".html_safe",
      "fingerprint": "bbce316340479255472a6bc49330c542_5",
      "old_fingerprint": "eef01466c0f4aefe92a29f710d1513d9_5",
      "code_extract": "\\"Hello: #{params[:oops]}\\".html_safe"
    },
    {
      "cwe_ids": [
        "79"
      ],
      "id": "ruby_lang_raw_html_using_user_input",
      "title": "Unsanitized user input in raw HTML strings (XSS)",
      "description": "## Description\\n\\nApplications should not include unsanitized user input in HTML. This\\ncan allow cross-site scripting (XSS) attacks.\\n\\n## Remediations\\n\\n❌ Avoid including user input directly in HTML strings:\\n\\n\`\`\`ruby\\nhtml = \\"<h1>#{params[:title]}</h1>\\"\\n\`\`\`\\n\\n✅ Use a templating language such as ERB, and place the template in a separate file.\\n\\n✅ When HTML strings must be used, sanitize user input:\\n\\n\`\`\`ruby\\nhtml = \\"<h1>#{strip_tags(params[:title])}</h1>\\"\\n\`\`\`\\n\\n## Resources\\n- [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_raw_html_using_user_input",
      "line_number": 9,
      "full_filename": "/tmp/bearer-scan/bad.rb",
      "filename": ".",
      "source": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 34
        }
      },
      "sink": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 34
        },
        "content": "ERB.new(\\"Test: \\" + params[:oops])"
      },
      "parent_line_number": 9,
      "snippet": "ERB.new(\\"Test: \\" + params[:oops])",
      "fingerprint": "bbce316340479255472a6bc49330c542_6",
      "old_fingerprint": "eef01466c0f4aefe92a29f710d1513d9_6",
      "code_extract": "ERB.new(\\"Test: \\" + params[:oops])"
    }
  ]
}"
`;

exports[`ruby_lang_raw_html_using_user_input ok 1`] = `"{}"`;
