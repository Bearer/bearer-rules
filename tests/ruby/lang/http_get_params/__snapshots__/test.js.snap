// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ruby_lang_http_get_params datatype_in_param_hash 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "598"
      ],
      "id": "ruby_lang_http_get_params",
      "title": "Leakage of sensitive data in HTTP GET parameters",
      "description": "## Description\\nSensitive data should never be sent as part of the query string in HTTP GET requests. This rule checks if sensitive data types are sent as GET parameters.\\n\\n## Remediations\\nAvoid sending sensitive data though HTTP GET parameters since they are passed in plain text even while using HTTPS communication:\\n\\n❌ Avoid code like this:\\n\`\`\`ruby\\nHTTParty.get(\\n  'https://secure-api.com/user',\\n  {\\n    email: user.email\\n  }\\n)\\n\`\`\`\\n\\n✅ Instead, use the HTTP POST method if you need to send data:\\n\\n\`\`\`ruby\\nHTTParty.post(\\n  'https://secure-api.com/user',\\n  body: {\\n    email: user.email,\\n  }\\n)\\n\`\`\`\\n\\n✅ Or keep using HTTP Get but avoid using sending sensitive data:\\n\\n\`\`\`ruby\\nHTTParty.GET(\\n  'https://secure-api.com/user',\\n  {\\n    id: user.uuid\\n  }\\n)\\n\`\`\`\\n\\n<!--\\n## Resources\\n- [OWASP information exposure through URL query strings](https://owasp.org/www-community/vulnerabilities/Information_exposure_through_query_strings_in_url)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_http_get_params",
      "line_number": 1,
      "full_filename": "/tmp/bearer-scan/datatype_in_param_hash.rb",
      "filename": ".",
      "data_type": {
        "category_uuid": "14124881-6b92-4fc5-8005-ea7c1c09592e",
        "name": "Firstname"
      },
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 63,
          "end": 90
        }
      },
      "sink": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 95
        },
        "content": "HTTP.get(\\"https://my.api.com/users/search\\", params: { user: { first_name: user.first_name } })"
      },
      "parent_line_number": 1,
      "snippet": "HTTP.get(\\"https://my.api.com/users/search\\", params: { user: { first_name: user.first_name } })",
      "fingerprint": "8894dae3b2e5b5fbbe850e0eb0759f58_0",
      "old_fingerprint": "56c2e7ffa7bfaac1b9dae6bb93d074ec_0",
      "code_extract": "HTTP.get(\\"https://my.api.com/users/search\\", params: { user: { first_name: user.first_name } })"
    }
  ]
}"
`;

exports[`ruby_lang_http_get_params datatype_in_params 1`] = `
"{
  "critical": [
    {
      "cwe_ids": [
        "598"
      ],
      "id": "ruby_lang_http_get_params",
      "title": "Leakage of sensitive data in HTTP GET parameters",
      "description": "## Description\\nSensitive data should never be sent as part of the query string in HTTP GET requests. This rule checks if sensitive data types are sent as GET parameters.\\n\\n## Remediations\\nAvoid sending sensitive data though HTTP GET parameters since they are passed in plain text even while using HTTPS communication:\\n\\n❌ Avoid code like this:\\n\`\`\`ruby\\nHTTParty.get(\\n  'https://secure-api.com/user',\\n  {\\n    email: user.email\\n  }\\n)\\n\`\`\`\\n\\n✅ Instead, use the HTTP POST method if you need to send data:\\n\\n\`\`\`ruby\\nHTTParty.post(\\n  'https://secure-api.com/user',\\n  body: {\\n    email: user.email,\\n  }\\n)\\n\`\`\`\\n\\n✅ Or keep using HTTP Get but avoid using sending sensitive data:\\n\\n\`\`\`ruby\\nHTTParty.GET(\\n  'https://secure-api.com/user',\\n  {\\n    id: user.uuid\\n  }\\n)\\n\`\`\`\\n\\n<!--\\n## Resources\\n- [OWASP information exposure through URL query strings](https://owasp.org/www-community/vulnerabilities/Information_exposure_through_query_strings_in_url)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_http_get_params",
      "line_number": 1,
      "full_filename": "/tmp/bearer-scan/datatype_in_params.rb",
      "filename": ".",
      "data_type": {
        "category_uuid": "35b94efa-9b67-49b2-abb9-29b6a759a030",
        "name": "Ethnic Origin"
      },
      "category_groups": [
        "PII",
        "Personal Data",
        "Personal Data (Sensitive)"
      ],
      "source": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 60,
          "end": 78
        }
      },
      "sink": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 7,
          "end": 81
        },
        "content": "URI(\\"https://my.api.com/users/search?ethnic_origin=#{user.ethnic_origin}\\")"
      },
      "parent_line_number": 1,
      "snippet": "URI(\\"https://my.api.com/users/search?ethnic_origin=#{user.ethnic_origin}\\")",
      "fingerprint": "8894dae3b2e5b5fbbe850e0eb0759f58_0",
      "old_fingerprint": "3e9cb6017396c05df43fe1f2dff79bea_0",
      "code_extract": "uri = URI(\\"https://my.api.com/users/search?ethnic_origin=#{user.ethnic_origin}\\")"
    }
  ],
  "high": [
    {
      "cwe_ids": [
        "598"
      ],
      "id": "ruby_lang_http_get_params",
      "title": "Leakage of sensitive data in HTTP GET parameters",
      "description": "## Description\\nSensitive data should never be sent as part of the query string in HTTP GET requests. This rule checks if sensitive data types are sent as GET parameters.\\n\\n## Remediations\\nAvoid sending sensitive data though HTTP GET parameters since they are passed in plain text even while using HTTPS communication:\\n\\n❌ Avoid code like this:\\n\`\`\`ruby\\nHTTParty.get(\\n  'https://secure-api.com/user',\\n  {\\n    email: user.email\\n  }\\n)\\n\`\`\`\\n\\n✅ Instead, use the HTTP POST method if you need to send data:\\n\\n\`\`\`ruby\\nHTTParty.post(\\n  'https://secure-api.com/user',\\n  body: {\\n    email: user.email,\\n  }\\n)\\n\`\`\`\\n\\n✅ Or keep using HTTP Get but avoid using sending sensitive data:\\n\\n\`\`\`ruby\\nHTTParty.GET(\\n  'https://secure-api.com/user',\\n  {\\n    id: user.uuid\\n  }\\n)\\n\`\`\`\\n\\n<!--\\n## Resources\\n- [OWASP information exposure through URL query strings](https://owasp.org/www-community/vulnerabilities/Information_exposure_through_query_strings_in_url)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_lang_http_get_params",
      "line_number": 3,
      "full_filename": "/tmp/bearer-scan/datatype_in_params.rb",
      "filename": ".",
      "data_type": {
        "category_uuid": "14124881-6b92-4fc5-8005-ea7c1c09592e",
        "name": "Firstname"
      },
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 3,
        "end": 3,
        "column": {
          "start": 62,
          "end": 77
        }
      },
      "sink": {
        "start": 3,
        "end": 3,
        "column": {
          "start": 1,
          "end": 80
        },
        "content": "RestClient.get(\\"https://my.api.com/users/search?first_name=#{user.first_name}\\")"
      },
      "parent_line_number": 3,
      "snippet": "RestClient.get(\\"https://my.api.com/users/search?first_name=#{user.first_name}\\")",
      "fingerprint": "8894dae3b2e5b5fbbe850e0eb0759f58_1",
      "old_fingerprint": "3e9cb6017396c05df43fe1f2dff79bea_1",
      "code_extract": "RestClient.get(\\"https://my.api.com/users/search?first_name=#{user.first_name}\\")"
    }
  ]
}"
`;

exports[`ruby_lang_http_get_params ok_no_datatypes_in_params 1`] = `"{}"`;
