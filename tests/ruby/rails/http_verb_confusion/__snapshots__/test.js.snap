// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ruby_rails_http_verb_confusion ok 1`] = `"{}"`;

exports[`ruby_rails_http_verb_confusion unsafe 1`] = `
"{
  "medium": [
    {
      "cwe_ids": [
        "650"
      ],
      "id": "ruby_rails_http_verb_confusion",
      "title": "Potential for HTTP verb confusion detected.",
      "description": "## Description\\nRails uses the same actions for both GET and HEAD requests. When creating\\nactions that handle both GET and state altering verbs (eg. POST), the use\\nof \`request.get?\` can lead to unexpected state changes.\\n\\n### Remediations\\n\\n✅ Use separate action logic for GET and POST\\n\\n✅ Check for state altering verbs rather than GET:\\n\\n\`\`\`ruby\\nif request.post?\\n  alter_state\\nend\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_rails_http_verb_confusion",
      "line_number": 1,
      "full_filename": "/tmp/bearer-scan/unsafe.rb",
      "filename": ".",
      "source": {
        "start": 1,
        "end": 4,
        "column": {
          "start": 1,
          "end": 4
        }
      },
      "sink": {
        "start": 1,
        "end": 4,
        "column": {
          "start": 1,
          "end": 4
        },
        "content": "if request.get?\\nelse\\n  change_state\\nend"
      },
      "parent_line_number": 1,
      "snippet": "if request.get?\\nelse\\n  change_state\\nend",
      "fingerprint": "478a6bee5ed0d66cc8930155f8bb9fd8_0",
      "old_fingerprint": "a1ae60495215469cb3908a1adfa7d991_0"
    },
    {
      "cwe_ids": [
        "650"
      ],
      "id": "ruby_rails_http_verb_confusion",
      "title": "Potential for HTTP verb confusion detected.",
      "description": "## Description\\nRails uses the same actions for both GET and HEAD requests. When creating\\nactions that handle both GET and state altering verbs (eg. POST), the use\\nof \`request.get?\` can lead to unexpected state changes.\\n\\n### Remediations\\n\\n✅ Use separate action logic for GET and POST\\n\\n✅ Check for state altering verbs rather than GET:\\n\\n\`\`\`ruby\\nif request.post?\\n  alter_state\\nend\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_rails_http_verb_confusion",
      "line_number": 6,
      "full_filename": "/tmp/bearer-scan/unsafe.rb",
      "filename": ".",
      "source": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 1,
          "end": 33
        }
      },
      "sink": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 1,
          "end": 33
        },
        "content": "change_state unless request.get?"
      },
      "parent_line_number": 6,
      "snippet": "change_state unless request.get?",
      "fingerprint": "478a6bee5ed0d66cc8930155f8bb9fd8_1",
      "old_fingerprint": "a1ae60495215469cb3908a1adfa7d991_1"
    },
    {
      "cwe_ids": [
        "650"
      ],
      "id": "ruby_rails_http_verb_confusion",
      "title": "Potential for HTTP verb confusion detected.",
      "description": "## Description\\nRails uses the same actions for both GET and HEAD requests. When creating\\nactions that handle both GET and state altering verbs (eg. POST), the use\\nof \`request.get?\` can lead to unexpected state changes.\\n\\n### Remediations\\n\\n✅ Use separate action logic for GET and POST\\n\\n✅ Check for state altering verbs rather than GET:\\n\\n\`\`\`ruby\\nif request.post?\\n  alter_state\\nend\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_rails_http_verb_confusion",
      "line_number": 8,
      "full_filename": "/tmp/bearer-scan/unsafe.rb",
      "filename": ".",
      "source": {
        "start": 8,
        "end": 10,
        "column": {
          "start": 1,
          "end": 4
        }
      },
      "sink": {
        "start": 8,
        "end": 10,
        "column": {
          "start": 1,
          "end": 4
        },
        "content": "unless request.get?\\n  change_state\\nend"
      },
      "parent_line_number": 8,
      "snippet": "unless request.get?\\n  change_state\\nend",
      "fingerprint": "478a6bee5ed0d66cc8930155f8bb9fd8_2",
      "old_fingerprint": "a1ae60495215469cb3908a1adfa7d991_2"
    }
  ]
}"
`;
