// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ruby_rails_unsafe_cookie_serialization_strategy ok 1`] = `"{}"`;

exports[`ruby_rails_unsafe_cookie_serialization_strategy unsafe 1`] = `
"{
  "low": [
    {
      "cwe_ids": [
        "94"
      ],
      "id": "ruby_rails_unsafe_cookie_serialization_strategy",
      "title": "Unsafe cookie serialization strategy detected.",
      "description": "## Description\\nJSON is the safest serialization strategy for untrusted data, such as cookie data, to avoid malicious code injection. By default, Rails uses JSON to serialize cookie values.\\n\\n## Remediations\\n❌ Avoid overriding the default cookie serializer\\n\\n\`\`\`ruby\\nRails.application.config.action_dispatch.cookies_serializer = :marshal\\n\`\`\`\\n\\n❌ Use the hybrid (Marshal and JSON) serializer option as a temporary solution only, for example when migrating from Marshal to JSON.\\n\\n\`\`\`ruby\\nRails.application.config.action_dispatch.cookies_serializer = :hybrid\\n\`\`\`\\n\\n## Resources\\n- [OWASP Rails Goat on Marshal and Remote Code Execution](https://github.com/OWASP/railsgoat/wiki/Extras:-Remote-Code-Execution)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/ruby_rails_unsafe_cookie_serialization_strategy",
      "line_number": 1,
      "full_filename": "/tmp/bearer-scan/unsafe.rb",
      "filename": ".",
      "source": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 71
        }
      },
      "sink": {
        "start": 1,
        "end": 1,
        "column": {
          "start": 1,
          "end": 71
        },
        "content": "Rails.application.config.action_dispatch.cookies_serializer = :marshal"
      },
      "parent_line_number": 1,
      "snippet": "Rails.application.config.action_dispatch.cookies_serializer = :marshal",
      "fingerprint": "b92aa334ac9337d9b31e8f54da5f32b2_0",
      "old_fingerprint": "046b1f9ae0e080b6e442a2f53f520450_0"
    }
  ]
}"
`;
