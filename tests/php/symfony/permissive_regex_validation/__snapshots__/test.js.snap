// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php_symfony_permissive_regex_validation bad 1`] = `
"{
  "low": [
    {
      "cwe_ids": [
        "625"
      ],
      "id": "php_symfony_permissive_regex_validation",
      "title": "Validation using permissive regular expression detected.",
      "description": "## Description\\n\\nValidations using regular expressions should use the start of text (\\\\A) and\\nend of text (\\\\z or \\\\Z) boundaries.\\n\\n## Remediations\\n\\n❌ Avoid matching without start and end boundaries:\\n\\n\`\`\`php\\n#[Assert\\\\Regex('/foo/')]\\nprotected string $attribute;\\n\`\`\`\\n\\n❌ Avoid using line-based boundaries:\\n\\n\`\`\`php\\n#[Assert\\\\Regex('/^foo$/')]\\nprotected string $attribute;\\n\`\`\`\\n\\n✅ Use whole-text boundaries:\\n\\n\`\`\`php\\n#[Assert\\\\Regex('/\\\\Afoo\\\\z/')]\\nprotected string $attribute;\\n\`\`\`\\n\\n## Resources\\n- [Symfony validation](https://symfony.com/doc/current/validation.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_symfony_permissive_regex_validation",
      "line_number": 10,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 7,
          "end": 19
        }
      },
      "sink": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 7,
          "end": 19
        },
        "content": "Assert\\\\Regex"
      },
      "parent_line_number": 10,
      "snippet": "Assert\\\\Regex",
      "fingerprint": "5f18b47018d7a04705d92c8ad553596a_0",
      "old_fingerprint": "895b1c751d8732b928318e4316286719_0",
      "code_extract": "    #[Assert\\\\Regex('/\\\\Afoo/')]"
    },
    {
      "cwe_ids": [
        "625"
      ],
      "id": "php_symfony_permissive_regex_validation",
      "title": "Validation using permissive regular expression detected.",
      "description": "## Description\\n\\nValidations using regular expressions should use the start of text (\\\\A) and\\nend of text (\\\\z or \\\\Z) boundaries.\\n\\n## Remediations\\n\\n❌ Avoid matching without start and end boundaries:\\n\\n\`\`\`php\\n#[Assert\\\\Regex('/foo/')]\\nprotected string $attribute;\\n\`\`\`\\n\\n❌ Avoid using line-based boundaries:\\n\\n\`\`\`php\\n#[Assert\\\\Regex('/^foo$/')]\\nprotected string $attribute;\\n\`\`\`\\n\\n✅ Use whole-text boundaries:\\n\\n\`\`\`php\\n#[Assert\\\\Regex('/\\\\Afoo\\\\z/')]\\nprotected string $attribute;\\n\`\`\`\\n\\n## Resources\\n- [Symfony validation](https://symfony.com/doc/current/validation.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_symfony_permissive_regex_validation",
      "line_number": 13,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 7,
          "end": 52
        }
      },
      "sink": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 7,
          "end": 52
        },
        "content": "Symfony\\\\Component\\\\Validator\\\\Constraints\\\\Regex"
      },
      "parent_line_number": 13,
      "snippet": "Symfony\\\\Component\\\\Validator\\\\Constraints\\\\Regex",
      "fingerprint": "5f18b47018d7a04705d92c8ad553596a_1",
      "old_fingerprint": "895b1c751d8732b928318e4316286719_1",
      "code_extract": "    #[Symfony\\\\Component\\\\Validator\\\\Constraints\\\\Regex("
    },
    {
      "cwe_ids": [
        "625"
      ],
      "id": "php_symfony_permissive_regex_validation",
      "title": "Validation using permissive regular expression detected.",
      "description": "## Description\\n\\nValidations using regular expressions should use the start of text (\\\\A) and\\nend of text (\\\\z or \\\\Z) boundaries.\\n\\n## Remediations\\n\\n❌ Avoid matching without start and end boundaries:\\n\\n\`\`\`php\\n#[Assert\\\\Regex('/foo/')]\\nprotected string $attribute;\\n\`\`\`\\n\\n❌ Avoid using line-based boundaries:\\n\\n\`\`\`php\\n#[Assert\\\\Regex('/^foo$/')]\\nprotected string $attribute;\\n\`\`\`\\n\\n✅ Use whole-text boundaries:\\n\\n\`\`\`php\\n#[Assert\\\\Regex('/\\\\Afoo\\\\z/')]\\nprotected string $attribute;\\n\`\`\`\\n\\n## Resources\\n- [Symfony validation](https://symfony.com/doc/current/validation.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_symfony_permissive_regex_validation",
      "line_number": 21,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 21,
        "end": 24,
        "column": {
          "start": 49,
          "end": 11
        }
      },
      "sink": {
        "start": 21,
        "end": 24,
        "column": {
          "start": 49,
          "end": 11
        },
        "content": "new Assert\\\\Regex([\\n            'pattern' => '/^foo$/',\\n            'message' => 'Foo must be valid',\\n        ])"
      },
      "parent_line_number": 21,
      "snippet": "new Assert\\\\Regex([\\n            'pattern' => '/^foo$/',\\n            'message' => 'Foo must be valid',\\n        ])",
      "fingerprint": "5f18b47018d7a04705d92c8ad553596a_2",
      "old_fingerprint": "895b1c751d8732b928318e4316286719_2",
      "code_extract": "        $metadata->addPropertyConstraint('foo', new Assert\\\\Regex([\\n            'pattern' => '/^foo$/',\\n            'message' => 'Foo must be valid',\\n        ]));"
    },
    {
      "cwe_ids": [
        "625"
      ],
      "id": "php_symfony_permissive_regex_validation",
      "title": "Validation using permissive regular expression detected.",
      "description": "## Description\\n\\nValidations using regular expressions should use the start of text (\\\\A) and\\nend of text (\\\\z or \\\\Z) boundaries.\\n\\n## Remediations\\n\\n❌ Avoid matching without start and end boundaries:\\n\\n\`\`\`php\\n#[Assert\\\\Regex('/foo/')]\\nprotected string $attribute;\\n\`\`\`\\n\\n❌ Avoid using line-based boundaries:\\n\\n\`\`\`php\\n#[Assert\\\\Regex('/^foo$/')]\\nprotected string $attribute;\\n\`\`\`\\n\\n✅ Use whole-text boundaries:\\n\\n\`\`\`php\\n#[Assert\\\\Regex('/\\\\Afoo\\\\z/')]\\nprotected string $attribute;\\n\`\`\`\\n\\n## Resources\\n- [Symfony validation](https://symfony.com/doc/current/validation.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_symfony_permissive_regex_validation",
      "line_number": 25,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 25,
        "end": 25,
        "column": {
          "start": 49,
          "end": 107
        }
      },
      "sink": {
        "start": 25,
        "end": 25,
        "column": {
          "start": 49,
          "end": 107
        },
        "content": "new Symfony\\\\Component\\\\Validator\\\\Constraints\\\\Regex('/foo/')"
      },
      "parent_line_number": 25,
      "snippet": "new Symfony\\\\Component\\\\Validator\\\\Constraints\\\\Regex('/foo/')",
      "fingerprint": "5f18b47018d7a04705d92c8ad553596a_3",
      "old_fingerprint": "895b1c751d8732b928318e4316286719_3",
      "code_extract": "        $metadata->addPropertyConstraint('bar', new Symfony\\\\Component\\\\Validator\\\\Constraints\\\\Regex('/foo/'));"
    }
  ]
}"
`;

exports[`php_symfony_permissive_regex_validation ok 1`] = `"{}"`;
