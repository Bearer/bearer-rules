// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php_lang_http_url_using_user_input bad 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 5,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 9,
          "end": 31
        }
      },
      "sink": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 9,
          "end": 31
        },
        "content": "curl_init($user_input)"
      },
      "parent_line_number": 5,
      "snippet": "curl_init($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_0",
      "old_fingerprint": "d997e86e797b56cf265232eb33363f80_0",
      "code_extract": "$curl = curl_init($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 6,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 1,
          "end": 45
        }
      },
      "sink": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 1,
          "end": 45
        },
        "content": "curl_setopt($curl, CURLOPT_URL, $user_input)"
      },
      "parent_line_number": 6,
      "snippet": "curl_setopt($curl, CURLOPT_URL, $user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_1",
      "old_fingerprint": "d997e86e797b56cf265232eb33363f80_1",
      "code_extract": "curl_setopt($curl, CURLOPT_URL, $user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 8,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 1,
          "end": 37
        }
      },
      "sink": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 1,
          "end": 37
        },
        "content": "file_get_contents($user_input, true)"
      },
      "parent_line_number": 8,
      "snippet": "file_get_contents($user_input, true)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_2",
      "old_fingerprint": "d997e86e797b56cf265232eb33363f80_2",
      "code_extract": "file_get_contents($user_input, true);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 9,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 24
        }
      },
      "sink": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 24
        },
        "content": "fopen($user_input, \\"r\\")"
      },
      "parent_line_number": 9,
      "snippet": "fopen($user_input, \\"r\\")",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_3",
      "old_fingerprint": "d997e86e797b56cf265232eb33363f80_3",
      "code_extract": "fopen($user_input, \\"r\\");"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 11,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 12,
          "end": 88
        }
      },
      "sink": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 12,
          "end": 88
        },
        "content": "new http\\\\Client\\\\Request(\\"GET\\", $user_input, [\\"User-Agent\\"=>\\"My Client/0.1\\"])"
      },
      "parent_line_number": 11,
      "snippet": "new http\\\\Client\\\\Request(\\"GET\\", $user_input, [\\"User-Agent\\"=>\\"My Client/0.1\\"])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_4",
      "old_fingerprint": "d997e86e797b56cf265232eb33363f80_4",
      "code_extract": "$request = new http\\\\Client\\\\Request(\\"GET\\", $user_input, [\\"User-Agent\\"=>\\"My Client/0.1\\"]);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 17,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 11,
          "end": 58
        }
      },
      "sink": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 11,
          "end": 58
        },
        "content": "new SoapClient(\\"something.wsdl\\", $soap_options)"
      },
      "parent_line_number": 17,
      "snippet": "new SoapClient(\\"something.wsdl\\", $soap_options)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_5",
      "old_fingerprint": "d997e86e797b56cf265232eb33363f80_5",
      "code_extract": "$client = new SoapClient(\\"something.wsdl\\", $soap_options);"
    }
  ]
}"
`;

exports[`php_lang_http_url_using_user_input bad_buzz 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 10,
      "full_filename": "/tmp/bearer-scan/bad_buzz.php",
      "filename": ".",
      "source": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 1,
          "end": 37
        }
      },
      "sink": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 1,
          "end": 37
        },
        "content": "$browser->get($user_input, $headers)"
      },
      "parent_line_number": 10,
      "snippet": "$browser->get($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_0",
      "old_fingerprint": "e1a706a8ad0cb6d5a428619642cc825a_0",
      "code_extract": "$browser->get($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 11,
      "full_filename": "/tmp/bearer-scan/bad_buzz.php",
      "filename": ".",
      "source": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 1,
          "end": 38
        }
      },
      "sink": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 1,
          "end": 38
        },
        "content": "$browser->post($user_input, $headers)"
      },
      "parent_line_number": 11,
      "snippet": "$browser->post($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_1",
      "old_fingerprint": "e1a706a8ad0cb6d5a428619642cc825a_1",
      "code_extract": "$browser->post($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 12,
      "full_filename": "/tmp/bearer-scan/bad_buzz.php",
      "filename": ".",
      "source": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 38
        }
      },
      "sink": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 38
        },
        "content": "$browser->head($user_input, $headers)"
      },
      "parent_line_number": 12,
      "snippet": "$browser->head($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_2",
      "old_fingerprint": "e1a706a8ad0cb6d5a428619642cc825a_2",
      "code_extract": "$browser->head($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 13,
      "full_filename": "/tmp/bearer-scan/bad_buzz.php",
      "filename": ".",
      "source": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 1,
          "end": 39
        }
      },
      "sink": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 1,
          "end": 39
        },
        "content": "$browser->patch($user_input, $headers)"
      },
      "parent_line_number": 13,
      "snippet": "$browser->patch($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_3",
      "old_fingerprint": "e1a706a8ad0cb6d5a428619642cc825a_3",
      "code_extract": "$browser->patch($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 14,
      "full_filename": "/tmp/bearer-scan/bad_buzz.php",
      "filename": ".",
      "source": {
        "start": 14,
        "end": 14,
        "column": {
          "start": 1,
          "end": 37
        }
      },
      "sink": {
        "start": 14,
        "end": 14,
        "column": {
          "start": 1,
          "end": 37
        },
        "content": "$browser->put($user_input, $headers)"
      },
      "parent_line_number": 14,
      "snippet": "$browser->put($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_4",
      "old_fingerprint": "e1a706a8ad0cb6d5a428619642cc825a_4",
      "code_extract": "$browser->put($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 15,
      "full_filename": "/tmp/bearer-scan/bad_buzz.php",
      "filename": ".",
      "source": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 1,
          "end": 40
        }
      },
      "sink": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 1,
          "end": 40
        },
        "content": "$browser->delete($user_input, $headers)"
      },
      "parent_line_number": 15,
      "snippet": "$browser->delete($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_5",
      "old_fingerprint": "e1a706a8ad0cb6d5a428619642cc825a_5",
      "code_extract": "$browser->delete($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 17,
      "full_filename": "/tmp/bearer-scan/bad_buzz.php",
      "filename": ".",
      "source": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 1,
          "end": 48
        }
      },
      "sink": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 1,
          "end": 48
        },
        "content": "$browser->request(\\"GET\\", $user_input, $headers)"
      },
      "parent_line_number": 17,
      "snippet": "$browser->request(\\"GET\\", $user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_6",
      "old_fingerprint": "e1a706a8ad0cb6d5a428619642cc825a_6",
      "code_extract": "$browser->request(\\"GET\\", $user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 19,
      "full_filename": "/tmp/bearer-scan/bad_buzz.php",
      "filename": ".",
      "source": {
        "start": 19,
        "end": 19,
        "column": {
          "start": 1,
          "end": 54
        }
      },
      "sink": {
        "start": 19,
        "end": 19,
        "column": {
          "start": 1,
          "end": 54
        },
        "content": "$browser->submitForm($user_input, ['user' => 'Fred'])"
      },
      "parent_line_number": 19,
      "snippet": "$browser->submitForm($user_input, ['user' => 'Fred'])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_7",
      "old_fingerprint": "e1a706a8ad0cb6d5a428619642cc825a_7",
      "code_extract": "$browser->submitForm($user_input, ['user' => 'Fred']);"
    }
  ]
}"
`;

exports[`php_lang_http_url_using_user_input bad_guzzle 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 7,
        "end": 10,
        "column": {
          "start": 11,
          "end": 3
        }
      },
      "sink": {
        "start": 7,
        "end": 10,
        "column": {
          "start": 11,
          "end": 3
        },
        "content": "new Client([\\n  'base_uri' => $user_input,\\n  'timeout'  => 2.0,\\n])"
      },
      "parent_line_number": 7,
      "snippet": "new Client([\\n  'base_uri' => $user_input,\\n  'timeout'  => 2.0,\\n])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_0",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_0",
      "code_extract": "$client = new Client([\\n  'base_uri' => $user_input,\\n  'timeout'  => 2.0,\\n]);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 12,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 12,
        "end": 14,
        "column": {
          "start": 13,
          "end": 3
        }
      },
      "sink": {
        "start": 12,
        "end": 14,
        "column": {
          "start": 13,
          "end": 3
        },
        "content": "$client->request(\\"GET\\", $user_input, [\\n  'auth' => ['user', 'pass']\\n])"
      },
      "parent_line_number": 12,
      "snippet": "$client->request(\\"GET\\", $user_input, [\\n  'auth' => ['user', 'pass']\\n])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_1",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_1",
      "code_extract": "$response = $client->request(\\"GET\\", $user_input, [\\n  'auth' => ['user', 'pass']\\n]);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 15,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 13,
          "end": 58
        }
      },
      "sink": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 13,
          "end": 58
        },
        "content": "$client->requestAsync(\\"GET\\", $user_input, [])"
      },
      "parent_line_number": 15,
      "snippet": "$client->requestAsync(\\"GET\\", $user_input, [])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_2",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_2",
      "code_extract": "$response = $client->requestAsync(\\"GET\\", $user_input, []);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 17,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 1,
          "end": 26
        }
      },
      "sink": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 1,
          "end": 26
        },
        "content": "$client->get($user_input)"
      },
      "parent_line_number": 17,
      "snippet": "$client->get($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_3",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_3",
      "code_extract": "$client->get($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 18,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 18,
        "end": 18,
        "column": {
          "start": 1,
          "end": 29
        }
      },
      "sink": {
        "start": 18,
        "end": 18,
        "column": {
          "start": 1,
          "end": 29
        },
        "content": "$client->delete($user_input)"
      },
      "parent_line_number": 18,
      "snippet": "$client->delete($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_4",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_4",
      "code_extract": "$client->delete($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 19,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 19,
        "end": 19,
        "column": {
          "start": 1,
          "end": 27
        }
      },
      "sink": {
        "start": 19,
        "end": 19,
        "column": {
          "start": 1,
          "end": 27
        },
        "content": "$client->head($user_input)"
      },
      "parent_line_number": 19,
      "snippet": "$client->head($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_5",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_5",
      "code_extract": "$client->head($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 20,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 20,
        "end": 20,
        "column": {
          "start": 1,
          "end": 30
        }
      },
      "sink": {
        "start": 20,
        "end": 20,
        "column": {
          "start": 1,
          "end": 30
        },
        "content": "$client->options($user_input)"
      },
      "parent_line_number": 20,
      "snippet": "$client->options($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_6",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_6",
      "code_extract": "$client->options($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 21,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 21,
        "end": 21,
        "column": {
          "start": 1,
          "end": 28
        }
      },
      "sink": {
        "start": 21,
        "end": 21,
        "column": {
          "start": 1,
          "end": 28
        },
        "content": "$client->patch($user_input)"
      },
      "parent_line_number": 21,
      "snippet": "$client->patch($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_7",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_7",
      "code_extract": "$client->patch($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 22,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 22,
        "end": 22,
        "column": {
          "start": 1,
          "end": 27
        }
      },
      "sink": {
        "start": 22,
        "end": 22,
        "column": {
          "start": 1,
          "end": 27
        },
        "content": "$client->post($user_input)"
      },
      "parent_line_number": 22,
      "snippet": "$client->post($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_8",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_8",
      "code_extract": "$client->post($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 23,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 23,
        "end": 23,
        "column": {
          "start": 1,
          "end": 26
        }
      },
      "sink": {
        "start": 23,
        "end": 23,
        "column": {
          "start": 1,
          "end": 26
        },
        "content": "$client->put($user_input)"
      },
      "parent_line_number": 23,
      "snippet": "$client->put($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_9",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_9",
      "code_extract": "$client->put($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 24,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 24,
        "end": 24,
        "column": {
          "start": 1,
          "end": 31
        }
      },
      "sink": {
        "start": 24,
        "end": 24,
        "column": {
          "start": 1,
          "end": 31
        },
        "content": "$client->getAsync($user_input)"
      },
      "parent_line_number": 24,
      "snippet": "$client->getAsync($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_10",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_10",
      "code_extract": "$client->getAsync($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 25,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 25,
        "end": 25,
        "column": {
          "start": 1,
          "end": 34
        }
      },
      "sink": {
        "start": 25,
        "end": 25,
        "column": {
          "start": 1,
          "end": 34
        },
        "content": "$client->deleteAsync($user_input)"
      },
      "parent_line_number": 25,
      "snippet": "$client->deleteAsync($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_11",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_11",
      "code_extract": "$client->deleteAsync($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 26,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 26,
        "end": 26,
        "column": {
          "start": 1,
          "end": 32
        }
      },
      "sink": {
        "start": 26,
        "end": 26,
        "column": {
          "start": 1,
          "end": 32
        },
        "content": "$client->headAsync($user_input)"
      },
      "parent_line_number": 26,
      "snippet": "$client->headAsync($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_12",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_12",
      "code_extract": "$client->headAsync($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 27,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 27,
        "end": 27,
        "column": {
          "start": 1,
          "end": 35
        }
      },
      "sink": {
        "start": 27,
        "end": 27,
        "column": {
          "start": 1,
          "end": 35
        },
        "content": "$client->optionsAsync($user_input)"
      },
      "parent_line_number": 27,
      "snippet": "$client->optionsAsync($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_13",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_13",
      "code_extract": "$client->optionsAsync($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 28,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 28,
        "end": 28,
        "column": {
          "start": 1,
          "end": 33
        }
      },
      "sink": {
        "start": 28,
        "end": 28,
        "column": {
          "start": 1,
          "end": 33
        },
        "content": "$client->patchAsync($user_input)"
      },
      "parent_line_number": 28,
      "snippet": "$client->patchAsync($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_14",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_14",
      "code_extract": "$client->patchAsync($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 29,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 29,
        "end": 29,
        "column": {
          "start": 1,
          "end": 32
        }
      },
      "sink": {
        "start": 29,
        "end": 29,
        "column": {
          "start": 1,
          "end": 32
        },
        "content": "$client->postAsync($user_input)"
      },
      "parent_line_number": 29,
      "snippet": "$client->postAsync($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_15",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_15",
      "code_extract": "$client->postAsync($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 30,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 30,
        "end": 30,
        "column": {
          "start": 1,
          "end": 31
        }
      },
      "sink": {
        "start": 30,
        "end": 30,
        "column": {
          "start": 1,
          "end": 31
        },
        "content": "$client->putAsync($user_input)"
      },
      "parent_line_number": 30,
      "snippet": "$client->putAsync($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_16",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_16",
      "code_extract": "$client->putAsync($user_input);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 32,
      "full_filename": "/tmp/bearer-scan/bad_guzzle.php",
      "filename": ".",
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 32,
        "end": 32,
        "column": {
          "start": 12,
          "end": 54
        }
      },
      "sink": {
        "start": 32,
        "end": 32,
        "column": {
          "start": 12,
          "end": 54
        },
        "content": "new Request('HEAD', $user_input, $headers)"
      },
      "parent_line_number": 32,
      "snippet": "new Request('HEAD', $user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_17",
      "old_fingerprint": "17e83d0cc3031c8657e6e7114ca5f644_17",
      "code_extract": "$request = new Request('HEAD', $user_input, $headers);"
    }
  ]
}"
`;

exports[`php_lang_http_url_using_user_input bad_httplug 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 11,
      "full_filename": "/tmp/bearer-scan/bad_httplug.php",
      "filename": ".",
      "source": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 5,
          "end": 55
        }
      },
      "sink": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 5,
          "end": 55
        },
        "content": "$messageFactory->createRequest('GET', $user_input)"
      },
      "parent_line_number": 11,
      "snippet": "$messageFactory->createRequest('GET', $user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_0",
      "old_fingerprint": "c511bf49451d11b55425442ba1c7e75a_0",
      "code_extract": "    $messageFactory->createRequest('GET', $user_input)"
    }
  ]
}"
`;

exports[`php_lang_http_url_using_user_input bad_laminas 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/bad_laminas.php",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 10,
        "column": {
          "start": 11,
          "end": 3
        }
      },
      "sink": {
        "start": 7,
        "end": 10,
        "column": {
          "start": 11,
          "end": 3
        },
        "content": "new Client($user_input, [\\n  'maxredirects' => 0,\\n  'timeout'      => 30,\\n])"
      },
      "parent_line_number": 7,
      "snippet": "new Client($user_input, [\\n  'maxredirects' => 0,\\n  'timeout'      => 30,\\n])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_0",
      "old_fingerprint": "4d3e4a709b8a1f392ede737a126da323_0",
      "code_extract": "$client = new Client($user_input, [\\n  'maxredirects' => 0,\\n  'timeout'      => 30,\\n]);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 13,
      "full_filename": "/tmp/bearer-scan/bad_laminas.php",
      "filename": ".",
      "source": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 1,
          "end": 30
        }
      },
      "sink": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 1,
          "end": 30
        },
        "content": "$request->setUri($user_input)"
      },
      "parent_line_number": 13,
      "snippet": "$request->setUri($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_1",
      "old_fingerprint": "4d3e4a709b8a1f392ede737a126da323_1",
      "code_extract": "$request->setUri($user_input);"
    }
  ]
}"
`;

exports[`php_lang_http_url_using_user_input bad_laravel 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/bad_laravel.php",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 28
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 28
        },
        "content": "Http::head($user_input, [])"
      },
      "parent_line_number": 7,
      "snippet": "Http::head($user_input, [])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_0",
      "old_fingerprint": "8d6327c475a7787e3600513675cc2cfd_0",
      "code_extract": "Http::head($user_input, []);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 8,
      "full_filename": "/tmp/bearer-scan/bad_laravel.php",
      "filename": ".",
      "source": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 1,
          "end": 27
        }
      },
      "sink": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 1,
          "end": 27
        },
        "content": "Http::get($user_input, [])"
      },
      "parent_line_number": 8,
      "snippet": "Http::get($user_input, [])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_1",
      "old_fingerprint": "8d6327c475a7787e3600513675cc2cfd_1",
      "code_extract": "Http::get($user_input, []);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 9,
      "full_filename": "/tmp/bearer-scan/bad_laravel.php",
      "filename": ".",
      "source": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 28
        }
      },
      "sink": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 28
        },
        "content": "Http::post($user_input, [])"
      },
      "parent_line_number": 9,
      "snippet": "Http::post($user_input, [])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_2",
      "old_fingerprint": "8d6327c475a7787e3600513675cc2cfd_2",
      "code_extract": "Http::post($user_input, []);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 10,
      "full_filename": "/tmp/bearer-scan/bad_laravel.php",
      "filename": ".",
      "source": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 1,
          "end": 27
        }
      },
      "sink": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 1,
          "end": 27
        },
        "content": "Http::put($user_input, [])"
      },
      "parent_line_number": 10,
      "snippet": "Http::put($user_input, [])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_3",
      "old_fingerprint": "8d6327c475a7787e3600513675cc2cfd_3",
      "code_extract": "Http::put($user_input, []);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 11,
      "full_filename": "/tmp/bearer-scan/bad_laravel.php",
      "filename": ".",
      "source": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 1,
          "end": 29
        }
      },
      "sink": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 1,
          "end": 29
        },
        "content": "Http::patch($user_input, [])"
      },
      "parent_line_number": 11,
      "snippet": "Http::patch($user_input, [])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_4",
      "old_fingerprint": "8d6327c475a7787e3600513675cc2cfd_4",
      "code_extract": "Http::patch($user_input, []);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 12,
      "full_filename": "/tmp/bearer-scan/bad_laravel.php",
      "filename": ".",
      "source": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 30
        }
      },
      "sink": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 30
        },
        "content": "Http::delete($user_input, [])"
      },
      "parent_line_number": 12,
      "snippet": "Http::delete($user_input, [])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_5",
      "old_fingerprint": "8d6327c475a7787e3600513675cc2cfd_5",
      "code_extract": "Http::delete($user_input, []);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 14,
      "full_filename": "/tmp/bearer-scan/bad_laravel.php",
      "filename": ".",
      "source": {
        "start": 14,
        "end": 17,
        "column": {
          "start": 1,
          "end": 3
        }
      },
      "sink": {
        "start": 14,
        "end": 17,
        "column": {
          "start": 1,
          "end": 3
        },
        "content": "Http::withUrlParameters([\\n  'endpoint' => $user_input,\\n  'page' => 'docs',\\n])"
      },
      "parent_line_number": 14,
      "snippet": "Http::withUrlParameters([\\n  'endpoint' => $user_input,\\n  'page' => 'docs',\\n])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_6",
      "old_fingerprint": "8d6327c475a7787e3600513675cc2cfd_6",
      "code_extract": "Http::withUrlParameters([\\n  'endpoint' => $user_input,\\n  'page' => 'docs',\\n])->get('{+endpoint}/{page}');"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 19,
      "full_filename": "/tmp/bearer-scan/bad_laravel.php",
      "filename": ".",
      "source": {
        "start": 19,
        "end": 22,
        "column": {
          "start": 1,
          "end": 21
        }
      },
      "sink": {
        "start": 19,
        "end": 22,
        "column": {
          "start": 1,
          "end": 21
        },
        "content": "Http::withQueryParameters([\\n    'name' => 'Taylor',\\n    'page' => 1,\\n])->get($user_input)"
      },
      "parent_line_number": 19,
      "snippet": "Http::withQueryParameters([\\n    'name' => 'Taylor',\\n    'page' => 1,\\n])->get($user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_7",
      "old_fingerprint": "8d6327c475a7787e3600513675cc2cfd_7",
      "code_extract": "Http::withQueryParameters([\\n    'name' => 'Taylor',\\n    'page' => 1,\\n])->get($user_input);"
    }
  ]
}"
`;

exports[`php_lang_http_url_using_user_input bad_pecl_http 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/bad_pecl_http.php",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 8,
          "end": 39
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 8,
          "end": 39
        },
        "content": "new Request(\\"GET\\", $user_input)"
      },
      "parent_line_number": 7,
      "snippet": "new Request(\\"GET\\", $user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_0",
      "old_fingerprint": "0e87bc7019e7fab6007e2a8d11ba46bf_0",
      "code_extract": "$req = new Request(\\"GET\\", $user_input);"
    }
  ]
}"
`;

exports[`php_lang_http_url_using_user_input bad_requests 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 37
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 37
        },
        "content": "Requests::get($user_input, $headers)"
      },
      "parent_line_number": 7,
      "snippet": "Requests::get($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_0",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_0",
      "code_extract": "Requests::get($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 8,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 1,
          "end": 38
        }
      },
      "sink": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 1,
          "end": 38
        },
        "content": "Requests::head($user_input, $headers)"
      },
      "parent_line_number": 8,
      "snippet": "Requests::head($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_1",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_1",
      "code_extract": "Requests::head($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 9,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 40
        }
      },
      "sink": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 40
        },
        "content": "Requests::delete($user_input, $headers)"
      },
      "parent_line_number": 9,
      "snippet": "Requests::delete($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_2",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_2",
      "code_extract": "Requests::delete($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 10,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 1,
          "end": 39
        }
      },
      "sink": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 1,
          "end": 39
        },
        "content": "Requests::trace($user_input, $headers)"
      },
      "parent_line_number": 10,
      "snippet": "Requests::trace($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_3",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_3",
      "code_extract": "Requests::trace($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 11,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 1,
          "end": 38
        }
      },
      "sink": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 1,
          "end": 38
        },
        "content": "Requests::post($user_input, $headers)"
      },
      "parent_line_number": 11,
      "snippet": "Requests::post($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_4",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_4",
      "code_extract": "Requests::post($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 12,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 37
        }
      },
      "sink": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 37
        },
        "content": "Requests::put($user_input, $headers)"
      },
      "parent_line_number": 12,
      "snippet": "Requests::put($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_5",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_5",
      "code_extract": "Requests::put($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 13,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 1,
          "end": 41
        }
      },
      "sink": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 1,
          "end": 41
        },
        "content": "Requests::options($user_input, $headers)"
      },
      "parent_line_number": 13,
      "snippet": "Requests::options($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_6",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_6",
      "code_extract": "Requests::options($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 14,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 14,
        "end": 14,
        "column": {
          "start": 1,
          "end": 39
        }
      },
      "sink": {
        "start": 14,
        "end": 14,
        "column": {
          "start": 1,
          "end": 39
        },
        "content": "Requests::patch($user_input, $headers)"
      },
      "parent_line_number": 14,
      "snippet": "Requests::patch($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_7",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_7",
      "code_extract": "Requests::patch($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 15,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 1,
          "end": 41
        }
      },
      "sink": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 1,
          "end": 41
        },
        "content": "Requests::request($user_input, $headers)"
      },
      "parent_line_number": 15,
      "snippet": "Requests::request($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_8",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_8",
      "code_extract": "Requests::request($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 17,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 17,
        "end": 20,
        "column": {
          "start": 1,
          "end": 7
        }
      },
      "sink": {
        "start": 17,
        "end": 20,
        "column": {
          "start": 1,
          "end": 7
        },
        "content": "WpOrg\\\\Requests\\\\Requests::request_multiple([\\n  \\"one\\" => [\\"headers\\" => $headers, \\"url\\" => $user_input],\\n  \\"two\\" => [\\"headers\\" => $headers, \\"url\\" => \\"https://ok.example.com\\"]\\n], [])"
      },
      "parent_line_number": 17,
      "snippet": "WpOrg\\\\Requests\\\\Requests::request_multiple([\\n  \\"one\\" => [\\"headers\\" => $headers, \\"url\\" => $user_input],\\n  \\"two\\" => [\\"headers\\" => $headers, \\"url\\" => \\"https://ok.example.com\\"]\\n], [])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_9",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_9",
      "code_extract": "WpOrg\\\\Requests\\\\Requests::request_multiple([\\n  \\"one\\" => [\\"headers\\" => $headers, \\"url\\" => $user_input],\\n  \\"two\\" => [\\"headers\\" => $headers, \\"url\\" => \\"https://ok.example.com\\"]\\n], []);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 22,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 22,
        "end": 22,
        "column": {
          "start": 12,
          "end": 61
        }
      },
      "sink": {
        "start": 22,
        "end": 22,
        "column": {
          "start": 12,
          "end": 61
        },
        "content": "new WpOrg\\\\Requests\\\\Session($user_input, $headers)"
      },
      "parent_line_number": 22,
      "snippet": "new WpOrg\\\\Requests\\\\Session($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_10",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_10",
      "code_extract": "$session = new WpOrg\\\\Requests\\\\Session($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 24,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 24,
        "end": 24,
        "column": {
          "start": 1,
          "end": 37
        }
      },
      "sink": {
        "start": 24,
        "end": 24,
        "column": {
          "start": 1,
          "end": 37
        },
        "content": "$session->get($user_input, $headers)"
      },
      "parent_line_number": 24,
      "snippet": "$session->get($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_11",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_11",
      "code_extract": "$session->get($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 25,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 25,
        "end": 25,
        "column": {
          "start": 1,
          "end": 38
        }
      },
      "sink": {
        "start": 25,
        "end": 25,
        "column": {
          "start": 1,
          "end": 38
        },
        "content": "$session->head($user_input, $headers)"
      },
      "parent_line_number": 25,
      "snippet": "$session->head($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_12",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_12",
      "code_extract": "$session->head($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 26,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 26,
        "end": 26,
        "column": {
          "start": 1,
          "end": 40
        }
      },
      "sink": {
        "start": 26,
        "end": 26,
        "column": {
          "start": 1,
          "end": 40
        },
        "content": "$session->delete($user_input, $headers)"
      },
      "parent_line_number": 26,
      "snippet": "$session->delete($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_13",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_13",
      "code_extract": "$session->delete($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 27,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 27,
        "end": 27,
        "column": {
          "start": 1,
          "end": 38
        }
      },
      "sink": {
        "start": 27,
        "end": 27,
        "column": {
          "start": 1,
          "end": 38
        },
        "content": "$session->post($user_input, $headers)"
      },
      "parent_line_number": 27,
      "snippet": "$session->post($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_14",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_14",
      "code_extract": "$session->post($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 28,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 28,
        "end": 28,
        "column": {
          "start": 1,
          "end": 37
        }
      },
      "sink": {
        "start": 28,
        "end": 28,
        "column": {
          "start": 1,
          "end": 37
        },
        "content": "$session->put($user_input, $headers)"
      },
      "parent_line_number": 28,
      "snippet": "$session->put($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_15",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_15",
      "code_extract": "$session->put($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 29,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 29,
        "end": 29,
        "column": {
          "start": 1,
          "end": 39
        }
      },
      "sink": {
        "start": 29,
        "end": 29,
        "column": {
          "start": 1,
          "end": 39
        },
        "content": "$session->patch($user_input, $headers)"
      },
      "parent_line_number": 29,
      "snippet": "$session->patch($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_16",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_16",
      "code_extract": "$session->patch($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 30,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 30,
        "end": 30,
        "column": {
          "start": 1,
          "end": 41
        }
      },
      "sink": {
        "start": 30,
        "end": 30,
        "column": {
          "start": 1,
          "end": 41
        },
        "content": "$session->request($user_input, $headers)"
      },
      "parent_line_number": 30,
      "snippet": "$session->request($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_17",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_17",
      "code_extract": "$session->request($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 32,
      "full_filename": "/tmp/bearer-scan/bad_requests.php",
      "filename": ".",
      "source": {
        "start": 32,
        "end": 35,
        "column": {
          "start": 1,
          "end": 7
        }
      },
      "sink": {
        "start": 32,
        "end": 35,
        "column": {
          "start": 1,
          "end": 7
        },
        "content": "$session->request_multiple([\\n  [\\"headers\\" => $headers, \\"url\\" => $user_input],\\n  [\\"headers\\" => $headers, \\"url\\" => \\"https://ok.example.com\\"]\\n], [])"
      },
      "parent_line_number": 32,
      "snippet": "$session->request_multiple([\\n  [\\"headers\\" => $headers, \\"url\\" => $user_input],\\n  [\\"headers\\" => $headers, \\"url\\" => \\"https://ok.example.com\\"]\\n], [])",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_18",
      "old_fingerprint": "52b9a334f938eaa33dcfbf08d51f465d_18",
      "code_extract": "$session->request_multiple([\\n  [\\"headers\\" => $headers, \\"url\\" => $user_input],\\n  [\\"headers\\" => $headers, \\"url\\" => \\"https://ok.example.com\\"]\\n], []);"
    }
  ]
}"
`;

exports[`php_lang_http_url_using_user_input bad_sendgrid 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 5,
      "full_filename": "/tmp/bearer-scan/bad_sendgrid.php",
      "filename": ".",
      "source": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 47
        }
      },
      "sink": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 47
        },
        "content": "new SendGrid\\\\Client($user_input, $authHeaders)"
      },
      "parent_line_number": 5,
      "snippet": "new SendGrid\\\\Client($user_input, $authHeaders)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_0",
      "old_fingerprint": "68fa4d12f1eccbdf27ceea4d580c1d3a_0",
      "code_extract": "new SendGrid\\\\Client($user_input, $authHeaders);"
    }
  ]
}"
`;

exports[`php_lang_http_url_using_user_input bad_symfony 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 15,
      "full_filename": "/tmp/bearer-scan/bad_symfony.php",
      "filename": ".",
      "source": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 7,
          "end": 49
        }
      },
      "sink": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 7,
          "end": 49
        },
        "content": "$this->client->request('GET', $user_input)"
      },
      "parent_line_number": 15,
      "snippet": "$this->client->request('GET', $user_input)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_0",
      "old_fingerprint": "0764b0abce7146bf7c59109cf8c0909b_0",
      "code_extract": "      $this->client->request('GET', $user_input);"
    }
  ]
}"
`;

exports[`php_lang_http_url_using_user_input bad_unirest 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 5,
      "full_filename": "/tmp/bearer-scan/bad_unirest.php",
      "filename": ".",
      "source": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 44
        }
      },
      "sink": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 44
        },
        "content": "Unirest\\\\Request::get($user_input, $headers)"
      },
      "parent_line_number": 5,
      "snippet": "Unirest\\\\Request::get($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_0",
      "old_fingerprint": "38707c0990bd6b21708f1ca97cf9b1ea_0",
      "code_extract": "Unirest\\\\Request::get($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 6,
      "full_filename": "/tmp/bearer-scan/bad_unirest.php",
      "filename": ".",
      "source": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 1,
          "end": 45
        }
      },
      "sink": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 1,
          "end": 45
        },
        "content": "Unirest\\\\Request::head($user_input, $headers)"
      },
      "parent_line_number": 6,
      "snippet": "Unirest\\\\Request::head($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_1",
      "old_fingerprint": "38707c0990bd6b21708f1ca97cf9b1ea_1",
      "code_extract": "Unirest\\\\Request::head($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/bad_unirest.php",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 48
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 48
        },
        "content": "Unirest\\\\Request::options($user_input, $headers)"
      },
      "parent_line_number": 7,
      "snippet": "Unirest\\\\Request::options($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_2",
      "old_fingerprint": "38707c0990bd6b21708f1ca97cf9b1ea_2",
      "code_extract": "Unirest\\\\Request::options($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 8,
      "full_filename": "/tmp/bearer-scan/bad_unirest.php",
      "filename": ".",
      "source": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 1,
          "end": 48
        }
      },
      "sink": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 1,
          "end": 48
        },
        "content": "Unirest\\\\Request::connect($user_input, $headers)"
      },
      "parent_line_number": 8,
      "snippet": "Unirest\\\\Request::connect($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_3",
      "old_fingerprint": "38707c0990bd6b21708f1ca97cf9b1ea_3",
      "code_extract": "Unirest\\\\Request::connect($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 9,
      "full_filename": "/tmp/bearer-scan/bad_unirest.php",
      "filename": ".",
      "source": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 45
        }
      },
      "sink": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 45
        },
        "content": "Unirest\\\\Request::post($user_input, $headers)"
      },
      "parent_line_number": 9,
      "snippet": "Unirest\\\\Request::post($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_4",
      "old_fingerprint": "38707c0990bd6b21708f1ca97cf9b1ea_4",
      "code_extract": "Unirest\\\\Request::post($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 10,
      "full_filename": "/tmp/bearer-scan/bad_unirest.php",
      "filename": ".",
      "source": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 1,
          "end": 44
        }
      },
      "sink": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 1,
          "end": 44
        },
        "content": "Unirest\\\\Request::put($user_input, $headers)"
      },
      "parent_line_number": 10,
      "snippet": "Unirest\\\\Request::put($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_5",
      "old_fingerprint": "38707c0990bd6b21708f1ca97cf9b1ea_5",
      "code_extract": "Unirest\\\\Request::put($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 11,
      "full_filename": "/tmp/bearer-scan/bad_unirest.php",
      "filename": ".",
      "source": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 1,
          "end": 46
        }
      },
      "sink": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 1,
          "end": 46
        },
        "content": "Unirest\\\\Request::patch($user_input, $headers)"
      },
      "parent_line_number": 11,
      "snippet": "Unirest\\\\Request::patch($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_6",
      "old_fingerprint": "38707c0990bd6b21708f1ca97cf9b1ea_6",
      "code_extract": "Unirest\\\\Request::patch($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 12,
      "full_filename": "/tmp/bearer-scan/bad_unirest.php",
      "filename": ".",
      "source": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 46
        }
      },
      "sink": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 46
        },
        "content": "Unirest\\\\Request::trace($user_input, $headers)"
      },
      "parent_line_number": 12,
      "snippet": "Unirest\\\\Request::trace($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_7",
      "old_fingerprint": "38707c0990bd6b21708f1ca97cf9b1ea_7",
      "code_extract": "Unirest\\\\Request::trace($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 13,
      "full_filename": "/tmp/bearer-scan/bad_unirest.php",
      "filename": ".",
      "source": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 1,
          "end": 47
        }
      },
      "sink": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 1,
          "end": 47
        },
        "content": "Unirest\\\\Request::delete($user_input, $headers)"
      },
      "parent_line_number": 13,
      "snippet": "Unirest\\\\Request::delete($user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_8",
      "old_fingerprint": "38707c0990bd6b21708f1ca97cf9b1ea_8",
      "code_extract": "Unirest\\\\Request::delete($user_input, $headers);"
    },
    {
      "cwe_ids": [
        "918"
      ],
      "id": "php_lang_http_url_using_user_input",
      "title": "Unsanitized user input in HTTP request (SSRF)",
      "description": "## Description\\n\\nApplications should not connect to locations formed from user input.\\nThis rule checks for URLs containing user-supplied data.\\n\\n## Remediations\\n\\n❌ Avoid using user input in HTTP URLs:\\n\\n\`\`\`php\\n$curl = curl_init(\\"https://{$_GET['host']}');\\n\`\`\`\\n\\n✅ Use user input indirectly to form a URL:\\n\\n\`\`\`php\\nif ($_GET[\\"host\\"] == \\"option1\\") {\\n  $host = \\"api1.com\\";\\n} else {\\n  $host = \\"api2.com\\";\\n}\\n\\n$curl = curl_init(\\"https://$host');\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_http_url_using_user_input",
      "line_number": 15,
      "full_filename": "/tmp/bearer-scan/bad_unirest.php",
      "filename": ".",
      "source": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 1,
          "end": 52
        }
      },
      "sink": {
        "start": 15,
        "end": 15,
        "column": {
          "start": 1,
          "end": 52
        },
        "content": "Unirest\\\\Request::send(\\"GET\\", $user_input, $headers)"
      },
      "parent_line_number": 15,
      "snippet": "Unirest\\\\Request::send(\\"GET\\", $user_input, $headers)",
      "fingerprint": "8e7d370f3eae45947c2148f9b1a93a43_9",
      "old_fingerprint": "38707c0990bd6b21708f1ca97cf9b1ea_9",
      "code_extract": "Unirest\\\\Request::send(\\"GET\\", $user_input, $headers);"
    }
  ]
}"
`;

exports[`php_lang_http_url_using_user_input ok 1`] = `"{}"`;

exports[`php_lang_http_url_using_user_input ok_buzz 1`] = `"{}"`;

exports[`php_lang_http_url_using_user_input ok_guzzle 1`] = `"{}"`;

exports[`php_lang_http_url_using_user_input ok_httplug 1`] = `"{}"`;

exports[`php_lang_http_url_using_user_input ok_laminas 1`] = `"{}"`;

exports[`php_lang_http_url_using_user_input ok_laravel 1`] = `"{}"`;

exports[`php_lang_http_url_using_user_input ok_pecl_http 1`] = `"{}"`;

exports[`php_lang_http_url_using_user_input ok_requests 1`] = `"{}"`;

exports[`php_lang_http_url_using_user_input ok_sendgrid 1`] = `"{}"`;

exports[`php_lang_http_url_using_user_input ok_symfony 1`] = `"{}"`;

exports[`php_lang_http_url_using_user_input ok_unirest 1`] = `"{}"`;
