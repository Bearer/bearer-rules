// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php_lang_information_leakage bad 1`] = `
"{
  "warning": [
    {
      "cwe_ids": [
        "209"
      ],
      "id": "php_lang_information_leakage",
      "title": "Possible information leakage detected.",
      "description": "## Description\\n\\nPrinting an exception message to the default output is risky because it may\\ncontain sensitive information such as the technical details of your\\napplication or environment (which in turn could expose your application to\\npath traversal attacks, for example), or worse, user-specific data.\\n\\n## Remediations\\n\\n❌ Avoid printing the full stack trace\\n\\n✅ Less is more! Only log the minimum required details in error messages\\n\\n## Resources\\n\\n- [Web Application Security Consortium: Information Leakage](http://projects.webappsec.org/w/page/13246936/Information%20Leakage)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_information_leakage",
      "line_number": 6,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 3,
          "end": 25
        }
      },
      "sink": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 3,
          "end": 25
        },
        "content": "echo $e->getMessage();"
      },
      "parent_line_number": 6,
      "snippet": "echo $e->getMessage();",
      "fingerprint": "8447a49c2a0aa53e4a8595aa0a4324f1_0",
      "old_fingerprint": "fa90c1e996ab659504ecf533fa584f42_0",
      "code_extract": "  echo $e->getMessage();"
    },
    {
      "cwe_ids": [
        "209"
      ],
      "id": "php_lang_information_leakage",
      "title": "Possible information leakage detected.",
      "description": "## Description\\n\\nPrinting an exception message to the default output is risky because it may\\ncontain sensitive information such as the technical details of your\\napplication or environment (which in turn could expose your application to\\npath traversal attacks, for example), or worse, user-specific data.\\n\\n## Remediations\\n\\n❌ Avoid printing the full stack trace\\n\\n✅ Less is more! Only log the minimum required details in error messages\\n\\n## Resources\\n\\n- [Web Application Security Consortium: Information Leakage](http://projects.webappsec.org/w/page/13246936/Information%20Leakage)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_information_leakage",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 3,
          "end": 23
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 3,
          "end": 23
        },
        "content": "echo $e->getTrace();"
      },
      "parent_line_number": 7,
      "snippet": "echo $e->getTrace();",
      "fingerprint": "8447a49c2a0aa53e4a8595aa0a4324f1_1",
      "old_fingerprint": "fa90c1e996ab659504ecf533fa584f42_1",
      "code_extract": "  echo $e->getTrace();"
    },
    {
      "cwe_ids": [
        "209"
      ],
      "id": "php_lang_information_leakage",
      "title": "Possible information leakage detected.",
      "description": "## Description\\n\\nPrinting an exception message to the default output is risky because it may\\ncontain sensitive information such as the technical details of your\\napplication or environment (which in turn could expose your application to\\npath traversal attacks, for example), or worse, user-specific data.\\n\\n## Remediations\\n\\n❌ Avoid printing the full stack trace\\n\\n✅ Less is more! Only log the minimum required details in error messages\\n\\n## Resources\\n\\n- [Web Application Security Consortium: Information Leakage](http://projects.webappsec.org/w/page/13246936/Information%20Leakage)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_information_leakage",
      "line_number": 8,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 3,
          "end": 43
        }
      },
      "sink": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 3,
          "end": 43
        },
        "content": "echo join(\\"\\\\n\\", $e->getTraceAsString());"
      },
      "parent_line_number": 8,
      "snippet": "echo join(\\"\\\\n\\", $e->getTraceAsString());",
      "fingerprint": "8447a49c2a0aa53e4a8595aa0a4324f1_2",
      "old_fingerprint": "fa90c1e996ab659504ecf533fa584f42_2",
      "code_extract": "  echo join(\\"\\\\n\\", $e->getTraceAsString());"
    },
    {
      "cwe_ids": [
        "209"
      ],
      "id": "php_lang_information_leakage",
      "title": "Possible information leakage detected.",
      "description": "## Description\\n\\nPrinting an exception message to the default output is risky because it may\\ncontain sensitive information such as the technical details of your\\napplication or environment (which in turn could expose your application to\\npath traversal attacks, for example), or worse, user-specific data.\\n\\n## Remediations\\n\\n❌ Avoid printing the full stack trace\\n\\n✅ Less is more! Only log the minimum required details in error messages\\n\\n## Resources\\n\\n- [Web Application Security Consortium: Information Leakage](http://projects.webappsec.org/w/page/13246936/Information%20Leakage)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_information_leakage",
      "line_number": 10,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 3,
          "end": 25
        }
      },
      "sink": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 3,
          "end": 25
        },
        "content": "echo $f->getMessage();"
      },
      "parent_line_number": 10,
      "snippet": "echo $f->getMessage();",
      "fingerprint": "8447a49c2a0aa53e4a8595aa0a4324f1_3",
      "old_fingerprint": "fa90c1e996ab659504ecf533fa584f42_3",
      "code_extract": "  echo $f->getMessage();"
    }
  ]
}"
`;

exports[`php_lang_information_leakage ok 1`] = `"{}"`;
