// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php_lang_format_string_using_user_input bad 1`] = `
"{
  "low": [
    {
      "cwe_ids": [
        "134"
      ],
      "id": "php_lang_format_string_using_user_input",
      "title": "User input in format string detected.",
      "description": "## Description\\n\\nIf an application includes user input directly in a format string, an\\nattacker can use format specifiers in the user input to produce misleading\\nor fabricated messages.\\n\\n## Remediations\\n\\n❌ Avoid format strings containing user input:\\n\\n\`\`\`php\\nsprintf(\\"The value was \${_GET[\\"value\\"]}\\");\\n\`\`\`\\n\\n✅ Use a literal format string with additional arguments:\\n\\n\`\`\`php\\nsprintf(\\"The value was %s\\", $_GET[\\"value\\"]);\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_format_string_using_user_input",
      "line_number": 5,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 19
        }
      },
      "sink": {
        "start": 5,
        "end": 5,
        "column": {
          "start": 1,
          "end": 19
        },
        "content": "printf($oops, $ok)"
      },
      "parent_line_number": 5,
      "snippet": "printf($oops, $ok)",
      "fingerprint": "13c52ffa8d7c5369796bde2a63972e80_0",
      "old_fingerprint": "5e4f46afeba65dacd7eb72d29182f132_0",
      "code_extract": "printf($oops, $ok);"
    },
    {
      "cwe_ids": [
        "134"
      ],
      "id": "php_lang_format_string_using_user_input",
      "title": "User input in format string detected.",
      "description": "## Description\\n\\nIf an application includes user input directly in a format string, an\\nattacker can use format specifiers in the user input to produce misleading\\nor fabricated messages.\\n\\n## Remediations\\n\\n❌ Avoid format strings containing user input:\\n\\n\`\`\`php\\nsprintf(\\"The value was \${_GET[\\"value\\"]}\\");\\n\`\`\`\\n\\n✅ Use a literal format string with additional arguments:\\n\\n\`\`\`php\\nsprintf(\\"The value was %s\\", $_GET[\\"value\\"]);\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_format_string_using_user_input",
      "line_number": 6,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 1,
          "end": 20
        }
      },
      "sink": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 1,
          "end": 20
        },
        "content": "sprintf($oops, $ok)"
      },
      "parent_line_number": 6,
      "snippet": "sprintf($oops, $ok)",
      "fingerprint": "13c52ffa8d7c5369796bde2a63972e80_1",
      "old_fingerprint": "5e4f46afeba65dacd7eb72d29182f132_1",
      "code_extract": "sprintf($oops, $ok);"
    },
    {
      "cwe_ids": [
        "134"
      ],
      "id": "php_lang_format_string_using_user_input",
      "title": "User input in format string detected.",
      "description": "## Description\\n\\nIf an application includes user input directly in a format string, an\\nattacker can use format specifiers in the user input to produce misleading\\nor fabricated messages.\\n\\n## Remediations\\n\\n❌ Avoid format strings containing user input:\\n\\n\`\`\`php\\nsprintf(\\"The value was \${_GET[\\"value\\"]}\\");\\n\`\`\`\\n\\n✅ Use a literal format string with additional arguments:\\n\\n\`\`\`php\\nsprintf(\\"The value was %s\\", $_GET[\\"value\\"]);\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_format_string_using_user_input",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 20
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 20
        },
        "content": "vprintf($oops, $ok)"
      },
      "parent_line_number": 7,
      "snippet": "vprintf($oops, $ok)",
      "fingerprint": "13c52ffa8d7c5369796bde2a63972e80_2",
      "old_fingerprint": "5e4f46afeba65dacd7eb72d29182f132_2",
      "code_extract": "vprintf($oops, $ok);"
    },
    {
      "cwe_ids": [
        "134"
      ],
      "id": "php_lang_format_string_using_user_input",
      "title": "User input in format string detected.",
      "description": "## Description\\n\\nIf an application includes user input directly in a format string, an\\nattacker can use format specifiers in the user input to produce misleading\\nor fabricated messages.\\n\\n## Remediations\\n\\n❌ Avoid format strings containing user input:\\n\\n\`\`\`php\\nsprintf(\\"The value was \${_GET[\\"value\\"]}\\");\\n\`\`\`\\n\\n✅ Use a literal format string with additional arguments:\\n\\n\`\`\`php\\nsprintf(\\"The value was %s\\", $_GET[\\"value\\"]);\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_format_string_using_user_input",
      "line_number": 8,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 1,
          "end": 21
        }
      },
      "sink": {
        "start": 8,
        "end": 8,
        "column": {
          "start": 1,
          "end": 21
        },
        "content": "vsprintf($oops, $ok)"
      },
      "parent_line_number": 8,
      "snippet": "vsprintf($oops, $ok)",
      "fingerprint": "13c52ffa8d7c5369796bde2a63972e80_3",
      "old_fingerprint": "5e4f46afeba65dacd7eb72d29182f132_3",
      "code_extract": "vsprintf($oops, $ok);"
    },
    {
      "cwe_ids": [
        "134"
      ],
      "id": "php_lang_format_string_using_user_input",
      "title": "User input in format string detected.",
      "description": "## Description\\n\\nIf an application includes user input directly in a format string, an\\nattacker can use format specifiers in the user input to produce misleading\\nor fabricated messages.\\n\\n## Remediations\\n\\n❌ Avoid format strings containing user input:\\n\\n\`\`\`php\\nsprintf(\\"The value was \${_GET[\\"value\\"]}\\");\\n\`\`\`\\n\\n✅ Use a literal format string with additional arguments:\\n\\n\`\`\`php\\nsprintf(\\"The value was %s\\", $_GET[\\"value\\"]);\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_format_string_using_user_input",
      "line_number": 9,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 24
        }
      },
      "sink": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 24
        },
        "content": "fprintf($f, $oops, $ok)"
      },
      "parent_line_number": 9,
      "snippet": "fprintf($f, $oops, $ok)",
      "fingerprint": "13c52ffa8d7c5369796bde2a63972e80_4",
      "old_fingerprint": "5e4f46afeba65dacd7eb72d29182f132_4",
      "code_extract": "fprintf($f, $oops, $ok);"
    },
    {
      "cwe_ids": [
        "134"
      ],
      "id": "php_lang_format_string_using_user_input",
      "title": "User input in format string detected.",
      "description": "## Description\\n\\nIf an application includes user input directly in a format string, an\\nattacker can use format specifiers in the user input to produce misleading\\nor fabricated messages.\\n\\n## Remediations\\n\\n❌ Avoid format strings containing user input:\\n\\n\`\`\`php\\nsprintf(\\"The value was \${_GET[\\"value\\"]}\\");\\n\`\`\`\\n\\n✅ Use a literal format string with additional arguments:\\n\\n\`\`\`php\\nsprintf(\\"The value was %s\\", $_GET[\\"value\\"]);\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_format_string_using_user_input",
      "line_number": 10,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 1,
          "end": 23
        }
      },
      "sink": {
        "start": 10,
        "end": 10,
        "column": {
          "start": 1,
          "end": 23
        },
        "content": "fscanf($f, $oops, $ok)"
      },
      "parent_line_number": 10,
      "snippet": "fscanf($f, $oops, $ok)",
      "fingerprint": "13c52ffa8d7c5369796bde2a63972e80_5",
      "old_fingerprint": "5e4f46afeba65dacd7eb72d29182f132_5",
      "code_extract": "fscanf($f, $oops, $ok);"
    },
    {
      "cwe_ids": [
        "134"
      ],
      "id": "php_lang_format_string_using_user_input",
      "title": "User input in format string detected.",
      "description": "## Description\\n\\nIf an application includes user input directly in a format string, an\\nattacker can use format specifiers in the user input to produce misleading\\nor fabricated messages.\\n\\n## Remediations\\n\\n❌ Avoid format strings containing user input:\\n\\n\`\`\`php\\nsprintf(\\"The value was \${_GET[\\"value\\"]}\\");\\n\`\`\`\\n\\n✅ Use a literal format string with additional arguments:\\n\\n\`\`\`php\\nsprintf(\\"The value was %s\\", $_GET[\\"value\\"]);\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_format_string_using_user_input",
      "line_number": 11,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 1,
          "end": 23
        }
      },
      "sink": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 1,
          "end": 23
        },
        "content": "sscanf($s, $oops, $ok)"
      },
      "parent_line_number": 11,
      "snippet": "sscanf($s, $oops, $ok)",
      "fingerprint": "13c52ffa8d7c5369796bde2a63972e80_6",
      "old_fingerprint": "5e4f46afeba65dacd7eb72d29182f132_6",
      "code_extract": "sscanf($s, $oops, $ok);"
    },
    {
      "cwe_ids": [
        "134"
      ],
      "id": "php_lang_format_string_using_user_input",
      "title": "User input in format string detected.",
      "description": "## Description\\n\\nIf an application includes user input directly in a format string, an\\nattacker can use format specifiers in the user input to produce misleading\\nor fabricated messages.\\n\\n## Remediations\\n\\n❌ Avoid format strings containing user input:\\n\\n\`\`\`php\\nsprintf(\\"The value was \${_GET[\\"value\\"]}\\");\\n\`\`\`\\n\\n✅ Use a literal format string with additional arguments:\\n\\n\`\`\`php\\nsprintf(\\"The value was %s\\", $_GET[\\"value\\"]);\\n\`\`\`\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_format_string_using_user_input",
      "line_number": 12,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 25
        }
      },
      "sink": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 1,
          "end": 25
        },
        "content": "vfprintf($f, $oops, $ok)"
      },
      "parent_line_number": 12,
      "snippet": "vfprintf($f, $oops, $ok)",
      "fingerprint": "13c52ffa8d7c5369796bde2a63972e80_7",
      "old_fingerprint": "5e4f46afeba65dacd7eb72d29182f132_7",
      "code_extract": "vfprintf($f, $oops, $ok);"
    }
  ]
}"
`;

exports[`php_lang_format_string_using_user_input ok 1`] = `"{}"`;
