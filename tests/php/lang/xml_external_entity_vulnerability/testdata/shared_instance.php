<?php

$userInput = $_GET["oops"];
$flags = LIBXML_NOENT;

// tests for php_shared_lang_instance rule

try {
} catch (OneError | XMLReader $e) {
  XMLReader();
# bearer:expected php_lang_xml_external_entity_vulnerability
  $e->XML($userInput, $encoding, $flags);
} catch (FooError $f) {
} finally {
}

function ($f, XMLReader $r) {
# bearer:expected php_lang_xml_external_entity_vulnerability
  $r->XML($userInput, $encoding, $flags);
};

function foo($f, XMLReader $r) {
# bearer:expected php_lang_xml_external_entity_vulnerability
  $r->XML($userInput, $encoding, $flags);
}

$r1 = new XMLReader;
# bearer:expected php_lang_xml_external_entity_vulnerability
$r1->XML($userInput, $encoding, $flags);
$r2 = new XMLReader($foo);
# bearer:expected php_lang_xml_external_entity_vulnerability
$r2->XML($userInput, $encoding, $flags);
