// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`php_lang_xml_external_entity_vulnerability bad 1`] = `
"{
  "high": [
    {
      "cwe_ids": [
        "611"
      ],
      "id": "php_lang_xml_external_entity_vulnerability",
      "title": "XML External Entity vulnerability detected.",
      "description": "## Description\\nAvoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.\\n\\n## Remediations\\n❌ Do not enable parsing of external entities.\\n\\nFor LibXML, for example, do not set \`noent\` to \`true\`.\\n\`\`\`php\\n  var libxml = require(\\"libxmljs\\");\\n  libxml.parseXmlString(xml, { noent: true, noblanks: true });\\n\`\`\`\\n\\n## Resources\\n- [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_xml_external_entity_vulnerability",
      "line_number": 6,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 1,
          "end": 42
        }
      },
      "sink": {
        "start": 6,
        "end": 6,
        "column": {
          "start": 1,
          "end": 42
        },
        "content": "DOMDocument::loadHTML($userInput, $flags)"
      },
      "parent_line_number": 6,
      "snippet": "DOMDocument::loadHTML($userInput, $flags)",
      "fingerprint": "2e1892d145b5cb527043784fa089ab30_0",
      "old_fingerprint": "7831eb5c10ede1809f1e9eb97cfc45d0_0",
      "code_extract": "DOMDocument::loadHTML($userInput, $flags);"
    },
    {
      "cwe_ids": [
        "611"
      ],
      "id": "php_lang_xml_external_entity_vulnerability",
      "title": "XML External Entity vulnerability detected.",
      "description": "## Description\\nAvoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.\\n\\n## Remediations\\n❌ Do not enable parsing of external entities.\\n\\nFor LibXML, for example, do not set \`noent\` to \`true\`.\\n\`\`\`php\\n  var libxml = require(\\"libxmljs\\");\\n  libxml.parseXmlString(xml, { noent: true, noblanks: true });\\n\`\`\`\\n\\n## Resources\\n- [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_xml_external_entity_vulnerability",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 41
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 1,
          "end": 41
        },
        "content": "DOMDocument::loadXML($userInput, $flags)"
      },
      "parent_line_number": 7,
      "snippet": "DOMDocument::loadXML($userInput, $flags)",
      "fingerprint": "2e1892d145b5cb527043784fa089ab30_1",
      "old_fingerprint": "7831eb5c10ede1809f1e9eb97cfc45d0_1",
      "code_extract": "DOMDocument::loadXML($userInput, $flags);"
    },
    {
      "cwe_ids": [
        "611"
      ],
      "id": "php_lang_xml_external_entity_vulnerability",
      "title": "XML External Entity vulnerability detected.",
      "description": "## Description\\nAvoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.\\n\\n## Remediations\\n❌ Do not enable parsing of external entities.\\n\\nFor LibXML, for example, do not set \`noent\` to \`true\`.\\n\`\`\`php\\n  var libxml = require(\\"libxmljs\\");\\n  libxml.parseXmlString(xml, { noent: true, noblanks: true });\\n\`\`\`\\n\\n## Resources\\n- [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_xml_external_entity_vulnerability",
      "line_number": 9,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 46
        }
      },
      "sink": {
        "start": 9,
        "end": 9,
        "column": {
          "start": 1,
          "end": 46
        },
        "content": "XMLReader::XML($userInput, $encoding, $flags)"
      },
      "parent_line_number": 9,
      "snippet": "XMLReader::XML($userInput, $encoding, $flags)",
      "fingerprint": "2e1892d145b5cb527043784fa089ab30_2",
      "old_fingerprint": "7831eb5c10ede1809f1e9eb97cfc45d0_2",
      "code_extract": "XMLReader::XML($userInput, $encoding, $flags);"
    },
    {
      "cwe_ids": [
        "611"
      ],
      "id": "php_lang_xml_external_entity_vulnerability",
      "title": "XML External Entity vulnerability detected.",
      "description": "## Description\\nAvoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.\\n\\n## Remediations\\n❌ Do not enable parsing of external entities.\\n\\nFor LibXML, for example, do not set \`noent\` to \`true\`.\\n\`\`\`php\\n  var libxml = require(\\"libxmljs\\");\\n  libxml.parseXmlString(xml, { noent: true, noblanks: true });\\n\`\`\`\\n\\n## Resources\\n- [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_xml_external_entity_vulnerability",
      "line_number": 11,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 1,
          "end": 44
        }
      },
      "sink": {
        "start": 11,
        "end": 11,
        "column": {
          "start": 1,
          "end": 44
        },
        "content": "$reader->XML($userInput, $encoding, $flags)"
      },
      "parent_line_number": 11,
      "snippet": "$reader->XML($userInput, $encoding, $flags)",
      "fingerprint": "2e1892d145b5cb527043784fa089ab30_3",
      "old_fingerprint": "7831eb5c10ede1809f1e9eb97cfc45d0_3",
      "code_extract": "$reader->XML($userInput, $encoding, $flags);"
    },
    {
      "cwe_ids": [
        "611"
      ],
      "id": "php_lang_xml_external_entity_vulnerability",
      "title": "XML External Entity vulnerability detected.",
      "description": "## Description\\nAvoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.\\n\\n## Remediations\\n❌ Do not enable parsing of external entities.\\n\\nFor LibXML, for example, do not set \`noent\` to \`true\`.\\n\`\`\`php\\n  var libxml = require(\\"libxmljs\\");\\n  libxml.parseXmlString(xml, { noent: true, noblanks: true });\\n\`\`\`\\n\\n## Resources\\n- [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_xml_external_entity_vulnerability",
      "line_number": 13,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 8,
          "end": 55
        }
      },
      "sink": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 8,
          "end": 55
        },
        "content": "new SimpleXMLElement($userInput, $flags, false)"
      },
      "parent_line_number": 13,
      "snippet": "new SimpleXMLElement($userInput, $flags, false)",
      "fingerprint": "2e1892d145b5cb527043784fa089ab30_4",
      "old_fingerprint": "7831eb5c10ede1809f1e9eb97cfc45d0_4",
      "code_extract": "$xml = new SimpleXMLElement($userInput, $flags, false);"
    },
    {
      "cwe_ids": [
        "611"
      ],
      "id": "php_lang_xml_external_entity_vulnerability",
      "title": "XML External Entity vulnerability detected.",
      "description": "## Description\\nAvoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.\\n\\n## Remediations\\n❌ Do not enable parsing of external entities.\\n\\nFor LibXML, for example, do not set \`noent\` to \`true\`.\\n\`\`\`php\\n  var libxml = require(\\"libxmljs\\");\\n  libxml.parseXmlString(xml, { noent: true, noblanks: true });\\n\`\`\`\\n\\n## Resources\\n- [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/php_lang_xml_external_entity_vulnerability",
      "line_number": 14,
      "full_filename": "/tmp/bearer-scan/bad.php",
      "filename": ".",
      "source": {
        "start": 14,
        "end": 14,
        "column": {
          "start": 1,
          "end": 73
        }
      },
      "sink": {
        "start": 14,
        "end": 14,
        "column": {
          "start": 1,
          "end": 73
        },
        "content": "simplexml_load_string($userInput, SimpleXMLElement::class, $flags, \\"ns\\")"
      },
      "parent_line_number": 14,
      "snippet": "simplexml_load_string($userInput, SimpleXMLElement::class, $flags, \\"ns\\")",
      "fingerprint": "2e1892d145b5cb527043784fa089ab30_5",
      "old_fingerprint": "7831eb5c10ede1809f1e9eb97cfc45d0_5",
      "code_extract": "simplexml_load_string($userInput, SimpleXMLElement::class, $flags, \\"ns\\");"
    }
  ]
}"
`;

exports[`php_lang_xml_external_entity_vulnerability ok 1`] = `"{}"`;
