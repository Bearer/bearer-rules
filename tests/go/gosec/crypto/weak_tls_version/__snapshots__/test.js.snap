// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`go_gosec_crypto_weak_tls_version test 1`] = `
"{
  "low": [
    {
      "cwe_ids": [
        "310"
      ],
      "id": "go_gosec_crypto_weak_tls_version",
      "title": "Use of deprecated TLS version",
      "description": "## Description\\n\\nTLS (Transport Layer Security) versions 1.1 and 1.0 have been deprecated due to known security vulnerabilities that can expose sensitive data to interception and attacks. Using these versions can put data transmissions at risk.\\n\\n## Remediations\\n\\nTo ensure secure data transmission, you should enforce the use of TLS 1.3, which includes security enhancements over its predecessors. The following steps can be taken:\\n\\n✅ Enforce TLS 1.3\\n\\nUpdate your server configuration to support and prefer TLS 1.3, which includes modern security features and mitigates known vulnerabilities found in older versions.\\n\\n✅ Configure Go’s TLS Library\\n\\nSet \`MinVersion\` in the \`tls.Config\` struct to \`tls.VersionTLS13\` to ensure that the server only accepts TLS 1.3 connections.\\n\\n\`\`\`go\\nimport (\\n  \\"crypto/tls\\"\\n  \\"log\\"\\n  \\"net/http\\"\\n  \\"time\\"\\n)\\n\\nfunc main() {\\n  cert, err := tls.LoadX509KeyPair(\\"server.crt\\", \\"server.key\\")\\n  if err != nil {\\n    log.Fatalf(\\"failed to load key pair: %s\\", err)\\n  }\\n\\n  cfg := &tls.Config{\\n    Certificates: []tls.Certificate{cert},\\n    MinVersion:   tls.VersionTLS13, // Enforce TLS 1.3\\n  }\\n\\n  srv := &http.Server{\\n    Addr:         \\":8999\\", // Listen on port 8999\\n    TLSConfig:    cfg,\\n    ReadTimeout:  time.Minute,\\n    WriteTimeout: time.Minute,\\n  }\\n\\n  log.Printf(\\"Server is starting...\\")\\n  log.Fatal(srv.ListenAndServeTLS(\\"\\", \\"\\")) // TLS cert and key are already provided in the TLSConfig\\n}\\n\`\`\`\\n\\n✅ Perfect Forward Secrecy (PFS)\\n\\nTLS 1.3 configurations ensure PFS by default, which protects past communications even if future session keys are compromised.\\n\\n✅ Regularly Update Dependencies\\n\\nKeep your Go version and dependencies up-to-date to benefit from the latest security fixes and improvements.\\n\\n❌ Do Not Use Deprecated TLS Versions\\n\\nAvoid configuring your server to accept TLS 1.0 or 1.1. Remove these options from your TLS configuration to prevent downgrade attacks.\\n\\n## Resources\\n\\n- [IETF's Deprecation of TLS 1.0 and 1.1](https://tools.ietf.org/html/rfc8996)\\n- [OWASP TLS Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/TLS_Security_Cheat_Sheet.html)\\n- [Go \`crypto/tls\` package documentation](https://pkg.go.dev/crypto/tls)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/go_gosec_crypto_weak_tls_version",
      "line_number": 12,
      "full_filename": "/tmp/bearer-scan/main.go",
      "filename": ".",
      "source": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 4,
          "end": 20
        }
      },
      "sink": {
        "start": 12,
        "end": 12,
        "column": {
          "start": 4,
          "end": 20
        },
        "content": "tls.VersionTLS11"
      },
      "parent_line_number": 12,
      "snippet": "tls.VersionTLS11",
      "fingerprint": "764f08ca905f8ac862ad3f7f1aedd81e_0",
      "old_fingerprint": "e2cbe75a9a29dfc680f083a7d6379e4f_0",
      "code_extract": "\\t\\t\\ttls.VersionTLS11,"
    },
    {
      "cwe_ids": [
        "310"
      ],
      "id": "go_gosec_crypto_weak_tls_version",
      "title": "Use of deprecated TLS version",
      "description": "## Description\\n\\nTLS (Transport Layer Security) versions 1.1 and 1.0 have been deprecated due to known security vulnerabilities that can expose sensitive data to interception and attacks. Using these versions can put data transmissions at risk.\\n\\n## Remediations\\n\\nTo ensure secure data transmission, you should enforce the use of TLS 1.3, which includes security enhancements over its predecessors. The following steps can be taken:\\n\\n✅ Enforce TLS 1.3\\n\\nUpdate your server configuration to support and prefer TLS 1.3, which includes modern security features and mitigates known vulnerabilities found in older versions.\\n\\n✅ Configure Go’s TLS Library\\n\\nSet \`MinVersion\` in the \`tls.Config\` struct to \`tls.VersionTLS13\` to ensure that the server only accepts TLS 1.3 connections.\\n\\n\`\`\`go\\nimport (\\n  \\"crypto/tls\\"\\n  \\"log\\"\\n  \\"net/http\\"\\n  \\"time\\"\\n)\\n\\nfunc main() {\\n  cert, err := tls.LoadX509KeyPair(\\"server.crt\\", \\"server.key\\")\\n  if err != nil {\\n    log.Fatalf(\\"failed to load key pair: %s\\", err)\\n  }\\n\\n  cfg := &tls.Config{\\n    Certificates: []tls.Certificate{cert},\\n    MinVersion:   tls.VersionTLS13, // Enforce TLS 1.3\\n  }\\n\\n  srv := &http.Server{\\n    Addr:         \\":8999\\", // Listen on port 8999\\n    TLSConfig:    cfg,\\n    ReadTimeout:  time.Minute,\\n    WriteTimeout: time.Minute,\\n  }\\n\\n  log.Printf(\\"Server is starting...\\")\\n  log.Fatal(srv.ListenAndServeTLS(\\"\\", \\"\\")) // TLS cert and key are already provided in the TLSConfig\\n}\\n\`\`\`\\n\\n✅ Perfect Forward Secrecy (PFS)\\n\\nTLS 1.3 configurations ensure PFS by default, which protects past communications even if future session keys are compromised.\\n\\n✅ Regularly Update Dependencies\\n\\nKeep your Go version and dependencies up-to-date to benefit from the latest security fixes and improvements.\\n\\n❌ Do Not Use Deprecated TLS Versions\\n\\nAvoid configuring your server to accept TLS 1.0 or 1.1. Remove these options from your TLS configuration to prevent downgrade attacks.\\n\\n## Resources\\n\\n- [IETF's Deprecation of TLS 1.0 and 1.1](https://tools.ietf.org/html/rfc8996)\\n- [OWASP TLS Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/TLS_Security_Cheat_Sheet.html)\\n- [Go \`crypto/tls\` package documentation](https://pkg.go.dev/crypto/tls)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/go_gosec_crypto_weak_tls_version",
      "line_number": 13,
      "full_filename": "/tmp/bearer-scan/main.go",
      "filename": ".",
      "source": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 4,
          "end": 20
        }
      },
      "sink": {
        "start": 13,
        "end": 13,
        "column": {
          "start": 4,
          "end": 20
        },
        "content": "tls.VersionTLS10"
      },
      "parent_line_number": 13,
      "snippet": "tls.VersionTLS10",
      "fingerprint": "764f08ca905f8ac862ad3f7f1aedd81e_1",
      "old_fingerprint": "e2cbe75a9a29dfc680f083a7d6379e4f_1",
      "code_extract": "\\t\\t\\ttls.VersionTLS10,"
    }
  ]
}"
`;
