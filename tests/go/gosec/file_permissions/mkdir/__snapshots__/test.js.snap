// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`go_gosec_file_permissions_mkdir test 1`] = `
"{
  "low": [
    {
      "cwe_ids": [
        "276"
      ],
      "id": "go_gosec_file_permissions_mkdir",
      "title": "Permissive folder creation",
      "description": "## Description\\n\\nSetting correct directory permissions is critical to maintaining the security of a system. Directories with overly permissive access rights can become a vector for security breaches, allowing unauthorized users to add, remove, or change files, potentially leading to the execution of malicious code, data leaks, or system compromise.\\n\\n## Remediations\\n\\nWhen creating directories, apply the principle of least privilege to ensure users have only the permissions necessary for their role:\\n\\n✅ Restrict Directory Permissions\\n\\nUse permissions that restrict access to what is strictly necessary for the operation of the application. Avoid overly permissive settings such as \`0777\`, which allow all users to read, write, and execute.\\n\\n✅ Use Go’s \`os\` Package\\n\\nLeverage the \`os.Mkdir\` or \`os.MkdirAll\` function with appropriate permission flags to create directories.\\n\\n✅ Recommended Directory Permissions\\n\\n- \`0700\` gives the owner read, write, and execute permissions, with no access for group and others, suitable for private user data.\\n- \`0750\` gives the owner full permissions, the group read and execute permissions, and no permissions for others, which is commonly used for directories that need to be shared within a group.\\n\\n\`\`\`go\\nimport (\\n  \\"log\\"\\n  \\"os\\"\\n)\\n\\nfunc main() {\\n  // Use os.Mkdir to create a directory with restricted permissions\\n  // 0700 permission: Full control for the owner, no permissions for group and others\\n  err := os.Mkdir(\\"secure_directory\\", 0700)\\n  if err != nil {\\n    log.Fatalf(\\"failed to create directory: %s\\", err)\\n  }\\n  // Continue setting up the directory here\\n}\\n\`\`\`\\n\\n✅ Verify Directory Permissions\\n\\nAfter creating a directory, confirm the permissions to ensure they have been set correctly.\\n\\n✅ Set Secure Umask\\n\\nConsider setting a secure umask in your application or user profile to ensure that all newly created files and directories have restrictive permissions by default.\\n\\n✅ Regular Auditing\\n\\nImplement regular checks of directory permissions as part of your security auditing procedures to identify and correct any permissions that are too broad.\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/go_gosec_file_permissions_mkdir",
      "line_number": 17,
      "full_filename": "/tmp/bearer-scan/main.go",
      "filename": ".",
      "source": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 9,
          "end": 37
        }
      },
      "sink": {
        "start": 17,
        "end": 17,
        "column": {
          "start": 9,
          "end": 37
        },
        "content": "os.Mkdir(\\"/tmp/mydir\\", 0777)"
      },
      "parent_line_number": 17,
      "snippet": "os.Mkdir(\\"/tmp/mydir\\", 0777)",
      "fingerprint": "48915bcd60ffd3454f55db2924e59c62_0",
      "old_fingerprint": "253074ffb8917f7c68f698b97a6d661b_0",
      "code_extract": "\\terr := os.Mkdir(\\"/tmp/mydir\\", 0777)"
    },
    {
      "cwe_ids": [
        "276"
      ],
      "id": "go_gosec_file_permissions_mkdir",
      "title": "Permissive folder creation",
      "description": "## Description\\n\\nSetting correct directory permissions is critical to maintaining the security of a system. Directories with overly permissive access rights can become a vector for security breaches, allowing unauthorized users to add, remove, or change files, potentially leading to the execution of malicious code, data leaks, or system compromise.\\n\\n## Remediations\\n\\nWhen creating directories, apply the principle of least privilege to ensure users have only the permissions necessary for their role:\\n\\n✅ Restrict Directory Permissions\\n\\nUse permissions that restrict access to what is strictly necessary for the operation of the application. Avoid overly permissive settings such as \`0777\`, which allow all users to read, write, and execute.\\n\\n✅ Use Go’s \`os\` Package\\n\\nLeverage the \`os.Mkdir\` or \`os.MkdirAll\` function with appropriate permission flags to create directories.\\n\\n✅ Recommended Directory Permissions\\n\\n- \`0700\` gives the owner read, write, and execute permissions, with no access for group and others, suitable for private user data.\\n- \`0750\` gives the owner full permissions, the group read and execute permissions, and no permissions for others, which is commonly used for directories that need to be shared within a group.\\n\\n\`\`\`go\\nimport (\\n  \\"log\\"\\n  \\"os\\"\\n)\\n\\nfunc main() {\\n  // Use os.Mkdir to create a directory with restricted permissions\\n  // 0700 permission: Full control for the owner, no permissions for group and others\\n  err := os.Mkdir(\\"secure_directory\\", 0700)\\n  if err != nil {\\n    log.Fatalf(\\"failed to create directory: %s\\", err)\\n  }\\n  // Continue setting up the directory here\\n}\\n\`\`\`\\n\\n✅ Verify Directory Permissions\\n\\nAfter creating a directory, confirm the permissions to ensure they have been set correctly.\\n\\n✅ Set Secure Umask\\n\\nConsider setting a secure umask in your application or user profile to ensure that all newly created files and directories have restrictive permissions by default.\\n\\n✅ Regular Auditing\\n\\nImplement regular checks of directory permissions as part of your security auditing procedures to identify and correct any permissions that are too broad.\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/go_gosec_file_permissions_mkdir",
      "line_number": 25,
      "full_filename": "/tmp/bearer-scan/main.go",
      "filename": ".",
      "source": {
        "start": 25,
        "end": 25,
        "column": {
          "start": 9,
          "end": 40
        }
      },
      "sink": {
        "start": 25,
        "end": 25,
        "column": {
          "start": 9,
          "end": 40
        },
        "content": "os.MkdirAll(\\"/tmp/mydir\\", 0777)"
      },
      "parent_line_number": 25,
      "snippet": "os.MkdirAll(\\"/tmp/mydir\\", 0777)",
      "fingerprint": "48915bcd60ffd3454f55db2924e59c62_1",
      "old_fingerprint": "253074ffb8917f7c68f698b97a6d661b_1",
      "code_extract": "\\terr := os.MkdirAll(\\"/tmp/mydir\\", 0777)"
    }
  ]
}"
`;
