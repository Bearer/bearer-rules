import javax.xml.XMLConstants;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;

import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLStreamException;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.ParserConfigurationException;

public class Foo {
  public Comment unmarshallerBad(HttpServletRequest request, HttpServletResponse response) throws JAXBException {
    var jc = JAXBContext.newInstance(Comment.class);
    var commentXml = request.getInputStream();

    var unmarshaller = jc.createUnmarshaller();
    // bearer:expected java_lang_xml_external_entity_vulnerability
    return (Comment) unmarshaller.unmarshal(commentXml);
  }

  public Comment unmarshallerBad2(HttpServletRequest request, HttpServletResponse response) throws JAXBException {
    var jc = JAXBContext.newInstance(Comment.class);
    URL url = new URL(request.getParameter("commentURL"));

    var unmarshaller = jc.createUnmarshaller();
    // bearer:expected java_lang_xml_external_entity_vulnerability
    return (Comment) unmarshaller.unmarshal(url);
  }

  public Comment unmarshallerBad3(HttpServletRequest request, HttpServletResponse response) throws JAXBException {
    JAXBContext jc = JAXBContext.newInstance();
    Unmarshaller u = jc.createUnmarshaller();
    StringBuffer xmlStr = new StringBuffer(request.getParameter("commentStr"));
    // bearer:expected java_lang_xml_external_entity_vulnerability
    Object o = u.unmarshal(new StreamSource(new StringReader(xmlStr.toString())));
  }

  public Comment documentBuilderBad(HttpServletRequest request, HttpServletResponse response) throws ParserConfigurationException {
    InputStream commentFileInputStream = new FileInputStream(request.getParameter("commentFile"));

    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
    DocumentBuilder builder = factory.newDocumentBuilder();

    // bearer:expected java_lang_xml_external_entity_vulnerability
    return builder.parse(commentFileInputStream);
  }

  public User documentBuilderBad2(HttpServletRequest request, HttpServletResponse response) throws ParserConfigurationException {
    File userFile = new File(request.getParameter("userFile"));

    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
    DocumentBuilder builder = factory.newDocumentBuilder();

    // bearer:expected java_lang_xml_external_entity_vulnerability
    return builder.parse(userFile);
  }

  public User ok(String userFile, String userXML) throws JAXBException, ParserConfigurationException {
    File userFile = new File(userFile);

    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
    DocumentBuilder builder = factory.newDocumentBuilder();

    User user = builder.parse(userFile);

    var jc = JAXBContext.newInstance(Comment.class);
    var commentXml = request.getInputStream();

    var unmarshaller = jc.createUnmarshaller();
    return (Comment) unmarshaller.unmarshal(userXML);
  }
}