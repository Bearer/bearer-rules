// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`java_lang_weak_password_hash_sha1 ok_not_a_password 1`] = `"{}"`;

exports[`java_lang_weak_password_hash_sha1 sha1_hash 1`] = `
"{
  "critical": [
    {
      "cwe_ids": [
        "326"
      ],
      "id": "java_lang_weak_password_hash_sha1",
      "title": "Usage of weak hashing library on a password (SHA1)",
      "description": "## Description\\n\\nA weak hashing library can lead to data breaches and greater security risk.\\n\\n## Remediations\\n\\nAccording to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption), SHA1 is considered a weak hashing algorithms and therefore shouldn't be used.\\n\\n❌ Avoid libraries and algorithms with known weaknesses:\\n\\n\`\`\`java\\n  MessageDigest md = MessageDigest.getInstance(\\"SHA-1\\");\\n\`\`\`\\n\\n✅ Use stronger encryption algorithms when storing data.\\n\\n\`\`\`java\\n  MessageDigest md = MessageDigest.getInstance(\\"SHA-256\\");\\n\`\`\`\\n\\n## Resources\\n- [Java MessageDigest class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/MessageDigest.html)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/java_lang_weak_password_hash_sha1",
      "line_number": 7,
      "full_filename": "/tmp/bearer-scan/sha1_hash.java",
      "filename": ".",
      "data_type": {
        "category_uuid": "dd88aee5-9d40-4ad2-8983-0c791ddec47c",
        "name": "Passwords"
      },
      "category_groups": [
        "PII",
        "Personal Data"
      ],
      "source": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 17,
          "end": 33
        }
      },
      "sink": {
        "start": 7,
        "end": 7,
        "column": {
          "start": 7,
          "end": 45
        },
        "content": "md.update(user.newPassword.getBytes())"
      },
      "parent_line_number": 7,
      "snippet": "md.update(user.newPassword.getBytes())",
      "fingerprint": "a854846829baea6ec276e7f5d1f1b227_0",
      "old_fingerprint": "4da276b14151bc147141492073f8756a_0",
      "code_extract": "      md.update(user.newPassword.getBytes());"
    }
  ]
}"
`;
