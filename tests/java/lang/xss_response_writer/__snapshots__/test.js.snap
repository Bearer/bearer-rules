// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`java_lang_xss_response_writer ok 1`] = `"{}"`;

exports[`java_lang_xss_response_writer vulnerable 1`] = `
"{
  "low": [
    {
      "cwe_ids": [
        "79"
      ],
      "id": "java_lang_xss_response_writer",
      "title": "Possible cross site scripting threat detected.",
      "description": "## Description\\n\\nMake sure to encode and sanitize any user input before passing it down to \`response.getWriter()\` to avoid cross-site scripting (XSS) attacks.\\n\\n✅ Use an encoder to minimize XSS risk\\n\\n\`\`\`java\\n  String userInput = req.getQueryString(\\"user\\");\\n  String encodedUserInput = Encode.forHtml(userInput)\\n  response.getWriter().write(encodedUserInput)\\n\`\`\`\\n\\n✅ Even better, sanitize user input\\n\\n\`\`\`java\\n  String userInput = req.getQueryString(\\"user\\");\\n  String sanitizedUserInput = sanitize(userInput);\\n  response.getWriter().write(sanitizedUserInput);\\n\`\`\`\\n\\n## Resources\\n\\n- [OWASP XSS Prevention Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)\\n- [OWASP Java Encoder](https://owasp.org/www-project-java-encoder/)\\n",
      "documentation_url": "https://docs.bearer.com/reference/rules/java_lang_xss_response_writer",
      "line_number": 14,
      "full_filename": "/tmp/bearer-scan/vulnerable.java",
      "filename": ".",
      "source": {
        "start": 14,
        "end": 14,
        "column": {
          "start": 7,
          "end": 24
        }
      },
      "sink": {
        "start": 14,
        "end": 14,
        "column": {
          "start": 7,
          "end": 24
        },
        "content": "out.println(user)"
      },
      "parent_line_number": 14,
      "snippet": "out.println(user)",
      "fingerprint": "32b949b64f3ce7cf97466aa83aae561a_0",
      "old_fingerprint": "4dd9cda869eb830ac4340c82e1084f03_0"
    }
  ]
}"
`;
