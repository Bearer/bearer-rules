high:
    - rule:
        cwe_ids:
            - "327"
        id: javascript_lang_weak_password_encryption_des
        title: Weak encryption algorithm (DES) used for password detected.
        description: |
            ## Description

            According to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption), DES (Data Encryption Standard) is considered a weak encryption algorithm and therefore shouldn't be used.

            Moreover, since encryption is reversible, it is possible to retrieve the plaintext value. This makes encryption a bad choice for passwords. Instead, passwords should be hashed.

            ## Remediations

            ❌ Do not use encryption for passwords, wherever possible.

            ✅ Use a recommended hashing library such as Argon2id for passwords

            ```javascript
              const argon2 = require("argon2");

              const hash = await argon2.hash(req.params.password, { type: argon2.argon2id })
            ```

            ## Resources
            - [OWASP Password Storage Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html)
        documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_weak_password_encryption_des
      line_number: 3
      full_filename: /tmp/scan/des_password.js
      filename: .
      data_type:
        category_uuid: dd88aee5-9d40-4ad2-8983-0c791ddec47c
        name: Passwords
      category_groups:
        - PII
        - Personal Data
      source:
        location:
            start: 3
            end: 3
            column:
                start: 22
                end: 35
      sink:
        location:
            start: 3
            end: 3
            column:
                start: 1
                end: 50
        content: CryptoJS.DES.encrypt(user.password, "secret key")
      parent_line_number: 3
      snippet: CryptoJS.DES.encrypt(user.password, "secret key")
      fingerprint: 5a44201c9c3986673d27c5e23a7d3d4d_0
      old_fingerprint: 217e619c5d452b03a878f483a34bddfc_0

