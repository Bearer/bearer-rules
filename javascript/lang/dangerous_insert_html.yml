---
disabled: true
patterns:
- pattern: 'document.$<METHOD>($<...>$<DATA>$<...>)

'
  filters:
  - variable: METHOD
    values:
    - write
    - writeLn
  - not:
      variable: DATA
      detection: javascript_dangerous_insert_html_sanitzed_input
- pattern: "$<_>.$<PROPERTY> = $<DATA>\n"
  filters:
  - variable: PROPERTY
    values:
    - outerHTML
    - innerHTML
  - not:
      variable: DATA
      detection: javascript_dangerous_insert_html_sanitzed_input
- pattern: "$<_>.$<METHOD>($<...>$<DATA>$<...>)\n"
  filters:
  - variable: METHOD
    values:
    - setHTML
    - insertAdjacentHTML
    - createElement
    - replaceWith
    - replaceChildren
  - not:
      variable: DATA
      detection: javascript_dangerous_insert_html_sanitzed_input
auxiliary:
- id: javascript_dangerous_insert_html_sanitzed_input
  patterns:
  - pattern: "$<STRING_LITERAL>\n"
    filters:
    - variable: STRING_LITERAL
      detection: string_literal
      contains: false
  - "$<_>.sanitize()"
  - "$<_>.sanitizeHTML()"
  - "$<_>.sanitizeHtml()"
- id: javascript_dangerous_insert_html_unsanitzed_input
  patterns:
  - "`$<...>${$<...>$<_>$<...>}$<...>`\n"
languages:
- javascript
severity: high
metadata:
  description: Dangerous dynamic HTML insert detected.
  remediation_message: |
    ## Description
    There are XSS vulnerabilities when dynamically inserting HTML that contains unsanitized data.

    ## Remediations
    Make sure you use HTML sanitization library before inserting html

    ```javascript
    import sanitizeHtml from 'sanitize-html';

    const html = `<strong>${user.Input}</strong>`;
    document.body.innerHTML = sanitizeHtml(html)
    ```

    ## Resources
    - [OWASP XSS explained](https://owasp.org/www-community/attacks/xss/)
  cwe_id:
  - 79
  id: javascript_lang_dangerous_insert_html
  documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_dangerous_insert_html
