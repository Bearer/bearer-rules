low:
    - rule:
        cwe_ids:
            - "134"
        id: javascript_lang_format_string_using_user_input
        title: User input in format string detected.
        description: |
            ## Description

            If an application includes user input directly in a format string, an
            attacker can use format specifiers in the user input to produce misleading
            or fabricated messages.

            ## Remediations

            ❌ Avoid format strings containing user input:

            ```javascript
            console.log(`The value was ${req.params.value}`)
            ```

            ✅ Use a literal format string with additional arguments:

            ```javascript
            console.log("The value was %s", req.params.value)
            ```
        documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_format_string_using_user_input
      line_number: 1
      full_filename: /tmp/scan/bad.js
      filename: .
      source:
        location:
            start: 1
            end: 1
            column:
                start: 1
                end: 47
      sink:
        location:
            start: 1
            end: 1
            column:
                start: 1
                end: 47
        content: 'console.error(`Value: ${req.params.value}`, e)'
      parent_line_number: 1
      snippet: 'console.error(`Value: ${req.params.value}`, e)'
      fingerprint: 16cab48ad098a8cc47c366d7cec8f691_0
      old_fingerprint: 6f76b089b4cff1123588cf15c64cd6d1_0
    - rule:
        cwe_ids:
            - "134"
        id: javascript_lang_format_string_using_user_input
        title: User input in format string detected.
        description: |
            ## Description

            If an application includes user input directly in a format string, an
            attacker can use format specifiers in the user input to produce misleading
            or fabricated messages.

            ## Remediations

            ❌ Avoid format strings containing user input:

            ```javascript
            console.log(`The value was ${req.params.value}`)
            ```

            ✅ Use a literal format string with additional arguments:

            ```javascript
            console.log("The value was %s", req.params.value)
            ```
        documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_format_string_using_user_input
      line_number: 3
      full_filename: /tmp/scan/bad.js
      filename: .
      source:
        location:
            start: 3
            end: 3
            column:
                start: 1
                end: 42
      sink:
        location:
            start: 3
            end: 3
            column:
                start: 1
                end: 42
        content: 'util.format(`Value: ${req.params.value}`)'
      parent_line_number: 3
      snippet: 'util.format(`Value: ${req.params.value}`)'
      fingerprint: 16cab48ad098a8cc47c366d7cec8f691_1
      old_fingerprint: 6f76b089b4cff1123588cf15c64cd6d1_1
    - rule:
        cwe_ids:
            - "134"
        id: javascript_lang_format_string_using_user_input
        title: User input in format string detected.
        description: |
            ## Description

            If an application includes user input directly in a format string, an
            attacker can use format specifiers in the user input to produce misleading
            or fabricated messages.

            ## Remediations

            ❌ Avoid format strings containing user input:

            ```javascript
            console.log(`The value was ${req.params.value}`)
            ```

            ✅ Use a literal format string with additional arguments:

            ```javascript
            console.log("The value was %s", req.params.value)
            ```
        documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_format_string_using_user_input
      line_number: 5
      full_filename: /tmp/scan/bad.js
      filename: .
      source:
        location:
            start: 5
            end: 5
            column:
                start: 1
                end: 63
      sink:
        location:
            start: 5
            end: 5
            column:
                start: 1
                end: 63
        content: 'util.formatWithOptions({}, `Value: ${req.params.value} %s`, x)'
      parent_line_number: 5
      snippet: 'util.formatWithOptions({}, `Value: ${req.params.value} %s`, x)'
      fingerprint: 16cab48ad098a8cc47c366d7cec8f691_2
      old_fingerprint: 6f76b089b4cff1123588cf15c64cd6d1_2

