medium:
    - rule:
        cwe_ids:
            - "601"
        id: javascript_express_open_redirect
        title: Open redirect detected.
        description: |
            ## Description
            A redirect using unsanitized user input is bad practice and puts your application at greater risk of phishing attacks.

            ## Remediations
            ❌ Do not use unsanitized user input when constructing URLs

            ✅ Instead, ensure the input is validated by using a safe list or a mapping when constructing URLs

            ```javascript
              var map = {
                "1": "/planes",
                "2": "/trains",
                "3": "/automobiles",
              }

              res.redirect(map[req.body.transport])
            ```
            ## Resources
            - [OWASP open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)
        documentation_url: https://docs.bearer.com/reference/rules/javascript_express_open_redirect
      line_number: 2
      filename: /tmp/scan/open_redirect.js
      parent_line_number: 2
      snippet: res.redirect(req.params.url)
      fingerprint: d4d8a6e1c0492312e32ce6e6c0c431e6_0
    - rule:
        cwe_ids:
            - "601"
        id: javascript_express_open_redirect
        title: Open redirect detected.
        description: |
            ## Description
            A redirect using unsanitized user input is bad practice and puts your application at greater risk of phishing attacks.

            ## Remediations
            ❌ Do not use unsanitized user input when constructing URLs

            ✅ Instead, ensure the input is validated by using a safe list or a mapping when constructing URLs

            ```javascript
              var map = {
                "1": "/planes",
                "2": "/trains",
                "3": "/automobiles",
              }

              res.redirect(map[req.body.transport])
            ```
            ## Resources
            - [OWASP open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)
        documentation_url: https://docs.bearer.com/reference/rules/javascript_express_open_redirect
      line_number: 3
      filename: /tmp/scan/open_redirect.js
      parent_line_number: 3
      snippet: res.redirect(req.query.url + "/bar")
      fingerprint: d4d8a6e1c0492312e32ce6e6c0c431e6_1
    - rule:
        cwe_ids:
            - "601"
        id: javascript_express_open_redirect
        title: Open redirect detected.
        description: |
            ## Description
            A redirect using unsanitized user input is bad practice and puts your application at greater risk of phishing attacks.

            ## Remediations
            ❌ Do not use unsanitized user input when constructing URLs

            ✅ Instead, ensure the input is validated by using a safe list or a mapping when constructing URLs

            ```javascript
              var map = {
                "1": "/planes",
                "2": "/trains",
                "3": "/automobiles",
              }

              res.redirect(map[req.body.transport])
            ```
            ## Resources
            - [OWASP open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)
        documentation_url: https://docs.bearer.com/reference/rules/javascript_express_open_redirect
      line_number: 4
      filename: /tmp/scan/open_redirect.js
      parent_line_number: 4
      snippet: res.redirect("https://" + req.params.url + "/bar")
      fingerprint: d4d8a6e1c0492312e32ce6e6c0c431e6_2
    - rule:
        cwe_ids:
            - "601"
        id: javascript_express_open_redirect
        title: Open redirect detected.
        description: |
            ## Description
            A redirect using unsanitized user input is bad practice and puts your application at greater risk of phishing attacks.

            ## Remediations
            ❌ Do not use unsanitized user input when constructing URLs

            ✅ Instead, ensure the input is validated by using a safe list or a mapping when constructing URLs

            ```javascript
              var map = {
                "1": "/planes",
                "2": "/trains",
                "3": "/automobiles",
              }

              res.redirect(map[req.body.transport])
            ```
            ## Resources
            - [OWASP open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)
        documentation_url: https://docs.bearer.com/reference/rules/javascript_express_open_redirect
      line_number: 5
      filename: /tmp/scan/open_redirect.js
      parent_line_number: 5
      snippet: res.redirect("http://" + req.params.path + "/bar")
      fingerprint: d4d8a6e1c0492312e32ce6e6c0c431e6_3

