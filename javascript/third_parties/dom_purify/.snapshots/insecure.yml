high:
    - rule:
        cwe_ids:
            - "79"
        id: javascript_third_parties_dom_purify
        title: Insecure use of DOMPurify detected.
        description: |
            ## Description
            There are XSS vulnerabilites when using DOMPurify's sanitize without proper configuration

            ## Remediations

            Specify a secure configuration option:
            ```
              DOMPurify.sanitize(htmlToSanitize, { RETURN_DOM_IMPORT:true })
            ```

            or:

            ```
              DOMPurify.sanitize(htmlToSanitize, { RETURN_DOM_FRAGMENT: true })
            ```

            ## Resources
            - [Vulnerability explained](https://research.securitum.com/mutation-xss-via-mathml-mutation-dompurify-2-0-17-bypass)
        documentation_url: https://docs.bearer.com/reference/rules/javascript_third_parties_dom_purify
      line_number: 2
      full_filename: /tmp/scan/insecure/insecure.js
      filename: insecure.js
      source:
        location:
            start: 2
            end: 2
            column:
                start: 14
                end: 47
      sink:
        location:
            start: 2
            end: 2
            column:
                start: 14
                end: 47
        content: DOMPurify.sanitize(dirty, config)
      parent_line_number: 2
      snippet: DOMPurify.sanitize(dirty, config)
      fingerprint: e58733026a71734e4be7c15cc5b475ac_0
      old_fingerprint: 88d6b7385dc1a4a405971a2fb406273e_0
    - rule:
        cwe_ids:
            - "79"
        id: javascript_third_parties_dom_purify
        title: Insecure use of DOMPurify detected.
        description: |
            ## Description
            There are XSS vulnerabilites when using DOMPurify's sanitize without proper configuration

            ## Remediations

            Specify a secure configuration option:
            ```
              DOMPurify.sanitize(htmlToSanitize, { RETURN_DOM_IMPORT:true })
            ```

            or:

            ```
              DOMPurify.sanitize(htmlToSanitize, { RETURN_DOM_FRAGMENT: true })
            ```

            ## Resources
            - [Vulnerability explained](https://research.securitum.com/mutation-xss-via-mathml-mutation-dompurify-2-0-17-bypass)
        documentation_url: https://docs.bearer.com/reference/rules/javascript_third_parties_dom_purify
      line_number: 5
      full_filename: /tmp/scan/insecure/insecure.js
      filename: insecure.js
      source:
        location:
            start: 5
            end: 5
            column:
                start: 14
                end: 39
      sink:
        location:
            start: 5
            end: 5
            column:
                start: 14
                end: 39
        content: DOMPurify.sanitize(dirty)
      parent_line_number: 5
      snippet: DOMPurify.sanitize(dirty)
      fingerprint: e58733026a71734e4be7c15cc5b475ac_1
      old_fingerprint: 88d6b7385dc1a4a405971a2fb406273e_1

