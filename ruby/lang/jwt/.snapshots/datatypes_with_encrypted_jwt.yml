high:
    - rule:
        cwe_ids:
            - "315"
        id: ruby_lang_jwt
        title: Sensitive data in a JWT detected.
        description: |
            ## Description

            JWTs are not a secure place to store sensitive data. This rule looks for any sensitive data types saved to a JWT.

            ## Remediations

            ❌ Avoid storing sensitive data in JWT:

            ```ruby
            payload = { data: 'data', email: user.email }
            token = JWT.encode payload, hmac_secret, 'HS256'
            ```

            ✅ If you need to store user's information, use their unique database identifier instead of personal identifiable information:

            ```ruby
            payload = { data: 'data', user_id: user.uuid }
            token = JWT.encode payload, hmac_secret, 'HS256'
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_jwt
      line_number: 2
      full_filename: /tmp/scan/datatypes_with_encrypted_jwt.rb
      filename: .
      data_type:
        category_uuid: cef587dd-76db-430b-9e18-7b031e1a193b
        name: Email Address
      category_groups:
        - PII
        - Personal Data
      source:
        location:
            start: 2
            end: 2
            column:
                start: 20
                end: 38
      sink:
        location:
            start: 2
            end: 2
            column:
                start: 1
                end: 67
        content: 'JWT.encode({ user: current_user.email }, private_key, ''HS256'', {})'
      parent_line_number: 2
      snippet: 'JWT.encode({ user: current_user.email }, private_key, ''HS256'', {})'
      fingerprint: ea186f391e78c5aef2a6a0e01d435e54_1
      old_fingerprint: bc245be6c3077a136aeb98500f93b544_1
    - rule:
        cwe_ids:
            - "315"
        id: ruby_lang_jwt
        title: Sensitive data in a JWT detected.
        description: |
            ## Description

            JWTs are not a secure place to store sensitive data. This rule looks for any sensitive data types saved to a JWT.

            ## Remediations

            ❌ Avoid storing sensitive data in JWT:

            ```ruby
            payload = { data: 'data', email: user.email }
            token = JWT.encode payload, hmac_secret, 'HS256'
            ```

            ✅ If you need to store user's information, use their unique database identifier instead of personal identifiable information:

            ```ruby
            payload = { data: 'data', user_id: user.uuid }
            token = JWT.encode payload, hmac_secret, 'HS256'
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_jwt
      line_number: 4
      full_filename: /tmp/scan/datatypes_with_encrypted_jwt.rb
      filename: .
      data_type:
        category_uuid: cef587dd-76db-430b-9e18-7b031e1a193b
        name: Email Address
      category_groups:
        - PII
        - Personal Data
      source:
        location:
            start: 4
            end: 4
            column:
                start: 20
                end: 38
      sink:
        location:
            start: 4
            end: 4
            column:
                start: 1
                end: 60
        content: 'JWT.encode({ user: current_user.email }, ENV["SECRET_KEY"])'
      parent_line_number: 4
      snippet: 'JWT.encode({ user: current_user.email }, ENV["SECRET_KEY"])'
      fingerprint: ea186f391e78c5aef2a6a0e01d435e54_2
      old_fingerprint: bc245be6c3077a136aeb98500f93b544_2
    - rule:
        cwe_ids:
            - "315"
        id: ruby_lang_jwt
        title: Sensitive data in a JWT detected.
        description: |
            ## Description

            JWTs are not a secure place to store sensitive data. This rule looks for any sensitive data types saved to a JWT.

            ## Remediations

            ❌ Avoid storing sensitive data in JWT:

            ```ruby
            payload = { data: 'data', email: user.email }
            token = JWT.encode payload, hmac_secret, 'HS256'
            ```

            ✅ If you need to store user's information, use their unique database identifier instead of personal identifiable information:

            ```ruby
            payload = { data: 'data', user_id: user.uuid }
            token = JWT.encode payload, hmac_secret, 'HS256'
            ```
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_jwt
      line_number: 6
      full_filename: /tmp/scan/datatypes_with_encrypted_jwt.rb
      filename: .
      data_type:
        category_uuid: 14124881-6b92-4fc5-8005-ea7c1c09592e
        name: Fullname
      category_groups:
        - PII
        - Personal Data
      source:
        location:
            start: 6
            end: 6
            column:
                start: 25
                end: 34
      sink:
        location:
            start: 6
            end: 6
            column:
                start: 1
                end: 72
        content: 'JWT.encode({ user_name: user.name }, Rails.application.secret_key_base)'
      parent_line_number: 6
      snippet: 'JWT.encode({ user_name: user.name }, Rails.application.secret_key_base)'
      fingerprint: ea186f391e78c5aef2a6a0e01d435e54_0
      old_fingerprint: bc245be6c3077a136aeb98500f93b544_0

