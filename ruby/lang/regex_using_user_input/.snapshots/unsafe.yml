low:
    - rule:
        cwe_ids:
            - "1333"
        id: ruby_lang_regex_using_user_input
        title: Regular expression built from user input detected.
        description: |
            ## Description

            Applications should avoid constructing regular expressions from user input.
            Regular expressions can have exponential worst-case computational
            complexity, allowing users to trigger this behaviour can result in
            excessive CPU consumption causing a regular expression denial of service (ReDoS).

            ## Remediations
            ❌ Avoid using untrusted or user data when building regular expressions

            ✅ Specify a timeout when working with regular expressions

            ```ruby
              Regexp.new(/(a|b)/, timeout: 3)
            ```

            ## Resources
            - [OWASP ReDoS attacks explained](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_regex_using_user_input
      line_number: 1
      full_filename: /tmp/scan/unsafe.rb
      filename: .
      source:
        location:
            start: 1
            end: 1
            column:
                start: 1
                end: 21
        content: /#{params[:oops]}.*/
      sink:
        location:
            start: 1
            end: 1
            column:
                start: 1
                end: 21
      parent_line_number: 1
      snippet: /#{params[:oops]}.*/
      fingerprint: 96c8bf129cd985608c41f865f39cbdab_0
      old_fingerprint: c08b304b13481147c3fbc701116587f0_0
    - rule:
        cwe_ids:
            - "1333"
        id: ruby_lang_regex_using_user_input
        title: Regular expression built from user input detected.
        description: |
            ## Description

            Applications should avoid constructing regular expressions from user input.
            Regular expressions can have exponential worst-case computational
            complexity, allowing users to trigger this behaviour can result in
            excessive CPU consumption causing a regular expression denial of service (ReDoS).

            ## Remediations
            ❌ Avoid using untrusted or user data when building regular expressions

            ✅ Specify a timeout when working with regular expressions

            ```ruby
              Regexp.new(/(a|b)/, timeout: 3)
            ```

            ## Resources
            - [OWASP ReDoS attacks explained](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_regex_using_user_input
      line_number: 3
      full_filename: /tmp/scan/unsafe.rb
      filename: .
      source:
        location:
            start: 3
            end: 3
            column:
                start: 1
                end: 27
        content: '%r{abc#{params[:oops]}def}'
      sink:
        location:
            start: 3
            end: 3
            column:
                start: 1
                end: 27
      parent_line_number: 3
      snippet: '%r{abc#{params[:oops]}def}'
      fingerprint: 96c8bf129cd985608c41f865f39cbdab_1
      old_fingerprint: c08b304b13481147c3fbc701116587f0_1
    - rule:
        cwe_ids:
            - "1333"
        id: ruby_lang_regex_using_user_input
        title: Regular expression built from user input detected.
        description: |
            ## Description

            Applications should avoid constructing regular expressions from user input.
            Regular expressions can have exponential worst-case computational
            complexity, allowing users to trigger this behaviour can result in
            excessive CPU consumption causing a regular expression denial of service (ReDoS).

            ## Remediations
            ❌ Avoid using untrusted or user data when building regular expressions

            ✅ Specify a timeout when working with regular expressions

            ```ruby
              Regexp.new(/(a|b)/, timeout: 3)
            ```

            ## Resources
            - [OWASP ReDoS attacks explained](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_regex_using_user_input
      line_number: 5
      full_filename: /tmp/scan/unsafe.rb
      filename: .
      source:
        location:
            start: 5
            end: 5
            column:
                start: 1
                end: 26
        content: Regexp.new(params[:oops])
      sink:
        location:
            start: 5
            end: 5
            column:
                start: 1
                end: 26
      parent_line_number: 5
      snippet: Regexp.new(params[:oops])
      fingerprint: 96c8bf129cd985608c41f865f39cbdab_2
      old_fingerprint: c08b304b13481147c3fbc701116587f0_2

