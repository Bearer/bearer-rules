high:
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 3
      filename: /tmp/scan/unsafe_shell.rb
      parent_line_number: 3
      snippet: Shell.cd(params[:oops])
      fingerprint: 74d29af70dfb24f5e8ec7a6ff9a8afad_0
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 5
      filename: /tmp/scan/unsafe_shell.rb
      parent_line_number: 5
      snippet: Shell.default_system_path = params[:oops]
      fingerprint: 74d29af70dfb24f5e8ec7a6ff9a8afad_1
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 7
      filename: /tmp/scan/unsafe_shell.rb
      parent_line_number: 7
      snippet: Shell.new(params[:oops], umask)
      fingerprint: 74d29af70dfb24f5e8ec7a6ff9a8afad_2
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 9
      filename: /tmp/scan/unsafe_shell.rb
      parent_line_number: 9
      snippet: shell.pushdir(params[:oops], true)
      fingerprint: 74d29af70dfb24f5e8ec7a6ff9a8afad_3
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 12
      filename: /tmp/scan/unsafe_shell.rb
      parent_line_number: 12
      snippet: processor1.foreach(params[:oops], rs) {}
      fingerprint: 74d29af70dfb24f5e8ec7a6ff9a8afad_4
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 15
      filename: /tmp/scan/unsafe_shell.rb
      parent_line_number: 15
      snippet: processor2.test(:exists?, x, params[:oops])
      fingerprint: 74d29af70dfb24f5e8ec7a6ff9a8afad_5
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 17
      filename: /tmp/scan/unsafe_shell.rb
      parent_line_number: 17
      snippet: processor2[:exists?, x, params[:oops], y]
      fingerprint: 74d29af70dfb24f5e8ec7a6ff9a8afad_6
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 20
      filename: /tmp/scan/unsafe_shell.rb
      parent_line_number: 20
      snippet: test(:exists?, params[:oops])
      fingerprint: 74d29af70dfb24f5e8ec7a6ff9a8afad_7
    - rule:
        cwe_ids:
            - "22"
            - "73"
        id: ruby_lang_path_using_user_input
        title: Do not use user input to form file paths.
        description: |
            ## Description
            Using raw unsanitized input when forming filenames or file paths is bad practice.
            It can lead to path manipulation, by which attackers can gain access to resources outside of the intended scope.

            ## Remediations
            ❌ Avoid wherever possible

            ✅ Validate expected file paths using `File` methods

            ```ruby
              path = File.expand("/home/" + params[:resource_name])
              if path.starts_with?("/home/")
                Dir.chdir(path)
              else
                # path is unexpected
              end
            ```

            ## Resources
            - [OWASP path traversal attack](https://owasp.org/www-community/attacks/Path_Traversal)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_path_using_user_input
      line_number: 24
      filename: /tmp/scan/unsafe_shell.rb
      parent_line_number: 24
      snippet: Shell.new(params[:oops])
      fingerprint: 74d29af70dfb24f5e8ec7a6ff9a8afad_8

