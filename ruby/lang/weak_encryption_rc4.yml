patterns:
  - pattern: |
      $<VAR>.$<METHOD>($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: VAR
        detection: ruby_lang_weak_encryption_rc4_init
      - variable: METHOD
        values:
          - encrypt
          - encrypt!
          - decrypt
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: datatype
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: datatype
languages:
  - ruby
auxiliary:
  - id: ruby_lang_weak_encryption_rc4_init
    patterns:
      - RC4.new()
metadata:
  description: "Weak encryption algorithm (RC4) detected."
  remediation_message: |
    ## Description

    A weak encryption library can lead to data breaches and greater security risk.

    ## Remediations
    According to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption), RC4 (Rivest Cipher 4) is considered a weak encryption algorithm and therefore shouldn't be used.

    ❌ Avoid libraries and algorithms with known weaknesses:

    ```ruby
    RC4.new("weak password encryption")
    ```

    ✅ Instead, we recommend using bcrypt:

    ```ruby
    BCrypt::Password.create('iLOVEdogs123')
    ```

    ## Resources
    - [BCrypt Explained](https://dev.to/sylviapap/bcrypt-explained-4k5c)
  cwe_id:
    - 331
    - 326
  id: ruby_lang_weak_encryption_rc4
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_weak_encryption_rc4
