high:
    - rule:
        cwe_ids:
            - "78"
        id: ruby_lang_exec_using_user_input
        title: Execution of OS command formed with user input detected.
        description: |
            ## Description

            Applications should not execute OS commands that are formed from user input.
            This rule checks for external commands containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input when executing commands:

            ```ruby
            system(params[:command])
            ```

            ✅ Use user input indirectly when executing commands:

            ```ruby
            command =
              case params[:action]
              when "option1"
                "command1"
              when "option2"
                "command2"
              end

            system(command)
            ```

            ## Resources
            - [OWASP Ruby command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheat_Sheet.html#command-injection)
            - [OWASP OS command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/OS_Command_Injection_Defense_Cheat_Sheet.html)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_exec_using_user_input
      line_number: 3
      full_filename: /tmp/scan/unsafe_shell.rb
      filename: .
      source:
        location:
            start: 3
            end: 3
            column:
                start: 1
                end: 45
        content: Shell.alias_command("foo", params[:oops]) {}
      sink:
        location:
            start: 3
            end: 3
            column:
                start: 1
                end: 45
      parent_line_number: 3
      snippet: Shell.alias_command("foo", params[:oops]) {}
      fingerprint: 1c074b69a64b914d2a6310c63c4eed91_0
      old_fingerprint: 32c4da2f35e584c6772677843d02862c_0
    - rule:
        cwe_ids:
            - "78"
        id: ruby_lang_exec_using_user_input
        title: Execution of OS command formed with user input detected.
        description: |
            ## Description

            Applications should not execute OS commands that are formed from user input.
            This rule checks for external commands containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input when executing commands:

            ```ruby
            system(params[:command])
            ```

            ✅ Use user input indirectly when executing commands:

            ```ruby
            command =
              case params[:action]
              when "option1"
                "command1"
              when "option2"
                "command2"
              end

            system(command)
            ```

            ## Resources
            - [OWASP Ruby command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheat_Sheet.html#command-injection)
            - [OWASP OS command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/OS_Command_Injection_Defense_Cheat_Sheet.html)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_exec_using_user_input
      line_number: 4
      full_filename: /tmp/scan/unsafe_shell.rb
      filename: .
      source:
        location:
            start: 4
            end: 4
            column:
                start: 1
                end: 69
        content: Shell::CommandProcessor.alias_command(x, "/bin/#{params[:oops]}") {}
      sink:
        location:
            start: 4
            end: 4
            column:
                start: 1
                end: 69
      parent_line_number: 4
      snippet: Shell::CommandProcessor.alias_command(x, "/bin/#{params[:oops]}") {}
      fingerprint: 1c074b69a64b914d2a6310c63c4eed91_1
      old_fingerprint: 32c4da2f35e584c6772677843d02862c_1
    - rule:
        cwe_ids:
            - "78"
        id: ruby_lang_exec_using_user_input
        title: Execution of OS command formed with user input detected.
        description: |
            ## Description

            Applications should not execute OS commands that are formed from user input.
            This rule checks for external commands containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input when executing commands:

            ```ruby
            system(params[:command])
            ```

            ✅ Use user input indirectly when executing commands:

            ```ruby
            command =
              case params[:action]
              when "option1"
                "command1"
              when "option2"
                "command2"
              end

            system(command)
            ```

            ## Resources
            - [OWASP Ruby command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheat_Sheet.html#command-injection)
            - [OWASP OS command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/OS_Command_Injection_Defense_Cheat_Sheet.html)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_exec_using_user_input
      line_number: 6
      full_filename: /tmp/scan/unsafe_shell.rb
      filename: .
      source:
        location:
            start: 6
            end: 6
            column:
                start: 1
                end: 57
        content: Shell.def_system_command("foo", "bar", params[:oops]) {}
      sink:
        location:
            start: 6
            end: 6
            column:
                start: 1
                end: 57
      parent_line_number: 6
      snippet: Shell.def_system_command("foo", "bar", params[:oops]) {}
      fingerprint: 1c074b69a64b914d2a6310c63c4eed91_2
      old_fingerprint: 32c4da2f35e584c6772677843d02862c_2
    - rule:
        cwe_ids:
            - "78"
        id: ruby_lang_exec_using_user_input
        title: Execution of OS command formed with user input detected.
        description: |
            ## Description

            Applications should not execute OS commands that are formed from user input.
            This rule checks for external commands containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input when executing commands:

            ```ruby
            system(params[:command])
            ```

            ✅ Use user input indirectly when executing commands:

            ```ruby
            command =
              case params[:action]
              when "option1"
                "command1"
              when "option2"
                "command2"
              end

            system(command)
            ```

            ## Resources
            - [OWASP Ruby command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheat_Sheet.html#command-injection)
            - [OWASP OS command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/OS_Command_Injection_Defense_Cheat_Sheet.html)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_exec_using_user_input
      line_number: 7
      full_filename: /tmp/scan/unsafe_shell.rb
      filename: .
      source:
        location:
            start: 7
            end: 7
            column:
                start: 1
                end: 68
        content: Shell::CommandProcessor.def_system_command("foo", params[:oops]) {}
      sink:
        location:
            start: 7
            end: 7
            column:
                start: 1
                end: 68
      parent_line_number: 7
      snippet: Shell::CommandProcessor.def_system_command("foo", params[:oops]) {}
      fingerprint: 1c074b69a64b914d2a6310c63c4eed91_3
      old_fingerprint: 32c4da2f35e584c6772677843d02862c_3
    - rule:
        cwe_ids:
            - "78"
        id: ruby_lang_exec_using_user_input
        title: Execution of OS command formed with user input detected.
        description: |
            ## Description

            Applications should not execute OS commands that are formed from user input.
            This rule checks for external commands containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input when executing commands:

            ```ruby
            system(params[:command])
            ```

            ✅ Use user input indirectly when executing commands:

            ```ruby
            command =
              case params[:action]
              when "option1"
                "command1"
              when "option2"
                "command2"
              end

            system(command)
            ```

            ## Resources
            - [OWASP Ruby command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheat_Sheet.html#command-injection)
            - [OWASP OS command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/OS_Command_Injection_Defense_Cheat_Sheet.html)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_exec_using_user_input
      line_number: 12
      full_filename: /tmp/scan/unsafe_shell.rb
      filename: .
      source:
        location:
            start: 12
            end: 12
            column:
                start: 1
                end: 33
        content: processor1.system(params[:oops])
      sink:
        location:
            start: 12
            end: 12
            column:
                start: 1
                end: 33
      parent_line_number: 12
      snippet: processor1.system(params[:oops])
      fingerprint: 1c074b69a64b914d2a6310c63c4eed91_4
      old_fingerprint: 32c4da2f35e584c6772677843d02862c_4
    - rule:
        cwe_ids:
            - "78"
        id: ruby_lang_exec_using_user_input
        title: Execution of OS command formed with user input detected.
        description: |
            ## Description

            Applications should not execute OS commands that are formed from user input.
            This rule checks for external commands containing user-supplied data.

            ## Remediations

            ❌ Avoid using user input when executing commands:

            ```ruby
            system(params[:command])
            ```

            ✅ Use user input indirectly when executing commands:

            ```ruby
            command =
              case params[:action]
              when "option1"
                "command1"
              when "option2"
                "command2"
              end

            system(command)
            ```

            ## Resources
            - [OWASP Ruby command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheat_Sheet.html#command-injection)
            - [OWASP OS command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/OS_Command_Injection_Defense_Cheat_Sheet.html)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_exec_using_user_input
      line_number: 15
      full_filename: /tmp/scan/unsafe_shell.rb
      filename: .
      source:
        location:
            start: 15
            end: 15
            column:
                start: 1
                end: 36
        content: processor2.system(x, params[:oops])
      sink:
        location:
            start: 15
            end: 15
            column:
                start: 1
                end: 36
      parent_line_number: 15
      snippet: processor2.system(x, params[:oops])
      fingerprint: 1c074b69a64b914d2a6310c63c4eed91_5
      old_fingerprint: 32c4da2f35e584c6772677843d02862c_5

