high:
    - rule:
        cwe_ids:
            - "331"
            - "326"
        id: ruby_lang_weak_encryption
        title: Weak encryption library usage detected.
        description: |
            ## Description

            A weak encryption or hashing library can lead to data breaches and greater security risk. This rule checks for the use of weak encryption and hashing libraries or algorithms.

            ## Remediations
            According to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption): MD5, RC4, DES, Blowfish, SHA1. 1024-bit RSA or DSA, 160-bit ECDSA (elliptic curves), 80/112-bit 2TDEA (two key triple DES) are considered as weak hash/encryption algorithms and therefor shouldn't be used.

            ❌ Avoid libraries and algorithms with known weaknesses:

            ```ruby
            Digest::SHA1.hexdigest 'weak password encryption'
            Crypt::Blowfish.new("weak password encryption")
            RC4.new("weak password encryption")
            OpenSSL::PKey::RSA.new 1024
            OpenSSL::PKey::DSA.new 1024
            Digest::MD5.hexdigest 'unsecure string'
            ```

            ✅ Instead, we recommend using bcrypt:

            ```ruby
            BCrypt::Password.create('iLOVEdogs123')
            ```

            ## Resources
            - [BCrypt Explained](https://dev.to/sylviapap/bcrypt-explained-4k5c)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_weak_encryption
      line_number: 5
      full_filename: /tmp/scan/openssl_rsa_data.rb
      filename: .
      category_groups:
        - PII
        - Personal Data
      source:
        location:
            start: 5
            end: 5
            column:
                start: 1
                end: 42
        content: rsa_encrypt.export(cipher, user.password)
      sink:
        location:
            start: 5
            end: 5
            column:
                start: 1
                end: 42
      parent_line_number: 5
      snippet: rsa_encrypt.export(cipher, user.password)
      fingerprint: fef109862dd2c9654945fcd2f1fedf8c_1
      old_fingerprint: 50c53016b42972af5401228ccb82fc01_1
    - rule:
        cwe_ids:
            - "331"
            - "326"
        id: ruby_lang_weak_encryption
        title: Weak encryption library usage detected.
        description: |
            ## Description

            A weak encryption or hashing library can lead to data breaches and greater security risk. This rule checks for the use of weak encryption and hashing libraries or algorithms.

            ## Remediations
            According to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption): MD5, RC4, DES, Blowfish, SHA1. 1024-bit RSA or DSA, 160-bit ECDSA (elliptic curves), 80/112-bit 2TDEA (two key triple DES) are considered as weak hash/encryption algorithms and therefor shouldn't be used.

            ❌ Avoid libraries and algorithms with known weaknesses:

            ```ruby
            Digest::SHA1.hexdigest 'weak password encryption'
            Crypt::Blowfish.new("weak password encryption")
            RC4.new("weak password encryption")
            OpenSSL::PKey::RSA.new 1024
            OpenSSL::PKey::DSA.new 1024
            Digest::MD5.hexdigest 'unsecure string'
            ```

            ✅ Instead, we recommend using bcrypt:

            ```ruby
            BCrypt::Password.create('iLOVEdogs123')
            ```

            ## Resources
            - [BCrypt Explained](https://dev.to/sylviapap/bcrypt-explained-4k5c)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_weak_encryption
      line_number: 7
      full_filename: /tmp/scan/openssl_rsa_data.rb
      filename: .
      category_groups:
        - PII
        - Personal Data
      source:
        location:
            start: 7
            end: 7
            column:
                start: 1
                end: 61
        content: OpenSSL::PKey::RSA.new(1024).to_pem(cipher, user.first_name)
      sink:
        location:
            start: 7
            end: 7
            column:
                start: 1
                end: 61
      parent_line_number: 7
      snippet: OpenSSL::PKey::RSA.new(1024).to_pem(cipher, user.first_name)
      fingerprint: fef109862dd2c9654945fcd2f1fedf8c_0
      old_fingerprint: 50c53016b42972af5401228ccb82fc01_0

