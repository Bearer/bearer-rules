low:
    - rule:
        cwe_ids:
            - "625"
        id: ruby_rails_permissive_regex_validation
        title: Validation using permissive regular expression detected.
        description: |
            ## Description

            Validations using regular expressions should use the start of text (\A) and
            end of text (\z or \Z) boundaries.

            ## Remediations

            ❌ Avoid matching without start and end boundaries:

            ```ruby
            validates :attribute, format: { with: /foo/}
            ```

            ❌ Avoid using line-based boundaries:

            ```ruby
            validates :attribute, format: { with: /^foo$/}
            ```

            ✅ Use whole-text boundaries:

            ```ruby
            validates :attribute1, format: { with: "\Afoo\Z"}
            validates :attribute2, format: { with: "\Afoo\z"}
            ```
            <!--
            ## Resources
            - [Active Record format validation](https://guides.rubyonrails.org/active_record_validations.html#format)
            -->
        documentation_url: https://docs.bearer.com/reference/rules/ruby_rails_permissive_regex_validation
      line_number: 1
      filename: /tmp/scan/bad.rb
      parent_line_number: 1
      snippet: 'validates :attr, format: { with: /^oops$/ }'
      fingerprint: b3da9876f38e5b28bdd462a287153906_0
    - rule:
        cwe_ids:
            - "625"
        id: ruby_rails_permissive_regex_validation
        title: Validation using permissive regular expression detected.
        description: |
            ## Description

            Validations using regular expressions should use the start of text (\A) and
            end of text (\z or \Z) boundaries.

            ## Remediations

            ❌ Avoid matching without start and end boundaries:

            ```ruby
            validates :attribute, format: { with: /foo/}
            ```

            ❌ Avoid using line-based boundaries:

            ```ruby
            validates :attribute, format: { with: /^foo$/}
            ```

            ✅ Use whole-text boundaries:

            ```ruby
            validates :attribute1, format: { with: "\Afoo\Z"}
            validates :attribute2, format: { with: "\Afoo\z"}
            ```
            <!--
            ## Resources
            - [Active Record format validation](https://guides.rubyonrails.org/active_record_validations.html#format)
            -->
        documentation_url: https://docs.bearer.com/reference/rules/ruby_rails_permissive_regex_validation
      line_number: 2
      filename: /tmp/scan/bad.rb
      parent_line_number: 2
      snippet: 'validates :attr, format: { with: %r[oops] }'
      fingerprint: b3da9876f38e5b28bdd462a287153906_1
    - rule:
        cwe_ids:
            - "625"
        id: ruby_rails_permissive_regex_validation
        title: Validation using permissive regular expression detected.
        description: |
            ## Description

            Validations using regular expressions should use the start of text (\A) and
            end of text (\z or \Z) boundaries.

            ## Remediations

            ❌ Avoid matching without start and end boundaries:

            ```ruby
            validates :attribute, format: { with: /foo/}
            ```

            ❌ Avoid using line-based boundaries:

            ```ruby
            validates :attribute, format: { with: /^foo$/}
            ```

            ✅ Use whole-text boundaries:

            ```ruby
            validates :attribute1, format: { with: "\Afoo\Z"}
            validates :attribute2, format: { with: "\Afoo\z"}
            ```
            <!--
            ## Resources
            - [Active Record format validation](https://guides.rubyonrails.org/active_record_validations.html#format)
            -->
        documentation_url: https://docs.bearer.com/reference/rules/ruby_rails_permissive_regex_validation
      line_number: 3
      filename: /tmp/scan/bad.rb
      parent_line_number: 3
      snippet: 'validates :attr, format: { with: "\Aoops" }'
      fingerprint: b3da9876f38e5b28bdd462a287153906_2
    - rule:
        cwe_ids:
            - "625"
        id: ruby_rails_permissive_regex_validation
        title: Validation using permissive regular expression detected.
        description: |
            ## Description

            Validations using regular expressions should use the start of text (\A) and
            end of text (\z or \Z) boundaries.

            ## Remediations

            ❌ Avoid matching without start and end boundaries:

            ```ruby
            validates :attribute, format: { with: /foo/}
            ```

            ❌ Avoid using line-based boundaries:

            ```ruby
            validates :attribute, format: { with: /^foo$/}
            ```

            ✅ Use whole-text boundaries:

            ```ruby
            validates :attribute1, format: { with: "\Afoo\Z"}
            validates :attribute2, format: { with: "\Afoo\z"}
            ```
            <!--
            ## Resources
            - [Active Record format validation](https://guides.rubyonrails.org/active_record_validations.html#format)
            -->
        documentation_url: https://docs.bearer.com/reference/rules/ruby_rails_permissive_regex_validation
      line_number: 4
      filename: /tmp/scan/bad.rb
      parent_line_number: 4
      snippet: 'validates :attr, format: { with: /oops\z/ }'
      fingerprint: b3da9876f38e5b28bdd462a287153906_3
    - rule:
        cwe_ids:
            - "625"
        id: ruby_rails_permissive_regex_validation
        title: Validation using permissive regular expression detected.
        description: |
            ## Description

            Validations using regular expressions should use the start of text (\A) and
            end of text (\z or \Z) boundaries.

            ## Remediations

            ❌ Avoid matching without start and end boundaries:

            ```ruby
            validates :attribute, format: { with: /foo/}
            ```

            ❌ Avoid using line-based boundaries:

            ```ruby
            validates :attribute, format: { with: /^foo$/}
            ```

            ✅ Use whole-text boundaries:

            ```ruby
            validates :attribute1, format: { with: "\Afoo\Z"}
            validates :attribute2, format: { with: "\Afoo\z"}
            ```
            <!--
            ## Resources
            - [Active Record format validation](https://guides.rubyonrails.org/active_record_validations.html#format)
            -->
        documentation_url: https://docs.bearer.com/reference/rules/ruby_rails_permissive_regex_validation
      line_number: 6
      filename: /tmp/scan/bad.rb
      parent_line_number: 6
      snippet: 'validates_format_of :attr, with: ''^oops$'''
      fingerprint: b3da9876f38e5b28bdd462a287153906_4

