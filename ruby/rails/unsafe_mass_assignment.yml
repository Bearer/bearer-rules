patterns:
  - pattern: |
      $<_>.$<METHOD>($<UNSAFE_PARAMS>)
    filters:
      - variable: METHOD
        values:
          - new
          - attributes=
          - update_attributes
          - update_attributes!
          - create
          - create!
          - update
          - update!
          - build
          - first_or_create
          - first_or_create!
          - first_or_initialize!
          - assign_attributes
      - variable: UNSAFE_PARAMS
        detection: ruby_rails_unsafe_mass_assignment_permit_params
languages:
  - ruby
auxiliary:
  - id: ruby_rails_unsafe_mass_assignment_permit_params
    patterns:
      - pattern: $<PARAMS>.permit!($<...>$<VALUE>$<...>)
        filters:
          - variable: PARAMS
            regex: \Aparams(?:\(.*\))?
          - variable: VALUE
            regex: (\:|"|')(role|admin|banned|account_id)["|']?
metadata:
  description: "Risky key in mass assignment detected."
  remediation_message: |
    ## Description
    In Rails, mass assignment is when we use a hash to assign attributes all at once rather than individually. For example,

    ```
    user_attributes = { name: "Mish", email: "mish@bearer.com" }
    User.new(user_attributes)
    ```

    If we use an untrusted hash (for example, the `params` hash in a controller), mass assignment is open to attack because any attribute on the record that corresponds to a key in the hash will be automatically assigned the value in the hash.
    An attacker could exploit this vulnerability to change their role and permissions or to assign themselves as an admin.

    By default, Rails' strong parameters protect against mass assignment vulnerability; however, we must take care when safe-listing high-risk param keys.

    ## Remediations
    ❌ Where possible, avoid mass assignment with safe-listed high-risk param keys such as :admin or :role

    ```ruby
    user_params = params(:user).permit!(:name, :email, :admin, :role)
    User.create!(user_params)
    ```

    ## Resources
    - [OWASP Mass Assignment Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Mass_Assignment_Cheat_Sheet.html)
    - [Ruby on Rails security guide on mass assignment](https://guides.rubyonrails.org/v3.2.9/security.html#mass-assignment)
  cwe_id:
    - 915
  id: ruby_rails_unsafe_mass_assignment
  documentation_url: https://docs.bearer.com/reference/rules/ruby_rails_unsafe_mass_assignment
