low:
    - rule:
        cwe_ids:
            - "94"
        id: ruby_rails_unsafe_cookie_serialization_strategy
        title: Unsafe cookie serialization strategy detected.
        description: |
            ## Description
            JSON is the safest serialization strategy for untrusted data, such as cookie data, to avoid malicious code injection. By default, Rails uses JSON to serialize cookie values.

            ## Remediations
            ❌ Avoid overriding the default cookie serializer

            ```ruby
            Rails.application.config.action_dispatch.cookies_serializer = :marshal
            ```

            ❌ Use the hybrid (Marshal and JSON) serializer option as a temporary solution only, for example when migrating from Marshal to JSON.

            ```ruby
            Rails.application.config.action_dispatch.cookies_serializer = :hybrid
            ```

            ## Resources
            - [OWASP Rails Goat on Marshal and Remote Code Execution](https://github.com/OWASP/railsgoat/wiki/Extras:-Remote-Code-Execution)
        documentation_url: https://docs.bearer.com/reference/rules/ruby_rails_unsafe_cookie_serialization_strategy
      line_number: 1
      full_filename: /tmp/scan/unsafe.rb
      filename: .
      source:
        location:
            start: 1
            end: 1
            column:
                start: 1
                end: 71
        content: Rails.application.config.action_dispatch.cookies_serializer = :marshal
      sink:
        location:
            start: 1
            end: 1
            column:
                start: 1
                end: 71
      parent_line_number: 1
      snippet: Rails.application.config.action_dispatch.cookies_serializer = :marshal
      fingerprint: b92aa334ac9337d9b31e8f54da5f32b2_0
      old_fingerprint: ca90eaee21221a950733e09321b2f026_0

