warning:
    - rule:
        cwe_ids:
            - "20"
        id: java_lang_xss_servlet_parameter
        title: Servlet request parameter methods detected.
        description: |
            ## Description

            We should sanitize or validate any values from Servlet request GET and POST parameters. This is to protect our application from possible cross-site scripting (XSS) attacks.

            ✅ Make sure to sanitize input from Servlet and HttpServlet requests. You can use a library like OWASP AntiSamy or Enterprise Security API (ESAPI) to do this.

            ```java
            public void main(ServletRequest request, ServletResponse response) {
              AntiSamy antiSamy = new AntiSamy();
              Policy policy = Policy.getInstance(POLICY_FILE_LOCATION);

              String username = request.getParameter("username");
              CleanResults cr = antiSamy.scan(username, policy);

              // ...
            }
            ```

            ## Resources

            - [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
            - [OWASP AntiSamy](https://owasp.org/www-project-antisamy/)
            - [OWASP ESAPI](https://owasp.org/www-project-enterprise-security-api/)
        documentation_url: https://docs.bearer.com/reference/rules/java_lang_xss_servlet_parameter
      line_number: 13
      full_filename: /tmp/scan/bad.java
      filename: .
      source:
        location:
            start: 13
            end: 13
            column:
                start: 5
                end: 37
      sink:
        location:
            start: 13
            end: 13
            column:
                start: 5
                end: 37
        content: constructor.getParameter("name")
      parent_line_number: 13
      snippet: constructor.getParameter("name")
      fingerprint: 3607f59a3e728c29a2d55ebb50fea480_0
      old_fingerprint: 373a2f78f8b24212b57fca600a04e945_0
    - rule:
        cwe_ids:
            - "20"
        id: java_lang_xss_servlet_parameter
        title: Servlet request parameter methods detected.
        description: |
            ## Description

            We should sanitize or validate any values from Servlet request GET and POST parameters. This is to protect our application from possible cross-site scripting (XSS) attacks.

            ✅ Make sure to sanitize input from Servlet and HttpServlet requests. You can use a library like OWASP AntiSamy or Enterprise Security API (ESAPI) to do this.

            ```java
            public void main(ServletRequest request, ServletResponse response) {
              AntiSamy antiSamy = new AntiSamy();
              Policy policy = Policy.getInstance(POLICY_FILE_LOCATION);

              String username = request.getParameter("username");
              CleanResults cr = antiSamy.scan(username, policy);

              // ...
            }
            ```

            ## Resources

            - [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
            - [OWASP AntiSamy](https://owasp.org/www-project-antisamy/)
            - [OWASP ESAPI](https://owasp.org/www-project-enterprise-security-api/)
        documentation_url: https://docs.bearer.com/reference/rules/java_lang_xss_servlet_parameter
      line_number: 17
      full_filename: /tmp/scan/bad.java
      filename: .
      source:
        location:
            start: 17
            end: 17
            column:
                start: 5
                end: 31
      sink:
        location:
            start: 17
            end: 17
            column:
                start: 5
                end: 31
        content: param.getParameter("name")
      parent_line_number: 17
      snippet: param.getParameter("name")
      fingerprint: 3607f59a3e728c29a2d55ebb50fea480_1
      old_fingerprint: 373a2f78f8b24212b57fca600a04e945_1
    - rule:
        cwe_ids:
            - "20"
        id: java_lang_xss_servlet_parameter
        title: Servlet request parameter methods detected.
        description: |
            ## Description

            We should sanitize or validate any values from Servlet request GET and POST parameters. This is to protect our application from possible cross-site scripting (XSS) attacks.

            ✅ Make sure to sanitize input from Servlet and HttpServlet requests. You can use a library like OWASP AntiSamy or Enterprise Security API (ESAPI) to do this.

            ```java
            public void main(ServletRequest request, ServletResponse response) {
              AntiSamy antiSamy = new AntiSamy();
              Policy policy = Policy.getInstance(POLICY_FILE_LOCATION);

              String username = request.getParameter("username");
              CleanResults cr = antiSamy.scan(username, policy);

              // ...
            }
            ```

            ## Resources

            - [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
            - [OWASP AntiSamy](https://owasp.org/www-project-antisamy/)
            - [OWASP ESAPI](https://owasp.org/www-project-enterprise-security-api/)
        documentation_url: https://docs.bearer.com/reference/rules/java_lang_xss_servlet_parameter
      line_number: 18
      full_filename: /tmp/scan/bad.java
      filename: .
      source:
        location:
            start: 18
            end: 18
            column:
                start: 5
                end: 31
      sink:
        location:
            start: 18
            end: 18
            column:
                start: 5
                end: 31
        content: field.getParameter("name")
      parent_line_number: 18
      snippet: field.getParameter("name")
      fingerprint: 3607f59a3e728c29a2d55ebb50fea480_2
      old_fingerprint: 373a2f78f8b24212b57fca600a04e945_2
    - rule:
        cwe_ids:
            - "20"
        id: java_lang_xss_servlet_parameter
        title: Servlet request parameter methods detected.
        description: |
            ## Description

            We should sanitize or validate any values from Servlet request GET and POST parameters. This is to protect our application from possible cross-site scripting (XSS) attacks.

            ✅ Make sure to sanitize input from Servlet and HttpServlet requests. You can use a library like OWASP AntiSamy or Enterprise Security API (ESAPI) to do this.

            ```java
            public void main(ServletRequest request, ServletResponse response) {
              AntiSamy antiSamy = new AntiSamy();
              Policy policy = Policy.getInstance(POLICY_FILE_LOCATION);

              String username = request.getParameter("username");
              CleanResults cr = antiSamy.scan(username, policy);

              // ...
            }
            ```

            ## Resources

            - [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
            - [OWASP AntiSamy](https://owasp.org/www-project-antisamy/)
            - [OWASP ESAPI](https://owasp.org/www-project-enterprise-security-api/)
        documentation_url: https://docs.bearer.com/reference/rules/java_lang_xss_servlet_parameter
      line_number: 21
      full_filename: /tmp/scan/bad.java
      filename: .
      source:
        location:
            start: 21
            end: 21
            column:
                start: 5
                end: 31
      sink:
        location:
            start: 21
            end: 21
            column:
                start: 5
                end: 31
        content: local.getParameter("name")
      parent_line_number: 21
      snippet: local.getParameter("name")
      fingerprint: 3607f59a3e728c29a2d55ebb50fea480_3
      old_fingerprint: 373a2f78f8b24212b57fca600a04e945_3
    - rule:
        cwe_ids:
            - "20"
        id: java_lang_xss_servlet_parameter
        title: Servlet request parameter methods detected.
        description: |
            ## Description

            We should sanitize or validate any values from Servlet request GET and POST parameters. This is to protect our application from possible cross-site scripting (XSS) attacks.

            ✅ Make sure to sanitize input from Servlet and HttpServlet requests. You can use a library like OWASP AntiSamy or Enterprise Security API (ESAPI) to do this.

            ```java
            public void main(ServletRequest request, ServletResponse response) {
              AntiSamy antiSamy = new AntiSamy();
              Policy policy = Policy.getInstance(POLICY_FILE_LOCATION);

              String username = request.getParameter("username");
              CleanResults cr = antiSamy.scan(username, policy);

              // ...
            }
            ```

            ## Resources

            - [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
            - [OWASP AntiSamy](https://owasp.org/www-project-antisamy/)
            - [OWASP ESAPI](https://owasp.org/www-project-enterprise-security-api/)
        documentation_url: https://docs.bearer.com/reference/rules/java_lang_xss_servlet_parameter
      line_number: 24
      full_filename: /tmp/scan/bad.java
      filename: .
      source:
        location:
            start: 24
            end: 24
            column:
                start: 5
                end: 33
      sink:
        location:
            start: 24
            end: 24
            column:
                start: 5
                end: 33
        content: request.getParameter("name")
      parent_line_number: 24
      snippet: request.getParameter("name")
      fingerprint: 3607f59a3e728c29a2d55ebb50fea480_4
      old_fingerprint: 373a2f78f8b24212b57fca600a04e945_4
    - rule:
        cwe_ids:
            - "20"
        id: java_lang_xss_servlet_parameter
        title: Servlet request parameter methods detected.
        description: |
            ## Description

            We should sanitize or validate any values from Servlet request GET and POST parameters. This is to protect our application from possible cross-site scripting (XSS) attacks.

            ✅ Make sure to sanitize input from Servlet and HttpServlet requests. You can use a library like OWASP AntiSamy or Enterprise Security API (ESAPI) to do this.

            ```java
            public void main(ServletRequest request, ServletResponse response) {
              AntiSamy antiSamy = new AntiSamy();
              Policy policy = Policy.getInstance(POLICY_FILE_LOCATION);

              String username = request.getParameter("username");
              CleanResults cr = antiSamy.scan(username, policy);

              // ...
            }
            ```

            ## Resources

            - [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
            - [OWASP AntiSamy](https://owasp.org/www-project-antisamy/)
            - [OWASP ESAPI](https://owasp.org/www-project-enterprise-security-api/)
        documentation_url: https://docs.bearer.com/reference/rules/java_lang_xss_servlet_parameter
      line_number: 32
      full_filename: /tmp/scan/bad.java
      filename: .
      source:
        location:
            start: 32
            end: 32
            column:
                start: 7
                end: 29
      sink:
        location:
            start: 32
            end: 32
            column:
                start: 7
                end: 29
        content: e.getParameter("name")
      parent_line_number: 32
      snippet: e.getParameter("name")
      fingerprint: 3607f59a3e728c29a2d55ebb50fea480_5
      old_fingerprint: 373a2f78f8b24212b57fca600a04e945_5
    - rule:
        cwe_ids:
            - "20"
        id: java_lang_xss_servlet_parameter
        title: Servlet request parameter methods detected.
        description: |
            ## Description

            We should sanitize or validate any values from Servlet request GET and POST parameters. This is to protect our application from possible cross-site scripting (XSS) attacks.

            ✅ Make sure to sanitize input from Servlet and HttpServlet requests. You can use a library like OWASP AntiSamy or Enterprise Security API (ESAPI) to do this.

            ```java
            public void main(ServletRequest request, ServletResponse response) {
              AntiSamy antiSamy = new AntiSamy();
              Policy policy = Policy.getInstance(POLICY_FILE_LOCATION);

              String username = request.getParameter("username");
              CleanResults cr = antiSamy.scan(username, policy);

              // ...
            }
            ```

            ## Resources

            - [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
            - [OWASP AntiSamy](https://owasp.org/www-project-antisamy/)
            - [OWASP ESAPI](https://owasp.org/www-project-enterprise-security-api/)
        documentation_url: https://docs.bearer.com/reference/rules/java_lang_xss_servlet_parameter
      line_number: 36
      full_filename: /tmp/scan/bad.java
      filename: .
      source:
        location:
            start: 36
            end: 36
            column:
                start: 7
                end: 36
      sink:
        location:
            start: 36
            end: 36
            column:
                start: 7
                end: 36
        content: resource.getParameter("name")
      parent_line_number: 36
      snippet: resource.getParameter("name")
      fingerprint: 3607f59a3e728c29a2d55ebb50fea480_6
      old_fingerprint: 373a2f78f8b24212b57fca600a04e945_6

