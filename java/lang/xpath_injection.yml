imports:
  - java_shared_lang_user_input
  - java_shared_lang_instance
patterns:
  - pattern: |
      $<XPATH>.$<METHOD>($<USER_INPUT>$<...>)
    filters:
      - variable: XPATH
        detection: java_lang_xpath_injection_instance
        scope: cursor
      - variable: METHOD
        values:
          - compile
          - evaluate
      - variable: USER_INPUT
        detection: java_shared_lang_user_input
        scope: result
auxiliary:
  - id: java_lang_xpath_injection_instance
    patterns:
      - $<_>.newXPath();
      - pattern: $<XPATH_INSTANCE>;
        filters:
          - variable: XPATH_INSTANCE
            detection: java_shared_lang_instance
            scope: cursor
            filters:
              - variable: JAVA_SHARED_LANG_INSTANCE_TYPE
                regex: \A(javax\.xml\.xpath\.)?XPath\z
      # fallback
      - xp;
languages:
  - java
trigger:
  match_on: presence
metadata:
  description: "XPATH injection threat detected"
  remediation_message: |
    ## Description
      Unsanitized input going into XPath evaluate detected.
      This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized.
      Xpath injection could lead to unauthorized access to sensitive information in XML documents.
      Instead, thoroughly sanitize user input or use parameterized xpath queries if you can.

    ## Remediations

    âœ… Sanitize XPATH queries

    ```java
      public class Cls extends HttpServlet
      {

          public void handleRequest(HttpServletRequest request, HttpServletResponse response)
          {
              String userID = request.getParameter("userID");
              String sanitizedUserID = sanitize(userID);

              javax.xml.xpath.XPathFactory xpf = javax.xml.xpath.XPathFactory.newInstance();
              javax.xml.xpath.XPath xp = xpf.newXPath();

              String expression = "/Users/User[@userID='" + sanitizedUserID + "']";
              String result = xp.evaluate(expression, xmlDocument);
          }
      }
    ```

    ## References
    - [XPATH Injection](https://owasp.org/www-community/attacks/XPATH_Injection)
  cwe_id:
    - 643
  id: "java_lang_xpath_injection"
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_xpath_injection
