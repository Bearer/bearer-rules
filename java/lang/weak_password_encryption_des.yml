imports:
  - java_shared_lang_cipher_des_init
patterns:
  - pattern: |
      $<CIPHER_DES>.$<METHOD>($<PASSWORD>)
    filters:
      - variable: CIPHER_DES
        detection: java_shared_lang_cipher_des_init
      - variable: METHOD
        values:
          - update
          - updateAAD
          - doFinal
      - variable: PASSWORD
        detection: datatype
languages:
  - java
only_data_types:
  - Passwords
metadata:
  description: "Weak encryption algorithm (DES) used for password detected."
  remediation_message: |
    ## Description

    According to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption), DES (Data Encryption Standard) is considered a weak encryption algorithm and therefore shouldn't be used.

    Moreover, since encryption is reversible, it is possible to retrieve the plaintext value. This makes encryption a bad choice for passwords. Instead, passwords should be hashed.

    ## Remediations

    ❌ Do not use encryption for passwords, wherever possible.

    ✅ Use a recommended hashing library for passwords

    ```java
      MessageDigest md = MessageDigest.getInstance("SHA-256");
    ```

    ## Resources
    - [Java MessageDigest class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/MessageDigest.html)
  cwe_id:
    - 326
    - 327
    - 916
  id: java_lang_weak_password_encryption_des
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_weak_password_encryption_des
