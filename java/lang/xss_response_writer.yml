patterns:
  - pattern: |
      $<WRITER>.$<METHOD>($<...>$<ARGUMENT>$<...>)
    filters:
      - variable: WRITER
        detection: java_lang_xss_response_writer_get_writer
      - variable: ARGUMENT
        detection: java_lang_xss_response_writer_user_input
      - variable: METHOD
        values:
          - append
          - print
          - printf
          - println
          - write
auxiliary:
  - id: java_lang_xss_response_writer_user_input
    sanitizer: java_lang_xss_response_writer_sanitized_input
    patterns:
      - pattern: |
          $<REQUEST>.$<REQUEST_METHOD>()
        filters:
          - variable: REQUEST
            values:
              - req
              - request
          - variable: REQUEST_METHOD
            values:
              - getCookies
              - getHeader
              - getQueryString
              - getRequestURI
              - getRequestURL
              - getAttribute
              - getInputStream
              - getParameter
              - getParameterMap
              - getParameterNames
              - getParameterValues
              - getReader
              - getHeaderNames
              - getPart
              - getParts
  - id: java_lang_xss_response_writer_get_writer
    patterns:
      - pattern: |
          response.getWriter()
  - id: java_lang_xss_response_writer_sanitized_input
    patterns:
      - pattern: Encode.forHtml($<!>$<_>)
languages:
  - java
skip_data_types:
  - "Unique Identifier"
metadata:
  description: "Possible cross site scripting threat detected."
  remediation_message: |
    ## Description

    Make sure to encode and sanitize any user input before passing it down to `response.getWriter()` to avoid cross-site scripting (XSS) attacks.

    ✅ Use an encoder to minimize XSS risk

    ```java
      String userInput = req.getQueryString("user");
      String encodedUserInput = Encode.forHtml(userInput)
      response.getWriter().write(encodedUserInput)
    ```

    ✅ Even better, sanitize user input

    ```java
      String userInput = req.getQueryString("user");
      String sanitizedUserInput = sanitize(userInput);
      response.getWriter().write(sanitizedUserInput);
    ```

    ## Resources

    - [OWASP XSS Prevention Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
    - [OWASP Java Encoder](https://owasp.org/www-project-java-encoder/)
  cwe_id:
    - 79
  id: "java_lang_xss_response_writer"
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_xss_response_writer
