imports:
  - php_shared_lang_user_input
  - php_shared_lang_instance
patterns:
  - pattern: DOMDocument::$<METHOD>($<USER_INPUT>, $<FLAGS>)
    filters:
      - variable: METHOD
        values:
          - loadHTML
          - loadXML
      - variable: USER_INPUT
        detection: php_shared_lang_user_input
        scope: result
      - variable: FLAGS
        detection: php_lang_xml_external_entity_vulnerability_flag
        scope: result
  - pattern: XMLReader::XML($<USER_INPUT>, $<_>, $<FLAGS>)
    filters:
      - variable: USER_INPUT
        detection: php_shared_lang_user_input
        scope: result
      - variable: FLAGS
        detection: php_lang_xml_external_entity_vulnerability_flag
        scope: result
  - pattern: $<READER>->XML($<USER_INPUT>, $<_>, $<FLAGS>)
    filters:
      - variable: READER
        detection: php_shared_lang_instance
        scope: cursor
        filters:
          - variable: CLASS
            values:
              - XMLReader
      - variable: USER_INPUT
        detection: php_shared_lang_user_input
        scope: result
      - variable: FLAGS
        detection: php_lang_xml_external_entity_vulnerability_flag
        scope: result
  - pattern: new SimpleXMLElement($<USER_INPUT>, $<FLAGS>$<...>)
    filters:
      - variable: USER_INPUT
        detection: php_shared_lang_user_input
        scope: result
      - variable: FLAGS
        detection: php_lang_xml_external_entity_vulnerability_flag
        scope: result
  - pattern: simplexml_load_string($<USER_INPUT>, $<_>, $<FLAGS>$<...>)
    filters:
      - variable: USER_INPUT
        detection: php_shared_lang_user_input
        scope: result
      - variable: FLAGS
        detection: php_lang_xml_external_entity_vulnerability_flag
        scope: result
auxiliary:
  - id: php_lang_xml_external_entity_vulnerability_flag
    patterns:
      - LIBXML_NOENT;
languages:
  - php
severity: high
metadata:
  description: XML External Entity vulnerability detected.
  remediation_message: |
    ## Description
    Avoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.

    ## Remediations
    ‚ùå Do not enable parsing of external entities.

    For LibXML, for example, do not set `noent` to `true`.
    ```php
      var libxml = require("libxmljs");
      libxml.parseXmlString(xml, { noent: true, noblanks: true });
    ```

    ## Resources
    - [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)
  cwe_id:
    - 611
  id: php_lang_xml_external_entity_vulnerability
  documentation_url: https://docs.bearer.com/reference/rules/php_lang_xml_external_entity_vulnerability
