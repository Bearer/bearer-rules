patterns:
  - pattern: |
      crc32($<_>)
  - pattern: |
      $<FUNCTION>($<ALGORITHM>$<...>)
    filters:
      - variable: FUNCTION
        values:
          - hash
          - hash_hmac
      - variable: ALGORITHM
        string_regex: crc32[bc]?
  - pattern: $<FUNCTION>($<CONTEXT>$<...>)
    filters:
      - variable: FUNCTION
        values:
          - hash_update
          - hash_update_file
          - hash_update_stream
      - variable: CONTEXT
        detection: php_lang_weak_hash_crc32_context
        scope: cursor
auxiliary:
  - id: php_lang_weak_hash_crc32_context
    patterns:
      - pattern: hash_init($<ALGORITHM>$<...>)
        filters:
          - variable: ALGORITHM
            string_regex: crc32[bc]?
languages:
  - php
metadata:
  description: "Usage of weak hashing library (CRC32)"
  remediation_message: |-
    ## Description

    The use of CRC32 for hashing is insecure. CRC32 is designed for error-checking and not for security purposes, making it vulnerable to intentional data tampering.

    ## Remediations

    - **Do not** use CRC32 for hashing when security is a concern. It is not secure against intentional data modifications.
    ```php
    $myhash = crc32($input); // unsafe
    ```
    - **Do** opt for stronger hashing algorithms like SHA-256 to ensure data integrity and security.
    ```php
    $myhash = hash('sha256', $input);
    ```

  cwe_id:
    - 328
  id: php_lang_weak_hash_crc32
  documentation_url: https://docs.bearer.com/reference/rules/php_lang_weak_hash_crc32
severity: medium
