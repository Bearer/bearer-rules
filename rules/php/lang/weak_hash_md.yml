imports:
  - php_shared_lang_datatype
patterns:
  - pattern: |
      md5($<DATA_TYPE>$<...>)
    filters:
      - either:
          - variable: DATA_TYPE
            detection: php_shared_lang_datatype
            scope: result
          - not:
              variable: DATA_TYPE
              detection: php_shared_lang_datatype
              scope: result
  - pattern: |
      $<FUNCTION>($<ALGORITHM>, $<DATA_TYPE>$<...>)
    filters:
      - variable: FUNCTION
        values:
          - hash
          - hash_hmac
      - variable: ALGORITHM
        string_regex: md\d
      - either:
          - variable: DATA_TYPE
            detection: php_shared_lang_datatype
            scope: result
          - not:
              variable: DATA_TYPE
              detection: php_shared_lang_datatype
              scope: result
  - pattern: md5_file();
  - pattern: hash_update($<CONTEXT>, $<DATA_TYPE>)
    filters:
      - variable: CONTEXT
        detection: php_lang_weak_hash_md_context
        scope: cursor
      - either:
          - variable: DATA_TYPE
            detection: php_shared_lang_datatype
            scope: result
          - not:
              variable: DATA_TYPE
              detection: php_shared_lang_datatype
              scope: result
  - pattern: $<FUNCTION>($<CONTEXT>$<...>)
    filters:
      - variable: FUNCTION
        values:
          - hash_update_file
          - hash_update_stream
      - variable: CONTEXT
        detection: php_lang_weak_hash_md_context
        scope: cursor
auxiliary:
  - id: php_lang_weak_hash_md_context
    patterns:
      - pattern: hash_init($<ALGORITHM>$<...>)
        filters:
          - variable: ALGORITHM
            string_regex: md\d
languages:
  - php
skip_data_types:
  - "Unique Identifier"
  - Passwords # see php_lang_weak_password_hash_md5
metadata:
  description: "Usage of weak hashing library (MDx)"
  remediation_message: |
    ## Description

    A weak hashing library can lead to data breaches and greater security risk.

    ## Remediations

    According to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption), MD5 is considered a weak hashing algorithms and therefore shouldn't be used.

    ❌ Avoid libraries and algorithms with known weaknesses:

    ```php
      $encrypted = md5($input)
    ```

    ✅ Use stronger encryption algorithms when storing data.

    ```php
      $encrypted = hash('sha256', $input)
    ```
  cwe_id:
    - 328
  id: php_lang_weak_hash_md
  documentation_url: https://docs.bearer.com/reference/rules/php_lang_weak_hash_md
  cloud_code_suggestions: true
severity: high
