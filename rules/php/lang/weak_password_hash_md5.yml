imports:
  - php_shared_lang_datatype
patterns:
  - pattern: |
      md5($<PASSWORD>$<...>)
    filters:
      - variable: PASSWORD
        detection: php_shared_lang_datatype
        scope: result
  - pattern: |
      $<FUNCTION>($<ALGORITHM>, $<PASSWORD>$<...>)
    filters:
      - variable: FUNCTION
        values:
          - hash
          - hash_hmac
      - variable: ALGORITHM
        string_regex: md5
      - variable: PASSWORD
        detection: php_shared_lang_datatype
        scope: result
languages:
  - php
only_data_types:
  - Passwords
metadata:
  description: "Weak hashing library (MD5) detected"
  remediation_message: |
    ## Description

    A weak hashing library can lead to data breaches and greater security risk.

    ## Remediations

    According to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption), MD5 is considered a weak hashing algorithms and therefore shouldn't be used.

    ❌ Avoid libraries and algorithms with known weaknesses:

    ```php
      $encrypted_password = md5($user->password);
    ```

    ✅ Use stronger encryption algorithms when storing data.

    ```php
      $encrypted_password = password_hash($user->password);
    ```
  cwe_id:
    - 327
    - 916
  id: php_lang_weak_password_hash_md5
  documentation_url: https://docs.bearer.com/reference/rules/php_lang_weak_password_hash_md5
