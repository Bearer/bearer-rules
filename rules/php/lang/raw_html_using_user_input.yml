languages:
  - php
imports:
  - php_shared_lang_html_user_input
patterns:
  - pattern: $<STRING>;
    filters:
      - variable: STRING
        string_regex: <\w+(\s[^>]*)?>
      - variable: STRING
        detection: php_shared_lang_html_user_input
        scope: result
severity: high
metadata:
  description: "Unsanitized user input in raw HTML strings (XSS)"
  remediation_message: |-
    ## Description

    Including unsanitized user input in HTML exposes your application to cross-site scripting (XSS) attacks. This vulnerability allows attackers to inject malicious scripts into web pages viewed by other users.

    ## Remediations

    - **Do not** include user input directly in HTML strings. This practice can lead to XSS vulnerabilities.
      ```php
      $html = "<h1>{$_GET["title"]}</h1>"; // unsafe
      ```
    - **Do** use a templating language like Twig, and keep the template in a separate file. Templating languages automatically handle input sanitization, reducing the risk of XSS.
    - **Do** sanitize user input when HTML strings must be used, to prevent malicious code injection.
      ```php
      $html = "<h1>${htmlspecialchars($_GET["title"])}</h1>";
      ```

    ## References

    - [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
  cwe_id:
    - 79
  id: php_lang_raw_html_using_user_input
  documentation_url: https://docs.bearer.com/reference/rules/php_lang_raw_html_using_user_input
