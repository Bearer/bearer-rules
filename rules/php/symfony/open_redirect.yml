imports:
  - php_shared_lang_user_input
patterns:
  - pattern: $this->$<METHOD>($<USER_INPUT>$<...>)
    filters:
      - variable: METHOD
        values:
          - redirect
          - redirectToRoute
      - variable: USER_INPUT
        detection: php_shared_lang_user_input
        scope: result
languages:
  - php
severity: medium
metadata:
  description: "Unsanitized user input in redirect"
  remediation_message: |-
    ## Description

    Using unsanitized user input to perform redirects can make your application vulnerable to phishing attacks. This occurs when user input is directly used to determine the destination of a redirect without proper validation or sanitization, allowing attackers to redirect users to malicious sites, potentially compromising their security.

    ## Remediations

    - **Do not** use unsanitized user input when constructing URLs for redirects. Directly incorporating user input without validation can lead to phishing attacks and malicious site redirection.
    - **Do** validate user input by employing a safe list or a mapping strategy for constructing URLs. This ensures that the redirection is to a known, safe location.
    ```php
    $paths = [
      "1" => "/planes",
      "2" => "/trains",
      "3" => "/automobiles",
    ];

    $transport = $_GET["transport"];
    $this->redirect($paths[$transport]);
    ```

    ## References

    - [OWASP Unvalidated Redirects and Forwards Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)
  cwe_id:
    - 601
  id: "php_symfony_open_redirect"
  documentation_url: https://docs.bearer.com/reference/rules/php_symfony_open_redirect
