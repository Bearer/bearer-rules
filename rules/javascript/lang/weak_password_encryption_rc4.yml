imports:
  - javascript_shared_third_parties_cryptojs_init
  - javascript_shared_common_datatype
patterns:
  - pattern: |
      $<CRYPTOJS_INIT>.RC4.encrypt($<PASSWORD>, $<_>)
    filters:
      - variable: CRYPTOJS_INIT
        detection: javascript_shared_third_parties_cryptojs_init
        scope: cursor
      - variable: PASSWORD
        detection: javascript_shared_common_datatype
        scope: result
languages:
  - javascript
only_data_types:
  - "Passwords"
metadata:
  description: "Usage of weak encryption algorithm on a password (RC4)"
  remediation_message: |-
    ## Description

    Using RC4 for encrypting passwords is insecure. RC4 is a weak encryption algorithm that can be easily compromised, leading to potential security risks. Furthermore, using any form of encryption for passwords is not advisable because encryption is designed to be reversible. This means that given enough resources, an attacker could decrypt the passwords and access them in plain text. For securing passwords, hashing is the recommended approach because it is a one-way process that does not allow for the original password to be retrieved.

    ## Remediations

    - **Do not** use RC4 or any encryption algorithm for password storage. Encryption algorithms are not secure enough for password protection and can be reversed to expose plain text passwords.
    - **Do** use a secure hashing algorithm specifically designed for password storage, such as Argon2id. Hashing is a one-way process, making it significantly more secure for storing passwords.
    ```javascript
    const argon2 = require("argon2");
    const hash = await argon2.hash(req.params.password, { type: argon2.argon2id })
    ```

    ## References

    - [OWASP Password Storage Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html)
  cwe_id:
    - 326
  id: javascript_lang_weak_password_encryption_rc4
  documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_weak_password_encryption_rc4
  cloud_code_suggestions: true
severity: high
