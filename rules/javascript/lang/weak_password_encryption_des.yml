imports:
  - javascript_shared_third_parties_cryptojs_init
  - javascript_shared_common_datatype
patterns:
  - pattern: |
      $<CRYPTOJS_INIT>.DES.encrypt($<PASSWORD>, $<_>)
    filters:
      - variable: CRYPTOJS_INIT
        detection: javascript_shared_third_parties_cryptojs_init
        scope: cursor
      - variable: PASSWORD
        detection: javascript_shared_common_datatype
        scope: result
languages:
  - javascript
only_data_types:
  - "Passwords"
metadata:
  description: "Usage of weak encryption algorithm on a password (DES)"
  remediation_message: |-
    ## Description

    The Data Encryption Standard (DES) is recognized as a weak encryption algorithm and should not be used for securing passwords. Encryption, being reversible, is not suitable for password storage because it allows the original password to be retrieved. Passwords should instead be hashed, an irreversible process that transforms them into a fixed-size string of characters.

    ## Remediations

    - **Do not** use DES or any encryption method for password storage. Encryption's reversible nature poses a security risk by potentially allowing the retrieval of the original password.
    - **Do** use a strong hashing algorithm like Argon2id for password storage. Hashing is one-way, making it impossible to reverse and retrieve the original password.
    ```javascript
    const argon2 = require("argon2");

    const hash = await argon2.hash(req.params.password, { type: argon2.argon2id })
    ```

    ## References

    - [OWASP Password Storage Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html)
  cwe_id:
    - 326
  id: javascript_lang_weak_password_encryption_des
  documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_weak_password_encryption_des
  cloud_code_suggestions: true
severity: high
