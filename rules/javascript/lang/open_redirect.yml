patterns:
  - pattern: |
      location.href = $<USER_INPUT>
    filters:
      - variable: USER_INPUT
        detection: javascript_lang_open_redirect_url
        scope: result
  - pattern: |
      window.location.href = $<USER_INPUT>
    filters:
      - variable: USER_INPUT
        detection: javascript_lang_open_redirect_url
        scope: result
languages:
  - javascript
auxiliary:
  - id: javascript_lang_open_redirect_url
    patterns:
      - pattern: new $<METHOD>($<URL_USER_INPUT>)
        filters:
          - variable: METHOD
            values:
              - URL
              - URLSearchParams
          - variable: URL_USER_INPUT
            detection: javascript_lang_open_redirect_user_input
            scope: result
  - id: javascript_lang_open_redirect_user_input
    patterns:
      - window.location
      - location
severity: medium
metadata:
  description: Unsanitized user input in redirect
  remediation_message: |-
    ## Description

    Using unsanitized user input in redirects increases the risk of phishing attacks. This vulnerability occurs when an application dynamically redirects users to a URL that includes user-controlled input without proper validation or sanitization.

    ## Remediations

    - **Do not** directly use user input in redirect URLs. This can lead to phishing attacks where attackers can redirect users to malicious sites.
    - **Do** validate and sanitize all user input used in redirects. Ensure that the destination URLs are safe and intended. Use a whitelist of allowed URLs if possible.
    - **Do** use server-side redirection methods that do not allow user input to directly influence the destination. This ensures that the application controls the redirect targets.

    ## References

    - [OWASP Unvalidated Redirects and Forwards Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)
  cwe_id:
    - 601
  id: "javascript_lang_open_redirect"
  documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_open_redirect
