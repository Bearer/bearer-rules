imports:
  - javascript_shared_import_library
patterns:
  - Math.random()
  - pattern: $<MODULE>.pseudoRandomBytes()
    filters:
      - variable: MODULE
        detection: javascript_lang_insufficiently_random_values_init
        scope: cursor
auxiliary:
  - id: javascript_lang_insufficiently_random_values_init
    patterns:
      - pattern: $<LIBRARY>
        filters:
          - variable: LIBRARY
            detection: javascript_shared_import_library
            scope: cursor
            filters:
              - variable: JAVASCRIPT_SHARED_IMPORT_LIBRARY_NAME
                string_regex: \Acrypto\z
severity: low
languages:
  - javascript
metadata:
  description: Usage of insufficient random value
  remediation_message: |-
    ## Description

    Using predictable random values compromises your application's security, particularly if these values serve security-related functions.

    ## Remediations

    - **Do** use a robust library for generating random values to enhance security.
    ```javascript
    const crypto = require('crypto');
    crypto.randomBytes(16).toString('hex');
    ```
  cwe_id:
    - 330
  id: javascript_lang_insufficiently_random_values
  documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_insufficiently_random_values
