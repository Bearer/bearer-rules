imports:
  - javascript_shared_common_datatype
patterns:
  - pattern: |
      $<LOG>.$<METHOD>($<...>$<DATA_TYPE>$<...>)
    filters:
      - variable: METHOD
        values:
          - warn
          - info
          - error
          - fatal
          - log
      - variable: LOG
        values:
          - log
          - logger
      - variable: DATA_TYPE
        detection: javascript_shared_common_datatype
        scope: result
  - pattern: |
      console.$<METHOD>($<...>$<DATA_TYPE>$<...>)
    filters:
      - variable: METHOD
        values:
          - warn
          - info
          - error
          - log
          - table
      - variable: DATA_TYPE
        detection: javascript_shared_common_datatype
        scope: result
  - pattern: |
      $<LOG>.child($<...>$<DATA_TYPE>$<...>)
    filters:
      - variable: LOG
        values:
          - log
          - logger
      - variable: DATA_TYPE
        detection: javascript_shared_common_datatype
        scope: result
  - pattern: |
      $<VAR>.$<METHOD>($<...>$<DATA_TYPE>$<...>)
    filters:
      - variable: VAR
        detection: child_logger
        scope: cursor
      - variable: METHOD
        values:
          - warn
          - info
          - error
          - fatal
          - log
      - variable: DATA_TYPE
        detection: javascript_shared_common_datatype
        scope: result
auxiliary:
  - id: child_logger
    patterns:
      - pattern: |
          $<LOG>.child()
        filters:
          - variable: LOG
            values:
              - log
              - logger
languages:
  - javascript
skip_data_types:
  - "Unique Identifier"
metadata:
  description: "Leakage of sensitive information in logger message"
  remediation_message: |
    ## Description

    Leaking sensitive data to loggers is a common cause of data leaks and can lead to data breaches. This rule looks for instances of sensitive data sent to loggers.

    ## Remediations

    ❌ Avoid using sensitive data in logger messages:

    ```javascript
    logger.info(`User is: ${user.email}`)
    ```

    ✅ If you need to identify a user, use their unique identifier instead of their personal identifiable information:

    ```javascript
    logger.info(`User is: ${user.uuid}`)
    ```
    ## Resources
    - [OWASP logging cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html)
  cwe_id:
    - 532
  id: "javascript_lang_logger"
  documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_logger
  cloud_code_suggestions: true
