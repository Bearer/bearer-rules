imports:
  - javascript_shared_common_datatype
patterns:
  - pattern: |
      localStorage.setItem($<...>$<DATA_TYPE>$<...>)
    filters:
      - variable: DATA_TYPE
        detection: javascript_shared_common_datatype
        scope: result
languages:
  - javascript
skip_data_types:
  - "Unique Identifier"
metadata:
  description: "Leakage of sensitive data in local storage"
  remediation_message: |-
    ## Description

    Storing sensitive data in `localStorage` poses a security risk. This vulnerability occurs when sensitive information is saved in the browser's local storage, making it susceptible to unauthorized access.

    ## Remediations

    - **Do not** store sensitive data in `localStorage`. This method exposes sensitive information to potential security threats.
      ```javascript
      localStorage.setItem('user', email); // unsafe
      ```
    - **Do** use server-based session storage solutions to keep session data secure. This approach minimizes the risk of sensitive data exposure.
    - **Do** store only non-sensitive data in `localStorage`, such as a unique identifier, to reduce security risks.
      ```javascript
      localStorage.setItem('user', user.uuid);
      ```

    ## References

    - [OWASP sensitive data exposure](https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure)
  cwe_id:
    - 312
  id: javascript_lang_session
  documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_session
severity: high
