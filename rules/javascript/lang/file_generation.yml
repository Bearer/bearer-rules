imports:
  - javascript_shared_common_datatype
patterns:
  - pattern: |
      fs.writeFile($<_>, $<DATA_TYPE>, $<...>)
    filters:
      - variable: DATA_TYPE
        detection: javascript_shared_common_datatype
        scope: result
  - pattern: |
      fs.writeFile($<_>, $<DATA_TYPE>, $<_>, ($<_>) => {})
    filters:
      - variable: DATA_TYPE
        detection: javascript_shared_common_datatype
        scope: result
languages:
  - javascript
metadata:
  description: "Leakage of sensitive data in dynamic file generation"
  remediation_message: |-
    ## Description

    Sensitive data leakage in dynamic file generation occurs when sensitive information is written to static files such as logs, backups, or data exports. This vulnerability exposes sensitive data to unauthorized access.

    ## Remediations

    - **Do not** write sensitive data directly to logs, backups, or data exports. This practice can lead to unauthorized access to sensitive information.
    ```javascript
    fs.writeFile("data.csv", JSON.stringify(users), "utf-8", (err) => {
      if (err) console.log(err)
    })
    ```
    - **Do** obfuscate or filter sensitive data before writing it to static files. This reduces the risk of sensitive data exposure.
  cwe_id:
    - 313
  id: javascript_lang_file_generation
  documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_file_generation
severity: high
