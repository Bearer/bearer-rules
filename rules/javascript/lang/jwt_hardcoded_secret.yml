patterns:
  - pattern: |
      $<JWT>.sign($<_>, $<STRING_LITERAL>$<...>)
    filters:
      - variable: JWT
        detection: javascript_lang_jwt_hardcoded_secret_jwt_init
        scope: cursor
      - variable: STRING_LITERAL
        detection: string_literal
        scope: cursor
  - pattern: |
      $<JOSE>.sign($<STRING_LITERAL>)
    filters:
      - variable: JOSE
        detection: javascript_lang_jwt_hardcoded_secret_jose
      - variable: STRING_LITERAL
        detection: string_literal
        scope: cursor
auxiliary:
  - id: javascript_lang_jwt_hardcoded_secret_jose
    patterns:
      - new jose.SignJWT()
  - id: javascript_lang_jwt_hardcoded_secret_jwt_init
    patterns:
      - pattern: |
          require("jsonwebtoken")
      - pattern: |
          jwt
languages:
  - javascript
severity: critical
metadata:
  description: "Leakage of hard-coded secret in JWT"
  remediation_message: |
    ## Description

    Code is not a secure place to store secrets, use environment variables instead.

    ## Remediations

    Use environment variables

    ```javascript
      var jwt = require("jsonwebtoken");

      var token = jwt.sign({ foo: "bar" }, process.env.JWT_SECRET);
    ```

    ## Resources
    - [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)

  cwe_id:
    - 798
  id: javascript_lang_jwt_hardcoded_secret
  documentation_url: https://docs.bearer.com/reference/rules/javascript_lang_jwt_hardcoded_secret
