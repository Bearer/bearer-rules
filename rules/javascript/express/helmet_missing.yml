patterns:
  - pattern: |
      $<EXPRESS>.use($<MIDDLEWARE>)
    filters:
      - either:
          - variable: EXPRESS
            detection: javascript_express_helmet_missing_express_init
            scope: cursor
          - variable: EXPRESS
            values:
              - app
      - variable: MIDDLEWARE
        detection: javascript_express_helmet_missing_middleware
        scope: cursor
auxiliary:
  - id: javascript_express_helmet_missing_express_init
    patterns:
      - pattern: $<EXPRESS>()
        filters:
          - variable: EXPRESS
            detection: javascript_express_helmet_missing_express
            scope: cursor
      - |
        const $<_>: Express = $<!>$<_>
      - |
        ($<...>$<!>$<_>: Express$<...>) => {}
      - |
        function ($<...>$<!>$<_>: Express$<...>) {}
      - |
        function $<_>($<...>$<!>$<_>: Express$<...>) {}
      - |
        class $<_> $<...>{ $<_>($<...>$<!>$<_>: Express$<...>) {} }
  - id: javascript_express_helmet_missing_express
    patterns:
      - pattern: $<METHOD>($<NAME>)
        filters:
          - variable: METHOD
            values:
              - require
              - import
          - variable: NAME
            string_regex: \Aexpress\z
      - import $<!>$<_> from "express"
      # Fallback
      - express
  - id: javascript_express_helmet_missing_middleware
    patterns:
      - pattern: $<HELMET>()
        filters:
          - variable: HELMET
            detection: javascript_express_helmet_missing_helmet
            scope: cursor
      - pattern: $<HELMET_PART>()
        filters:
          - variable: HELMET_PART
            detection: javascript_express_helmet_missing_helmet_part
            scope: cursor
  - id: javascript_express_helmet_missing_helmet
    patterns:
      - pattern: $<METHOD>($<NAME>)
        filters:
          - variable: METHOD
            values:
              - require
              - import
          - variable: NAME
            string_regex: \Ahelmet\z
      - import $<!>$<_>$<...> from "helmet"
      # Fallback
      - helmet
  - id: javascript_express_helmet_missing_helmet_part
    patterns:
      - pattern: $<HELMET>.$<_>
        filters:
          - variable: HELMET
            detection: javascript_express_helmet_missing_helmet
            scope: cursor
      - pattern: const { $<!>$<_> } = $<HELMET>
        filters:
          - variable: HELMET
            detection: javascript_express_helmet_missing_helmet
            scope: cursor
      - import $<...>{ $<!>$<_> } from "helmet"
      - import $<...>{ $<_> as $<!>$<_> } from "helmet"
languages:
  - javascript
trigger:
  match_on: absence
  required_detection: javascript_express_helmet_missing_express_init
metadata:
  description: "Missing Helmet configuration on HTTP headers"
  remediation_message: |
    ## Description

    Helmet can help protect your app from some well-known web vulnerabilities by setting HTTP headers appropriately.

    ## Remediations

    âœ… Use Helmet middleware

    ```javascript
    const helmet = require("helmet")
    app.use(helmet())
    ```

    ## Resources

    - [Express Security Best Practices: Use Helmet](https://expressjs.com/en/advanced/best-practice-security.html#use-helmet)
  cwe_id:
    - 693
  id: javascript_express_helmet_missing
  documentation_url: https://docs.bearer.com/reference/rules/javascript_express_helmet_missing
severity: medium
