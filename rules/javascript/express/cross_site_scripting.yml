imports:
  - javascript_shared_common_user_input
patterns:
  - pattern: |
      res.write($<USER_INPUT>)
    filters:
      - variable: USER_INPUT
        detection: javascript_express_cross_site_scripting_user_input
  - pattern: |
      res.send($<USER_INPUT>)
    filters:
      - variable: USER_INPUT
        detection: javascript_express_cross_site_scripting_user_input
languages:
  - javascript
auxiliary:
  - id: javascript_express_cross_site_scripting_sanitizer
    patterns:
      - pattern: |
          { $<_>: $<!>$<_> }
  - id: javascript_express_cross_site_scripting_user_input
    sanitizer: javascript_express_cross_site_scripting_sanitizer
    patterns:
      - pattern: $<UNSANITIZED_USER_INPUT>
        filters:
          - variable: UNSANITIZED_USER_INPUT
            detection: javascript_shared_common_user_input
            contains: false
severity: high
metadata:
  description: "Cross-site scripting (XSS) vulnerability detected."
  remediation_message: |
    ## Description
    Sending unsanitized user input in a response puts your application at risk of cross-site scripting attacks.


    ## Remediations
    ‚ùå Avoid including user input directly in a response:

    ```javascript
    res.send(req.body.data)
    ```

    ## Resources
    - [OWASP Cross-Site Scripting (XSS) Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
  cwe_id:
    - 79
  id: javascript_express_cross_site_scripting
  documentation_url: https://docs.bearer.com/reference/rules/javascript_express_cross_site_scripting
