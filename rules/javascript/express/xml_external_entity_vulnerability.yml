imports:
  - javascript_shared_common_user_input
patterns:
  - pattern: | # xml2js
      parseString($<USER_INPUT>$<...>)
    filters:
      - variable: USER_INPUT
        detection: javascript_shared_common_user_input
        scope: result
  - pattern: |
      $<XML2JS_PARSER>.$<METHOD>($<USER_INPUT>$<...>)
    filters:
      - variable: XML2JS_PARSER
        detection: javascript_express_xxe_vulnerability_xml2js_parser
        scope: cursor
      - variable: USER_INPUT
        detection: javascript_shared_common_user_input
        scope: result
      - variable: METHOD
        values:
          - parseString
          - parseStringPromise
  - pattern: |
      $<EXPAT_PARSER>.$<METHOD>($<USER_INPUT>$<...>)
    filters:
      - variable: EXPAT_PARSER
        detection: javascript_express_xxe_vulnerability_node_expat_parser
        scope: cursor
      - variable: USER_INPUT
        detection: javascript_shared_common_user_input
        scope: result
      - variable: METHOD
        values:
          - parse
          - write
  - pattern: $<LIB_XML>.$<METHOD>($<_>, $<INSECURE_OPTIONS>)
    filters:
      - variable: LIB_XML
        values:
          - libxml
          - libxmljs
          - libxml2
          - libxml2js
      - variable: METHOD
        values:
          - parseXml
          - parseXmlString
      - variable: INSECURE_OPTIONS
        detection: javascript_express_xxe_vulnerability_insecure_libxml_options
        scope: result
  - pattern: | # xml2json
      parser.toXml($<USER_INPUT>$<...>)
    filters:
      - variable: USER_INPUT
        detection: javascript_shared_common_user_input
        scope: result
auxiliary:
  - id: javascript_express_xxe_vulnerability_insecure_libxml_options
    patterns:
      - |
        {
          $<!>noent: true
        }
  - id: javascript_express_xxe_vulnerability_node_expat_parser
    patterns:
      - new expat.Parser()
  - id: javascript_express_xxe_vulnerability_xml2js_parser
    patterns:
      - new xml2js.Parser()
      - xml2js
languages:
  - javascript
severity: critical
metadata:
  description: Unsanitized user input in XML parsing method
  remediation_message: |-
    ## Description

    Unsanitized user input in XML parsing can lead to XML External Entity (XXE) injection. This vulnerability occurs when XML input containing a reference to an external entity is processed by an XML parser. The external entity can point to a file URI or network resource, potentially allowing an attacker to access sensitive data or interact with internal systems.

    ## Remediations

    - **Do not** parse XML input containing untrusted data without proper sanitization. External entities within the XML should be treated with caution.
      ```javascript
      var libxml = require("libxmljs");
      libxml.parseXmlString(xml, { noent: false, noblanks: true });
      ```
    - **Do not** enable the parsing of external entities in XML parsers. For instance, when using LibXML, ensure the `noent` option is set to `false` to prevent XXE attacks.

    ## References

    - [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)
  cwe_id:
    - 611
  id: javascript_express_xml_external_entity_vulnerability
  documentation_url: https://docs.bearer.com/reference/rules/javascript_express_xml_external_entity_vulnerability
