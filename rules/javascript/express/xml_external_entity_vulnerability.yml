imports:
  - javascript_shared_common_user_input
patterns:
  - pattern: | # xml2js
      parseString($<USER_INPUT>$<...>)
    filters:
      - variable: USER_INPUT
        detection: javascript_shared_common_user_input
        scope: result
  - pattern: |
      $<XML2JS_PARSER>.$<METHOD>($<USER_INPUT>$<...>)
    filters:
      - variable: XML2JS_PARSER
        detection: javascript_express_xxe_vulnerability_xml2js_parser
        scope: cursor
      - variable: USER_INPUT
        detection: javascript_shared_common_user_input
        scope: result
      - variable: METHOD
        values:
          - parseString
          - parseStringPromise
  - pattern: |
      $<EXPAT_PARSER>.$<METHOD>($<USER_INPUT>$<...>)
    filters:
      - variable: EXPAT_PARSER
        detection: javascript_express_xxe_vulnerability_node_expat_parser
        scope: cursor
      - variable: USER_INPUT
        detection: javascript_shared_common_user_input
        scope: result
      - variable: METHOD
        values:
          - parse
          - write
  - pattern: |
      $<LIB_XML>.$<METHOD>(
        $<_>,
        {
          $<!>noent: true
        }
      )
    filters:
      - variable: LIB_XML
        values:
          - libxml
          - libxmljs
          - libxml2
          - libxml2js
      - variable: METHOD
        values:
          - parseXml
          - parseXmlString
  - pattern: | # xml2json
      parser.toXml($<USER_INPUT>$<...>)
    filters:
      - variable: USER_INPUT
        detection: javascript_shared_common_user_input
        scope: result
auxiliary:
  - id: javascript_express_xxe_vulnerability_node_expat_parser
    patterns:
      - new expat.Parser()
  - id: javascript_express_xxe_vulnerability_xml2js_parser
    patterns:
      - new xml2js.Parser()
languages:
  - javascript
severity: high
metadata:
  description: XML External Entity vulnerability detected.
  remediation_message: |
    ## Description
    Avoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.

    ## Remediations
    ‚ùå Do not enable parsing of external entities.

    For LibXML, for example, do not set `noent` to `true`.
    ```javascript
      var libxml = require("libxmljs");
      libxml.parseXmlString(xml, { noent: true, noblanks: true });
    ```

    ## Resources
    - [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)
  cwe_id:
    - 611
  id: javascript_express_xml_external_entity_vulnerability
  documentation_url: https://docs.bearer.com/reference/rules/javascript_express_xml_external_entity_vulnerability
