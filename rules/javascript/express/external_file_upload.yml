imports:
  - javascript_shared_common_user_input
patterns:
  - pattern: res.sendFile($<USER_INPUT>)
    filters:
      - variable: USER_INPUT
        detection: javascript_shared_common_user_input
        scope: result
  - pattern: res.sendFile($<_>, $<OPTIONS>$<...>)
    filters:
      - not:
          variable: OPTIONS
          detection: javascript_express_external_file_upload_root_option_not_user_input
          scope: cursor
  - pattern: res.sendFile($<_>, $<USER_INPUT>$<...>)
    filters:
      - variable: USER_INPUT
        detection: javascript_shared_common_user_input
        scope: result
languages:
  - javascript
auxiliary:
  - id: javascript_express_external_file_upload_root_option_not_user_input
    patterns:
      - pattern: |
          { root: $<ROOT_VALUE> }
        filters:
          - not:
              variable: ROOT_VALUE
              detection: javascript_shared_common_user_input
              scope: result
metadata:
  description: Unsanitized user input in HTTP send file request
  remediation_message: |
    ## Description
    Passing unsanitized user input to the sendFile API is bad practice and can lead to path manipulation, by which attackers can gain access to resources and data outside of the intended scope.

    ## Remediations
    âœ… Set the root option to be an absolute path to a directory

    ```javascript
    app.post("/upload", (req, res) => {
      var options = {
        root: path.join(__dirname, "upload")
      }
      res.sendFile(req.params.filename, options)
    }
    ```

    ## Resources
    - [Express sendFile API reference](http://expressjs.com/en/5x/api.html#res.sendFile)
  cwe_id:
    - 73
  id: "javascript_express_external_file_upload"
  documentation_url: https://docs.bearer.com/reference/rules/javascript_express_external_file_upload
severity: low
