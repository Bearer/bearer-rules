languages:
  - ruby
imports:
  - ruby_shared_common_user_input
patterns:
  - pattern: |
      Kernel.$<METHOD>($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: METHOD
        values:
          - exec
          - spawn
          - system
      - variable: USER_INPUT
        detection: ruby_shared_common_user_input
        scope: result
  - pattern: |
      $<METHOD>($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: METHOD
        values:
          - exec
          - spawn
          - system
      - variable: USER_INPUT
        detection: ruby_shared_common_user_input
        scope: result
  - pattern: |
      IO.popen($<...>$<USER_INPUT>$<...>)$<...>
    filters:
      - variable: USER_INPUT
        detection: ruby_shared_common_user_input
        scope: result
  - pattern: |
      Process.$<METHOD>($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: METHOD
        values:
          - exec
          - spawn
      - variable: USER_INPUT
        detection: ruby_shared_common_user_input
        scope: result
  - pattern: |
      Open3.$<_>($<...>$<USER_INPUT>$<...>)$<...>
    filters:
      - variable: USER_INPUT
        detection: ruby_shared_common_user_input
        scope: result
  - pattern: |
      Gem::Util.$<METHOD>($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: METHOD
        values:
          - popen
          - silent_system
      - variable: USER_INPUT
        detection: ruby_shared_common_user_input
        scope: result
  - pattern: |
      PTY.spawn($<...>$<USER_INPUT>$<...>)$<...>
    filters:
      - variable: USER_INPUT
        detection: ruby_shared_common_user_input
        scope: result
  - pattern: |
      %x{$<...>$<USER_INPUT>$<...>}
    filters:
      - variable: USER_INPUT
        detection: ruby_shared_common_user_input
        scope: result
  - pattern: |
      `$<...>$<USER_INPUT>$<...>`
    filters:
      - variable: USER_INPUT
        detection: ruby_shared_common_user_input
        scope: result
  - pattern: |
      Shell.$<METHOD>($<...>$<USER_INPUT>$<...>)$<...>
    filters:
      - variable: METHOD
        values:
          - alias_command
          - def_system_command
      - variable: USER_INPUT
        detection: ruby_shared_common_user_input
        scope: result
  - pattern: |
      Shell::CommandProcessor.$<METHOD>($<...>$<USER_INPUT>$<...>)$<...>
    filters:
      - variable: METHOD
        values:
          - alias_command
          - def_system_command
      - variable: USER_INPUT
        detection: ruby_shared_common_user_input
        scope: result
  - pattern: |
      $<PROCESSOR>.system($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: PROCESSOR
        detection: ruby_lang_exec_using_user_input_shell_cmd_proc
        scope: cursor
      - variable: USER_INPUT
        detection: ruby_shared_common_user_input
        scope: result
auxiliary:
  - id: ruby_lang_exec_using_user_input_shell
    patterns:
      - |
        Shell.new$<...>
  - id: ruby_lang_exec_using_user_input_shell_cmd_proc
    patterns:
      - pattern: |
          $<SHELL>.command_processor
        filters:
          - variable: SHELL
            detection: ruby_lang_exec_using_user_input_shell
            scope: cursor
      - Shell::CommandProcessor.new$<...>
severity: critical
metadata:
  description: "Unsanitized user input in OS command"
  remediation_message: |
    ## Description

    Applications should not execute OS commands that are formed from user input.
    This rule checks for external commands containing user-supplied data.

    ## Remediations

    ❌ Avoid using user input when executing commands:

    ```ruby
    system(params[:command])
    ```

    ✅ Use user input indirectly when executing commands:

    ```ruby
    command =
      case params[:action]
      when "option1"
        "command1"
      when "option2"
        "command2"
      end

    system(command)
    ```

    ## Resources
    - [OWASP Ruby command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheat_Sheet.html#command-injection)
    - [OWASP OS command injection cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/OS_Command_Injection_Defense_Cheat_Sheet.html)
  cwe_id:
    - 78
  id: ruby_lang_exec_using_user_input
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_exec_using_user_input
