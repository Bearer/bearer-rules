imports:
  - ruby_shared_common_datatype
patterns:
  - pattern: |
      cookies[$<_>] = $<DATA_TYPE>
    filters:
      - variable: DATA_TYPE
        detection: ruby_shared_common_datatype
        scope: result
  - pattern: |
      cookies.$<METHOD>[$<_>] = $<DATA_TYPE>
    filters:
      - variable: METHOD
        values:
          - permanent
          - signed
      - variable: DATA_TYPE
        detection: ruby_shared_common_datatype
        scope: result
  - pattern: |
      cookies.permanent.signed[$<_>] = $<DATA_TYPE>
    filters:
      - variable: DATA_TYPE
        detection: ruby_shared_common_datatype
        scope: result
  - pattern: |
      cookies.signed.permanent[$<_>] = $<DATA_TYPE>
    filters:
      - variable: DATA_TYPE
        detection: ruby_shared_common_datatype
        scope: result
languages:
  - ruby
metadata:
  description: "Leakage of sensitive data in cookie"
  remediation_message: |-
    ## Description

    Storing sensitive data in cookies can lead to a data breach. This vulnerability occurs when sensitive information is stored in browser cookies, putting it at risk of unauthorized access.

    ## Remediations

    - **Do not** store sensitive data in unencrypted cookies. This practice can expose sensitive information to potential security threats.
      ```ruby
      cookies[:user_email] = "john@doe.com" # unsafe
      ```
    - **Do** use encrypted cookies to protect sensitive data stored in cookies.
      ```ruby
      cookies.encrypted[:user_email] = "john@doe.com"
      ```

    ## References

    - [ActionDispatch::Cookies](https://edgeapi.rubyonrails.org/classes/ActionDispatch/Cookies.html)
    - [Demystifying cookie security in rails 6](https://dev.to/ayushn21/demystifying-cookie-security-in-rails-6-1j2f)
  cwe_id:
    - 315
  id: ruby_lang_cookies
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_cookies
  cloud_code_suggestions: true
severity: high
