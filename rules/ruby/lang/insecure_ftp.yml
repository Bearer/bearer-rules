imports:
  - ruby_shared_common_datatype
patterns:
  - |
    $<!>Net::FTP.new()
  - pattern: |
      $<!>Net::FTP.open() do
        $<DATA_TYPE>
      end
    filters:
      - variable: DATA_TYPE
        detection: ruby_shared_common_datatype
        scope: result
  - |
    $<!>Net::FTP.open()$<...>
languages:
  - ruby
severity: critical
metadata:
  description: "Usage of insecure FTP connection"
  remediation_message: |-
    ## Description

    Using an insecure FTP connection can expose sensitive data to interception and unauthorized access. This vulnerability occurs when applications that handle sensitive information communicate with FTP servers without secure protocols like SFTP.

    ## Remediations

    - **Do** use the Net::SFTP library for secure FTP connections. This ensures that data transmitted between your application and the FTP server is encrypted and protected from potential eavesdropping.
      ```ruby
      require 'net/sftp'
      Net::SFTP.start('host', 'username', password: ENV['password']) do |sftp|
        ...
      end
      ```

    ## References

    - [net-sftp](https://github.com/net-ssh/net-sftp)
  cwe_id:
    - 319
  id: ruby_lang_insecure_ftp
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_insecure_ftp
