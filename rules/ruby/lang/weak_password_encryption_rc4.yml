imports:
  - ruby_shared_lang_rc4_init
  - ruby_shared_common_datatype
patterns:
  - pattern: |
      $<VAR>.$<METHOD>($<PASSWORD>)
    filters:
      - variable: VAR
        detection: ruby_shared_lang_rc4_init
        scope: cursor
      - variable: METHOD
        values:
          - encrypt
          - encrypt!
          - decrypt
      - variable: PASSWORD
        detection: ruby_shared_common_datatype
        scope: result
languages:
  - ruby
only_data_types:
  - Passwords
metadata:
  description: "Usage of weak encryption algorithm on a password (RC4)"
  remediation_message: |
    ## Description

    A weak encryption library can lead to data breaches and greater security risk.
    Moreover, since encryption is reversible, it is possible to retrieve the plaintext value. This makes encryption a bad choice for passwords. Instead, passwords should be hashed.

    ## Remediations

    ❌ Do not use encryption for passwords, wherever possible.

    ✅ Use a recommended hashing library such as bcrypt or Argon2id for passwords

    ```ruby
    BCrypt::Password.create("password_123")
    ```

    ```ruby
    hasher = Argon2::Password.new()
    hasher.create("password_123")
    ```

    ## Resources
    - [OWASP Password Storage Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html)
    - [BCrypt Explained](https://dev.to/sylviapap/bcrypt-explained-4k5c)
    - [ruby-argon2](https://github.com/technion/ruby-argon2)
  cwe_id:
    - 326
  id: ruby_lang_weak_password_encryption_rc4
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_weak_password_encryption_rc4
  cloud_code_suggestions: true
severity: high
