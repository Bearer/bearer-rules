imports:
  - ruby_shared_lang_rc4_init
  - ruby_shared_common_datatype
patterns:
  - pattern: |
      $<VAR>.$<METHOD>($<PASSWORD>)
    filters:
      - variable: VAR
        detection: ruby_shared_lang_rc4_init
        scope: cursor
      - variable: METHOD
        values:
          - encrypt
          - encrypt!
          - decrypt
      - variable: PASSWORD
        detection: ruby_shared_common_datatype
        scope: result
languages:
  - ruby
only_data_types:
  - Passwords
metadata:
  description: "Usage of weak encryption algorithm on a password (RC4)"
  remediation_message: |-
    ## Description

    Using a weak encryption algorithm like RC4 for passwords increases the risk of security breaches. Encryption, being reversible, is not suitable for password storage because it allows the original password to be retrieved. Passwords should instead be hashed, an irreversible process that transforms them into a fixed-size string of characters.

    ## Remediations

    - **Do not** use encryption algorithms, including RC4, for password storage. Encryption's reversible nature makes it inappropriate for securing passwords.

    - **Do** use strong hashing algorithms such as bcrypt or Argon2id for password storage. These algorithms are designed to securely hash passwords, making them much harder to crack.
      ```ruby
      BCrypt::Password.create("password_123")
      ```
      ```ruby
      hasher = Argon2::Password.new()
      hasher.create("password_123")
      ```

    ## References

    - [OWASP Password Storage Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html)
    - [BCrypt Explained](https://dev.to/sylviapap/bcrypt-explained-4k5c)
    - [ruby-argon2](https://github.com/technion/ruby-argon2)
  cwe_id:
    - 326
  id: ruby_lang_weak_password_encryption_rc4
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_weak_password_encryption_rc4
  cloud_code_suggestions: true
severity: high
