imports:
  - ruby_shared_lang_openssl_digest_sha_init
  - ruby_shared_common_datatype
patterns:
  - pattern: Digest::SHA1.$<METHOD>($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: METHOD
        values:
          - digest
          - hexdigest
          - base64digest
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: ruby_shared_common_datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: ruby_shared_common_datatype
              scope: result
  - pattern: OpenSSL::Digest.digest($<ALGORITHM>, $<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: ALGORITHM
        regex: (?i)['"]SHA1?['"]
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: ruby_shared_common_datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: ruby_shared_common_datatype
              scope: result
  - pattern: OpenSSL::Digest::$<ALGORITHM>.digest($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: ALGORITHM
        regex: \ASHA1?\z
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: ruby_shared_common_datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: ruby_shared_common_datatype
              scope: result
  - pattern: |
      $<DIGEST>.update($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: DIGEST
        detection: ruby_shared_lang_openssl_digest_sha_init
        scope: cursor
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: ruby_shared_common_datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: ruby_shared_common_datatype
              scope: result
  - pattern: |
      $<DIGEST> << $<OPTIONAL_DATA_TYPE>
    filters:
      - variable: DIGEST
        detection: ruby_shared_lang_openssl_digest_sha_init
        scope: cursor
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: ruby_shared_common_datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: ruby_shared_common_datatype
              scope: result
  - pattern: $<DIGEST>.$<METHOD>($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: DIGEST
        detection: ruby_shared_lang_openssl_digest_sha_init
        scope: cursor
      - variable: METHOD
        values:
          - digest
          - hexdigest
          - base64digest
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: ruby_shared_common_datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: ruby_shared_common_datatype
              scope: result
languages:
  - ruby
skip_data_types:
  - "Unique Identifier"
  - "Passwords" # see ruby_lang_weak_password_hash_sha
metadata:
  description: "Usage of weak hashing library (SHA)"
  remediation_message: |-
    ## Description

    Using a weak hashing library, such as SHA or SHA-1, compromises data security. These algorithms are no longer considered secure due to vulnerabilities that can lead to data breaches.

    ## Remediations

    - **Do not** use SHA or SHA-1 for hashing. These algorithms are outdated and vulnerable to attacks.
    ```ruby
    Digest::SHA.hexdigest('weak hash')
    Digest::SHA1.hexdigest('weak hash')
    ```
    - **Do** use stronger hashing algorithms like bcrypt for enhanced security.
    ```ruby
    BCrypt::Password.create('iLOVEdogs123')
    ```

    ## References

    - [BCrypt Explained](https://dev.to/sylviapap/bcrypt-explained-4k5c)
  cwe_id:
    - 328
  id: ruby_lang_weak_hash_sha
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_weak_hash_sha
  cloud_code_suggestions: true
severity: medium
