imports:
  - ruby_shared_common_user_input
patterns:
  - REXML::Security.entity_expansion_text_limit = 0
trigger:
  match_on: absence
  required_detection: ruby_lang_xml_external_entity_vulnerability_rexml_doc
auxiliary:
  - id: ruby_lang_xml_external_entity_vulnerability_rexml_doc
    patterns:
      - pattern: REXML::Document.new($<USER_INPUT>)
        filters:
          - variable: USER_INPUT
            detection: ruby_shared_common_user_input
            scope: result
languages:
  - ruby
severity: medium
metadata:
  description: Unsanitized input in XML External Entity
  remediation_message: |
    ## Description
    Avoid parsing untrusted data as XML. Such data could include URIs that resolve to resources that are outside of the current context, leading to XML External Entity (XXE) injection.

    ## Remediations

    - **Do** disable external entity expansion in REXML before parsing any XML from untrusted sources. Set the REXML::Security.entity_expansion_text_limit to 0.
      ```ruby
      REXML::Security.entity_expansion_text_limit = 0 # prevent REXML from expanding any text entities

      def parse_xml(raw_xml)
        begin
          return REXML::Document.new(raw_xml)
        rescue REXML::ParseException => e
          # handle error
        end
      end
      ```
    - **Do not** allow REXML to expand text entities from untrusted input. This is the primary mechanism attackers use to perform XXE attacks. Avoid parsing XML without first disabling entity expansion.
      ```ruby
      def unsafe_parse_xml(raw_xml)
        return REXML::Document.new(raw_xml) # unsafe
      end
      ```

    ## References

    - [OWASP XML External Entity (XXE) prevention cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html)
  cwe_id:
    - 611
  id: ruby_lang_xml_external_entity_vulnerability
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_xml_external_entity_vulnerability
