imports:
  - ruby_shared_lang_openssl_digest_rsa_init
patterns:
  - pattern: |
      $<VAR>.$<METHOD>($<_>, $<PASSWORD>)
    filters:
      - variable: VAR
        detection: ruby_shared_lang_openssl_digest_rsa_init
        scope: cursor
      - variable: METHOD
        values:
          - export
          - to_pem
          - to_s
      - variable: PASSWORD
        detection: datatype
        scope: result
languages:
  - ruby
only_data_types:
  - Passwords
metadata:
  description: "Weak encryption algorithm (RSA) detected."
  remediation_message: |
    ## Description

    A weak encryption library can lead to data breaches and greater security risk.

    ## Remediations
    According to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption), 1024-bit RSA (Rivest-Shamir-Adleman) is considered a weak encryption algorithm and therefore shouldn't be used.

    âœ… Use a recommended hashing library such as bcrypt or Argon2id for passwords

    ```ruby
    BCrypt::Password.create("password_123")
    ```

    ```ruby
    hasher = Argon2::Password.new()
    hasher.create("password_123")
    ```

    ## Resources
    - [OWASP Password Storage Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html)
    - [BCrypt Explained](https://dev.to/sylviapap/bcrypt-explained-4k5c)
    - [ruby-argon2](https://github.com/technion/ruby-argon2)
  cwe_id:
    - 331
    - 326
    - 916
  id: ruby_lang_weak_password_encryption_rsa
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_weak_password_encryption_rsa
