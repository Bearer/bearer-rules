imports:
  - ruby_shared_lang_openssl_digest_rsa_init
  - ruby_shared_common_datatype
patterns:
  - pattern: |
      $<VAR>.$<METHOD>($<_>, $<PASSWORD>)
    filters:
      - variable: VAR
        detection: ruby_shared_lang_openssl_digest_rsa_init
        scope: cursor
      - variable: METHOD
        values:
          - export
          - to_pem
          - to_s
      - variable: PASSWORD
        detection: ruby_shared_common_datatype
        scope: result
languages:
  - ruby
only_data_types:
  - Passwords
metadata:
  description: "Usage of weak encryption algorithm on a password (RSA)"
  remediation_message: |-
    ## Description

    Using a weak encryption algorithm like 1024-bit RSA for passwords increases the risk of data breaches. Encryption, being reversible, is not suitable for password storage because it allows the original password to be retrieved. Passwords should instead be hashed, an irreversible process that transforms them into a fixed-size string of characters.

    ## Remediations

    - **Do not** use 1024-bit RSA encryption for passwords as it is considered weak and vulnerable to attacks.
    - **Do** use stronger encryption methods such as bcrypt or Argon2id for securing passwords. These libraries provide a higher level of security and are recommended for password storage.
    ```ruby
    BCrypt::Password.create("password_123")
    ```
    ```ruby
    hasher = Argon2::Password.new()
    hasher.create("password_123")
    ```

    ## References

    - [OWASP Password Storage Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html)
    - [BCrypt Explained](https://dev.to/sylviapap/bcrypt-explained-4k5c)
    - [ruby-argon2](https://github.com/technion/ruby-argon2)
  cwe_id:
    - 326
  id: ruby_lang_weak_password_encryption_rsa
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_weak_password_encryption_rsa
  cloud_code_suggestions: true
severity: high
