imports:
  - ruby_shared_lang_openssl_digest_dsa_init
  - ruby_shared_common_datatype
patterns:
  - pattern: |
      $<VAR>.$<METHOD>($<_>, $<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: VAR
        detection: ruby_shared_lang_openssl_digest_dsa_init
        scope: cursor
      - variable: METHOD
        values:
          - export
          - to_pem
          - to_s
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: ruby_shared_common_datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: ruby_shared_common_datatype
              scope: result
languages:
  - ruby
skip_data_types:
  - "Unique Identifier"
  - Passwords # see ruby_lang_weak_password_encryption_dsa
metadata:
  description: "Usage of weak encryption algorithm (DSA)"
  remediation_message: |-
    ## Description

    Using a weak encryption algorithm like 1024-bit DSA (Digital Signature Algorithm) compromises data security, making it vulnerable to breaches.

    ## Remediations

    - **Do not** use 1024-bit DSA for encryption. This algorithm is no longer considered secure.
      ```ruby
      OpenSSL::PKey::DSA.new(1024) # unsafe
      ```
    - **Do** use stronger, more secure algorithms such as bcrypt for encrypting data. bcrypt is designed to be a slow hashing algorithm, which makes it harder for attackers to decrypt.
      ```ruby
      BCrypt::Password.create('iLOVEdogs123')
      ```

    ## References

    - [BCrypt Explained](https://dev.to/sylviapap/bcrypt-explained-4k5c)
  cwe_id:
    - 327
  id: ruby_lang_weak_encryption_dsa
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_weak_encryption_dsa
  cloud_code_suggestions: true
severity: high
