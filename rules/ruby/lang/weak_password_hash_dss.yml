imports:
  - ruby_shared_lang_openssl_digest_dss_init
  - ruby_shared_common_datatype
patterns:
  - pattern: OpenSSL::Digest.digest($<ALGORITHM>, $<PASSWORD>)
    filters:
      - variable: ALGORITHM
        regex: (?i)['"]DSS1?['"]
      - variable: PASSWORD
        detection: ruby_shared_common_datatype
        scope: result
  - pattern: OpenSSL::Digest::$<ALGORITHM>.digest($<PASSWORD>)
    filters:
      - variable: ALGORITHM
        regex: \ADSS1?\z
      - variable: PASSWORD
        detection: ruby_shared_common_datatype
        scope: result
  - pattern: |
      $<DIGEST>.update($<PASSWORD>)
    filters:
      - variable: DIGEST
        detection: ruby_shared_lang_openssl_digest_dss_init
        scope: cursor
      - variable: PASSWORD
        detection: ruby_shared_common_datatype
        scope: result
  - pattern: |
      $<DIGEST> << $<PASSWORD>
    filters:
      - variable: DIGEST
        detection: ruby_shared_lang_openssl_digest_dss_init
        scope: cursor
      - variable: PASSWORD
        detection: ruby_shared_common_datatype
        scope: result
  - pattern: $<DIGEST>.$<METHOD>($<PASSWORD>)
    filters:
      - variable: DIGEST
        detection: ruby_shared_lang_openssl_digest_dss_init
        scope: cursor
      - variable: METHOD
        values:
          - digest
          - hexdigest
          - base64digest
      - variable: PASSWORD
        detection: ruby_shared_common_datatype
        scope: result
languages:
  - ruby
only_data_types:
  - "Passwords"
metadata:
  description: "Weak password hashing (DSS) detected."
  remediation_message: |
    ## Description

    A weak hashing library can lead to data breaches and greater security risk.

    ## Remediations
    According to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption), DSS is considered a weak hash algorithm and therefore shouldn't be used.

    âœ… Use a recommended hashing library such as bcrypt or Argon2id for passwords

    ```ruby
    BCrypt::Password.create("password_123")
    ```

    ```ruby
    hasher = Argon2::Password.new()
    hasher.create("password_123")
    ```

    ## Resources
    - [OWASP Password Storage Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html)
    - [BCrypt Explained](https://dev.to/sylviapap/bcrypt-explained-4k5c)
    - [ruby-argon2](https://github.com/technion/ruby-argon2)
  cwe_id:
    - 331
    - 328
    - 916
  id: ruby_lang_weak_password_hash_dss
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_weak_password_hash_dss
  cloud_code_suggestions: true
