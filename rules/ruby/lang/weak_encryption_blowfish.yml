imports:
  - ruby_shared_lang_blowfish_init
  - ruby_shared_common_datatype
patterns:
  - pattern: |
      $<VAR>.$<METHOD>($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: VAR
        detection: ruby_shared_lang_blowfish_init
        scope: cursor
      - variable: METHOD
        values:
          - encrypt_string
          - decrypt_string
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: ruby_shared_common_datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: ruby_shared_common_datatype
              scope: result
  - pattern: |
      $<VAR>.$<METHOD>($<_>, $<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: VAR
        detection: ruby_shared_lang_blowfish_init
        scope: cursor
      - variable: METHOD
        values:
          - encrypt_pair
          - decrypt_pair
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: ruby_shared_common_datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: ruby_shared_common_datatype
              scope: result
  - pattern: |
      $<VAR>.$<METHOD> do
        $<OPTIONAL_DATA_TYPE>
      end
    filters:
      - variable: VAR
        detection: ruby_shared_lang_blowfish_init
        scope: cursor
      - variable: METHOD
        values:
          - encrypt_block
          - decrypt_block
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: ruby_shared_common_datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: ruby_shared_common_datatype
              scope: result
languages:
  - ruby
skip_data_types:
  - "Unique Identifier"
  - Passwords # see ruby_lang_weak_password_encryption_blowfish
metadata:
  description: "Usage of weak encryption algorithm (Blowfish)"
  remediation_message: |-
    ## Description

    Using Blowfish for encryption is a security risk as it is a weak algorithm, vulnerable to collision attacks (including birthday attacks) where two different inputs can produce the same hash value, compromising data integrity and security. A weak encryption library can lead to data breaches and greater security risk.

    ## Remediations

    - **Do not** use Blowfish as it is considered a weak encryption algorithm. This can make your data vulnerable to attacks.
      ```ruby
      Crypt::Blowfish.new("weak password encryption") #unsafe
      ```
    - **Do** use stronger encryption algorithms like bcrypt to ensure higher security levels for your data.
      ```ruby
      BCrypt::Password.create('iLOVEdogs123')
      ```

    ## References

    - [BCrypt Explained](https://dev.to/sylviapap/bcrypt-explained-4k5c)
  cwe_id:
    - 327
  id: ruby_lang_weak_encryption_blowfish
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_weak_encryption_blowfish
  cloud_code_suggestions: true
severity: high
