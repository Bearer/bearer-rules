imports:
  - ruby_shared_lang_openssl_digest_md_init
patterns:
  - pattern: Digest::MD5.$<METHOD>($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: METHOD
        values:
          - digest
          - hexdigest
          - base64digest
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: datatype
              scope: result
  - pattern: OpenSSL::Digest.digest($<ALGORITHM>, $<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: ALGORITHM
        regex: (?i)['"]MD\d['"]
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: datatype
              scope: result
  - pattern: OpenSSL::Digest::$<ALGORITHM>.digest($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: ALGORITHM
        regex: \AMD\d\z
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: datatype
              scope: result
  - pattern: |
      $<DIGEST>.update($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: DIGEST
        detection: ruby_shared_lang_openssl_digest_md_init
        scope: cursor
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: datatype
              scope: result
  - pattern: |
      $<DIGEST> << $<OPTIONAL_DATA_TYPE>
    filters:
      - variable: DIGEST
        detection: ruby_shared_lang_openssl_digest_md_init
        scope: cursor
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: datatype
              scope: result
  - pattern: $<DIGEST>.$<METHOD>($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: DIGEST
        detection: ruby_shared_lang_openssl_digest_md_init
        scope: cursor
      - variable: METHOD
        values:
          - digest
          - hexdigest
          - base64digest
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: datatype
              scope: result
languages:
  - ruby
skip_data_types:
  - "Unique Identifier"
  - "Passwords" # see ruby_lang_weak_password_hash_md
metadata:
  description: "Weak hashing library (MD5) detected."
  remediation_message: |
    ## Description

    A weak hashing library can lead to data breaches and greater security risk.

    ## Remediations
    According to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption), MD5 and its predecessors are considered weak hash algorithms and therefore shouldn't be used.

    ❌ Avoid libraries and algorithms with known weaknesses:

    ```ruby
    Digest::MD5.hexdigest 'weak hash'
    ```

    ✅ Instead, we recommend using bcrypt:

    ```ruby
    BCrypt::Password.create('iLOVEdogs123')
    ```

    ## Resources
    - [BCrypt Explained](https://dev.to/sylviapap/bcrypt-explained-4k5c)
  cwe_id:
    - 331
    - 328
  id: ruby_lang_weak_hash_md
  documentation_url: https://docs.bearer.com/reference/rules/ruby_lang_weak_hash_md
