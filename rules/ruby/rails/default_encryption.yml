patterns:
  - pattern: |
      class $<_>
        encrypts($<...>$<!>$<ATTRIBUTE>$<...>)
      end
languages:
  - ruby
detectors:
  - schema_rb # built-in
  - sql_lang_create_table # built-in
processors:
  - db_encrypted
  - rails_encrypted
skip_data_types:
  - Unique Identifier
  - Passwords
auto_encrypt_prefix: encrypted_
trigger:
  match_on: stored_data_types
severity: warning
metadata:
  description: "Missing application-level encryption of sensitive data"
  remediation_message: |-
    ## Description

    Failing to encrypt sensitive data at the application level can lead to data breaches. This vulnerability arises when sensitive information within records is not encrypted, making it readable and accessible.

    ## Remediations

    - **Do** encrypt the entire record when storing sensitive data in a datastore. This approach ensures that all sensitive information is protected.
    ```ruby
    class User < ApplicationRecord
      encrypts :personal_info
    end
    ```
    - **Do** encrypt specific fields if encrypting the entire record is not feasible. This method protects individual pieces of sensitive data.
    ```ruby
    class User < ApplicationRecord
      encrypts :ssn, :credit_card_number
    end
    ```

    ## References

    - [Ruby on Rails Active Record encryption](https://guides.rubyonrails.org/active_record_encryption.html)
  cwe_id:
    - 312
  id: ruby_rails_default_encryption
  documentation_url: https://docs.bearer.com/reference/rules/ruby_rails_default_encryption
