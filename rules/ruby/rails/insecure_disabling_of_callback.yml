languages:
  - ruby
patterns:
  - pattern: |
      $<METHOD>($<ARGUMENT>: $<_>)
    filters:
      - variable: METHOD
        values:
          - skip_after_action
          - skip_around_action
          - skip_before_action
          - skip_after_filter
          - skip_around_filter
          - skip_before_filter
          - skip_filter
      - variable: ARGUMENT
        values:
          - except
metadata:
  description: "Permissive callback disable configuration"
  remediation_message: |-
    ## Description

    Using the `except` option to disable a callback can inadvertently bypass critical access control logic. This oversight can compromise the security of your application by not enforcing necessary checks on certain actions.

    ## Remediations

    - **Do** explicitly list all actions where a callback should be skipped using the `only` option. This approach minimizes the risk of accidentally bypassing important security controls.
    ```ruby
    skip_before_action :access_control, only: %i[public_action1 public_action2]
    ```
  cwe_id:
    - 284
  id: ruby_rails_insecure_disabling_of_callback
  documentation_url: https://docs.bearer.com/reference/rules/ruby_rails_insecure_disabling_of_callback
  cloud_code_suggestions: true
severity: medium
