imports:
  - ruby_shared_common_user_input
patterns:
  - pattern: |
      redirect_to($<USER_INPUT>$<...>)
    filters:
      - variable: USER_INPUT
        detection: ruby_rails_open_redirect_user_input
        scope: result
languages:
  - ruby
auxiliary:
  - id: ruby_rails_open_redirect_sanitized
    patterns:
      - $<_>.to_i
      - $<_>.to_f
      - pattern: $<...>$<METHOD>($<...>$<!>$<_>$<...>)
        filters:
          - variable: METHOD
            regex: _(path|url)\z
  - id: ruby_rails_open_redirect_user_input
    sanitizer: ruby_rails_open_redirect_sanitized
    patterns:
      - pattern: $<REDIRECT_USER_INPUT>
        filters:
          - variable: REDIRECT_USER_INPUT
            detection: ruby_shared_common_user_input
            scope: cursor
severity: medium
metadata:
  description: "Open redirect detected"
  remediation_message: |
    ## Description

    A redirect using unsanitized user input is bad practice and puts your application at greater risk of phishing attacks.

    ## Remediations

    ❌ Do not use unsanitized user input when constructing redirect URLs

    ✅ Instead, ensure the input is validated by using a safe list or a mapping

    ```ruby
      transport_path = case params[:transport_type]
        when "planes"
          planes_path
        when "trains"
          trains_path
        when "automobiles"
          automobiles_path
        default
          root
        end

      redirect_to transport_path
    ```

    ## Resources
    - [OWASP open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)
  cwe_id:
    - 601
  id: ruby_rails_open_redirect
  documentation_url: https://docs.bearer.com/reference/rules/ruby_rails_open_redirect
