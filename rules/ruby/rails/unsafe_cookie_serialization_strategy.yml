patterns:
  - pattern: |
      $<CONFIG>.action_dispatch.cookies_serializer = $<VALUE>
    filters:
      - variable: CONFIG
        regex: (.*)?config
      - variable: VALUE
        regex: \:(marshal|hybrid)
languages:
  - ruby
metadata:
  description: "Possible dangerous serialization configuration"
  remediation_message: |-
    ## Description

    Using an unsafe serialization strategy can introduce vulnerabilities, particularly when handling untrusted data like cookies. By default, Rails uses JSON to serialize cookie values. JSON is the safest serialization strategy when dealing with untrusted data, to avoid malicious code injection. Changing this default setting can expose your application to attacks.

    ## Remediations

    - **Do not** change the default cookie serializer.
    ```ruby
    Rails.application.config.action_dispatch.cookies_serializer = :marshal # unsafe
    ```
    - **Do** consider the hybrid serializer option, but use this as a temporary measure only (such as during the transition from Marshal to JSON serialization). This should not be a permanent solution.
    ```ruby
    Rails.application.config.action_dispatch.cookies_serializer = :hybrid
    ```

    ## References

    - [OWASP Rails Goat on Marshal and Remote Code Execution](https://github.com/OWASP/railsgoat/wiki/Extras:-Remote-Code-Execution)
  cwe_id:
    - 502
  id: ruby_rails_unsafe_cookie_serialization_strategy
  documentation_url: https://docs.bearer.com/reference/rules/ruby_rails_unsafe_cookie_serialization_strategy
  cloud_code_suggestions: true
severity: critical
