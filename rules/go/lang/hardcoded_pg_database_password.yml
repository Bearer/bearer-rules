patterns:
  - pattern: |
      $<SQL>.Options{$<!>Password: $<STRING_LITERAL>}
    filters:
      - variable: SQL
        detection: go_lang_hardcoded_pg_database_password_init
        scope: cursor
      - variable: STRING_LITERAL
        detection: string_literal
        scope: cursor
  - pattern: |
      $<INIT>.Open($<_>, $<STRING>)
    filters:
      - variable: INIT
        detection: go_lang_hardcoded_pg_database_password_sql_init
        scope: cursor
      - variable: STRING
        string_regex: \Apostgres://\w+:.+@.*\z
        scope: cursor
auxiliary:
  - id: go_lang_hardcoded_pg_database_password_init
    patterns:
      - import $<!>"github.com/lib/pg"
      - |
        import (
          $<!>"github.com/lib/pg"
        )
  - id: go_lang_hardcoded_pg_database_password_sql_init
    patterns:
      - import $<!>"database/sql"
      - |
        import (
          $<!>"database/sql"
        )
languages:
  - go
metadata:
  description: "Usage of hard-coded PostgreSQL database password"
  remediation_message: |-
    ## Description

    Your code contains a hard-coded password for connecting to a PostgreSQL database. Storing passwords directly in the code compromises security and makes your application vulnerable to unauthorized access.

    ## Remediations

    - **Do not** embed passwords directly in your database connection strings or code. This practice exposes your database to potential security breaches.
    ```python
    conn = psycopg2.connect("dbname=test user=postgres password=secret") # unsafe
    ```
    - **Do** use environment variables to store sensitive information such as database passwords. This method keeps credentials out of your codebase and makes them easier to manage securely.
    - **Do** consider implementing a key-management system to securely handle passwords and other sensitive information. This approach provides enhanced security measures for managing and accessing credentials.

    ## References

    - [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)
  cwe_id:
    - 259
  id: go_lang_hardcoded_pg_database_password
  documentation_url: https://docs.bearer.com/reference/rules/go_lang_hardcoded_pg_database_password
severity: critical
