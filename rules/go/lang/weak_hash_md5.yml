imports:
  - go_shared_lang_datatype
patterns:
  - pattern: $<MD5_INIT>.Sum($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: MD5_INIT
        detection: go_lang_weak_hash_md5_init
        scope: cursor
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: go_shared_lang_datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: go_shared_lang_datatype
              scope: result
  - pattern: md5.Sum($<OPTIONAL_DATA_TYPE>)
    filters:
      - either:
          - variable: OPTIONAL_DATA_TYPE
            detection: go_shared_lang_datatype
            scope: result
          - not:
              variable: OPTIONAL_DATA_TYPE
              detection: go_shared_lang_datatype
              scope: result
auxiliary:
  - id: go_lang_weak_hash_md5_init
    patterns:
      - md5.New()
languages:
  - go
skip_data_types:
  - "Unique Identifier"
  - "Passwords" # see go_lang_weak_password_encryption_md5
metadata:
  description: "Usage of weak hashing library (MD5)"
  remediation_message: |-
    ## Description

    Using a weak hashing library like MD5 increases the risk of data breaches. MD5 is vulnerable to collision attacks, where two different inputs produce the same output, compromising data integrity and security.

    ## Remediations

    - **Do not** use MD5 for hashing. It is considered a weak hash algorithm and can compromise data security.
    ```go
    md5.Sum([]byte("password")) // unsafe
    ```
    - **Do** opt for stronger hashing algorithms such as SHA-256 to enhance security.
    ```go
    sha256.Sum256([]byte("string"))
    ```
  cwe_id:
    - 328
  id: go_lang_weak_hash_md5
  documentation_url: https://docs.bearer.com/reference/rules/go_lang_weak_hash_md5
  cloud_code_suggestions: true
severity: medium
