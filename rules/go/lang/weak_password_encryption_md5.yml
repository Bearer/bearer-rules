imports:
  - go_shared_lang_datatype
patterns:
  - pattern: $<MD5_INIT>.Sum($<DATA_TYPE>)
    filters:
      - variable: MD5_INIT
        detection: go_lang_weak_hash_md5_init
        scope: cursor
      - variable: DATA_TYPE
        detection: go_shared_lang_datatype
        scope: result
  - pattern: md5.Sum($<DATA_TYPE>)
    filters:
      - variable: DATA_TYPE
        detection: go_shared_lang_datatype
        scope: result
auxiliary:
  - id: go_lang_weak_hash_md5_init
    patterns:
      - md5.New()
languages:
  - go
only_data_types:
  - Passwords
metadata:
  description: "Usage of weak hashing library on a password (MD5)"
  remediation_message: |-
    ## Description

    Using a weak hashing library like MD5 for password storage compromises security. MD5 is outdated and vulnerable, making it easier for attackers to crack passwords and gain unauthorized access.

    ## Remediations

    - **Do not** use MD5 for hashing passwords. This algorithm is no longer considered secure due to its vulnerability to collision and preimage attacks.
    ```go
    md5.Sum([]byte('password')) // unsafe
    ```
    - **Do** use stronger hashing algorithms such as SHA-256 for password hashing. These provide enhanced security and resistance against attacks.
    ```go
    sha256.Sum256([]byte('string'))
    ```
  cwe_id:
    - 326
  id: go_lang_weak_password_encryption_md5
  documentation_url: https://docs.bearer.com/reference/rules/go_lang_weak_password_encryption_md5
  cloud_code_suggestions: true
severity: high
