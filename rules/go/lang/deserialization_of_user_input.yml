imports:
  - go_shared_lang_dynamic_input_combined
patterns:
  - pattern: $<DECODER>.Decode($<USER_INPUT>);
    filters:
      - variable: DECODER
        detection: go_lang_deserialization_of_user_input_decoder
      - variable: USER_INPUT
        detection: go_shared_lang_dynamic_input_combined
  - pattern: $<ENCODER>.Encode($<...>$<USER_INPUT>$<...>);
    filters:
      - variable: ENCODER
        detection: go_lang_deserialization_of_user_input_encoder
      - variable: USER_INPUT
        detection: go_shared_lang_dynamic_input_combined
  - pattern: $<CALLER>.$<METHOD>($<...>$<USER_INPUT>$<...>);
    filters:
      - variable: CALLER
        values:
          - yaml
          - json
          - proto
      - variable: METHOD
        values:
          - Unmarshal
          - Marshal
      - variable: USER_INPUT
        detection: go_shared_lang_dynamic_input_combined
auxiliary:
  - id: go_lang_deserialization_of_user_input_decoder
    patterns:
      - gob.NewDecoder();
      - json.NewDecoder();
  - id: go_lang_deserialization_of_user_input_encoder
    patterns:
      - gob.NewEncoder();
      - json.NewEncoder();
languages:
  - go
metadata:
  description: Unsanitized user input in deserialization method
  remediation_message: |
    ## Description

    It is bad practice to deserialize untrusted data, such as data that comes
    from external sources like user input or request parameters, without sufficient
    verification. Attackers can transfer payloads or malicious code via serialized
    data, and deserializing such data puts your application at risk.

    ## Remediations

    ❌ Do not deserialize untrusted data

    ✅ Validate and sanitize data before attempting to (de)serialize it

    ## Resources
    - [OWASP Deserialization cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Deserialization_Cheat_Sheet.html)
  cwe_id:
    - 502
  id: go_lang_deserialization_of_user_input
  documentation_url: https://docs.bearer.com/reference/rules/go_lang_deserialization_of_user_input
