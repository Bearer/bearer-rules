patterns:
  - pattern: $<PERMISSIVE_REGEXP>.$<METHOD>($<...>)
    filters:
      - variable: PERMISSIVE_REGEXP
        detection: go_lang_permissive_regex_validation_permissive_regexp
      - variable: METHOD
        values:
          - Match
          - MatchString
auxiliary:
  - id: go_lang_permissive_regex_validation_permissive_regexp
    patterns:
      - pattern: $<REGEXP>.$<METHOD>($<PATTERN>$<...>)
        filters:
          - variable: REGEXP
            detection: go_lang_permissive_regex_validation_regexp
          - variable: METHOD
            values:
              - Compile
              - MustCompile
          - not:
              variable: PATTERN
              string_regex: \A.\\A.*\\[zZ].\z
  - id: go_lang_permissive_regex_validation_regexp
    patterns:
      - import $<!>"regexp"
      - |
        import (
          $<!>"regexp"
        )
languages:
  - go
metadata:
  description: Permissive regular expression used in matching
  remediation_message: |-
    ## Description

    When matching with regular expressions -- especially for validation purposes -- it is crucial to specify the start and end of the text boundaries. This ensures the entire text is validated, not just parts of it, and prevents attackers from bypassing validation with partially matching input. Use \A and \z (or \Z) over ^ and $ to specify text boundaries, because these accurately mark the beginning and end of the text, even in multiline mode.

    ## Remediations

    - **Do not** use regular expressions for validation without specifying start and end boundaries. This can lead to partial matches being considered valid, when they may contain unsafe input.
      ```go
      regexp.MustCompile("foo") // unsafe
      ```
    - **Do not** use line-based boundaries (^ and $) for validation as they may not secure the entire text.
      ```go
      regexp.MustCompile("^foo$") // unsafe
      ```
    - **Do** use whole-text boundaries (\A and \z or \Z) in your regular expressions to ensure comprehensive validation.
      ```go
      regexp.MustCompile("\Afoo\z")
      ```

  cwe_id:
    - 625
  id: go_lang_permissive_regex_validation
  documentation_url: https://docs.bearer.com/reference/rules/go_lang_permissive_regex_validation
severity: medium
