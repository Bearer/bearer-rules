patterns:
  - import $<!>"net/http/pprof"
  - pattern: |
      import (
        $<!>"net/http/pprof"
      )
languages:
  - go
metadata:
  description: "Usage of active debug code (pprof enabled)"
  remediation_message: |-
    ## Description

    Enabling Go's `net/http/pprof` in production environments exposes runtime profiling data via a `/debug/pprof` endpoint, creating a security vulnerability. This tool is part of Go's standard library and, while useful for debugging, it does not have authentication controls. This can lead to sensitive information leaks about the application's runtime state and environment if left accessible in production.

    ## Remediations

    - **Do not** include `net/http/pprof` in your production code. Remove any imports of this package before deploying to ensure the profiling endpoint is not exposed.
    - **Do** use build tags for conditional compilation, and only allow profiling in non-production builds.
    - **Do** configure environment-specific settings to enable or disable profiling endpoints based on the deployment environment.
    - **Do** implement strong authentication mechanisms if profiling must be enabled in a controlled production scenario to secure the endpoint.

    ## References

    - [Go net/http/pprof Package Documentation](https://pkg.go.dev/net/http/pprof)
    - [Go Build Constraints Documentation](https://pkg.go.dev/go/build#hdr-Build_Constraints)
    - [OWASP Secure Product Design Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secure_Product_Design_Cheat_Sheet.html)
  cwe_id:
    - 200
  id: go_gosec_leak_pprof_endpoint
  documentation_url: https://docs.bearer.com/reference/rules/go_gosec_leak_pprof_endpoint
severity: medium
