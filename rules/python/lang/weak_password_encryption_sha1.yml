imports:
  - python_shared_lang_datatype
patterns:
  - pattern: hashlib.sha1($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: OPTIONAL_DATA_TYPE
        detection: python_shared_lang_datatype
        scope: result
  - pattern: $<SHA1_INIT>.update($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: SHA1_INIT
        detection: python_lang_weak_hash_sha1_init
        scope: cursor
      - variable: OPTIONAL_DATA_TYPE
        detection: python_shared_lang_datatype
        scope: result
auxiliary:
  - id: python_lang_weak_hash_sha1_init
    patterns:
      - hashlib.sha1()
languages:
  - python
only_data_types:
  - "Passwords"
metadata:
  description: "Usage of weak hashing library on a password (SHA1)"
  remediation_message: |
    ## Description

    A weak hashing library can lead to data breaches and greater security risk.

    ## Remediations
    According to [OWASP](https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/04-Testing_for_Weak_Encryption), sha1 and its predecessors are considered weak hash algorithms and therefore shouldn't be used.

    ❌ Do not use encryption for passwords, wherever possible:

    ```python
    hashlib.sha1(user.password).digest()
    ```

    ✅ Instead, we recommend using sha256:

    ```python
    hashlib.sha256(user.password).digest()
    ```
  cwe_id:
    - 326
  id: python_lang_weak_password_encryption_sha1
  documentation_url: https://docs.bearer.com/reference/rules/python_lang_weak_password_encryption_sha1
severity: high
