imports:
  - python_shared_lang_datatype
patterns:
  - pattern: hashlib.md5($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: OPTIONAL_DATA_TYPE
        detection: python_shared_lang_datatype
        scope: result
  - pattern: $<MD5_INIT>.update($<OPTIONAL_DATA_TYPE>)
    filters:
      - variable: MD5_INIT
        detection: python_lang_weak_hash_md5_init
        scope: cursor
      - variable: OPTIONAL_DATA_TYPE
        detection: python_shared_lang_datatype
        scope: result
auxiliary:
  - id: python_lang_weak_hash_md5_init
    patterns:
      - hashlib.md5()
languages:
  - python
only_data_types:
  - "Passwords"
metadata:
  description: "Usage of weak hashing library on a password (MD5)"
  remediation_message: |-
    ## Description

    Using a weak hashing library like MD5 for passwords increases the risk of data breaches. MD5 is vulnerable to collision attacks, where two different inputs can produce the same hash value, compromising data integrity and security.

    ## Remediations

    - **Do not** use MD5 for hashing passwords as it is considered weak and vulnerable to attacks.
    ```python
    hashlib.md5(user.password).digest() # unsafe
    ```
    - **Do** opt for stronger hashing algorithms such as SHA-256 to enhance security.
    ```python
    hashlib.sha256(user.password).digest()
    ```
  cwe_id:
    - 326
  id: python_lang_weak_password_encryption_md5
  documentation_url: https://docs.bearer.com/reference/rules/python_lang_weak_password_encryption_md5
severity: high
