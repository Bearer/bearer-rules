imports:
  - python_shared_lang_datatype
  - python_shared_lang_import1
patterns:
  - pattern: $<FUNCTION>($<ALGORITHM>, $<PASSWORD>$<...>)
    filters:
      - variable: FUNCTION
        detection: python_shared_lang_import1
        scope: cursor
        filters:
          - variable: MODULE1
            values: [hashlib]
          - variable: NAME
            values: [new]
      - variable: ALGORITHM
        string_regex: (?i)\Amd\d
      - variable: PASSWORD
        detection: python_shared_lang_datatype
        scope: result
  - pattern: $<FUNCTION>($<PASSWORD>$<...>)
    filters:
      - variable: FUNCTION
        detection: python_shared_lang_import1
        scope: cursor
        filters:
          - variable: MODULE1
            values: [hashlib]
          - variable: NAME
            values: [md5]
      - variable: PASSWORD
        detection: python_shared_lang_datatype
        scope: result
  - pattern: $<MD_INIT>.update($<PASSWORD>)
    filters:
      - variable: MD_INIT
        detection: python_lang_weak_hash_md5_init
        scope: cursor
      - variable: PASSWORD
        detection: python_shared_lang_datatype
        scope: result
auxiliary:
  - id: python_lang_weak_hash_md5_init
    patterns:
      - pattern: $<FUNCTION>($<...>)
        filters:
          - variable: FUNCTION
            detection: python_shared_lang_import1
            scope: cursor
            filters:
              - variable: MODULE1
                values: [hashlib]
              - variable: NAME
                values: [md5]
      - pattern: $<FUNCTION>($<ALGORITHM>$<...>)
        filters:
          - variable: FUNCTION
            detection: python_shared_lang_import1
            scope: cursor
            filters:
              - variable: MODULE1
                values: [hashlib]
              - variable: NAME
                values: [new]
          - variable: ALGORITHM
            string_regex: (?i)\Amd\d
languages:
  - python
only_data_types:
  - Passwords
metadata:
  description: Usage of weak hashing library on a password (MD5)
  remediation_message: |-
    ## Description

    Using a weak hashing library like MD5 for passwords increases the risk of data breaches. MD5 is vulnerable to collision attacks, where two different inputs can produce the same hash value, compromising data integrity and security.

    ## Remediations

    - **Do not** use MD5 for hashing passwords as it is considered weak and vulnerable to attacks.
      ```python
      hashlib.md5(user.password).digest() # unsafe
      ```
    - **Do** opt for stronger hashing algorithms such as SHA-256 to enhance security.
      ```python
      hashlib.sha256(user.password).digest()
      ```
  cwe_id:
    - 326
  id: python_lang_weak_password_encryption_md5
  documentation_url: https://docs.bearer.com/reference/rules/python_lang_weak_password_encryption_md5
severity: high
