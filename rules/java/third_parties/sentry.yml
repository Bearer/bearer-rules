imports:
  - java_shared_lang_datatype
  - java_shared_lang_instance
patterns:
  - pattern: $<SENTRY>.$<METHOD>($<...>$<DATA_TYPE>$<...>);
    filters:
      - either:
          - variable: SENTRY
            regex: \A(io\.sentry\.)?Sentry\z
          - variable: SENTRY
            detection: java_shared_lang_instance
            scope: cursor
            filters:
              - variable: JAVA_SHARED_LANG_INSTANCE_TYPE
                regex: \A(io\.sentry\.)?Hub\z
      - variable: METHOD
        values:
          - addBreadcrumb
          - captureMessage
          - setExtra
          - setTag
          - setTransaction
      - variable: DATA_TYPE
        detection: java_shared_lang_datatype
        scope: result
  - pattern: $<SENTRY_PROTOCOL_OBJ>.$<SETTER_METHOD>($<...>$<DATA_TYPE>$<...>);
    filters:
      - either:
          - variable: SENTRY_PROTOCOL_OBJ
            detection: java_shared_lang_instance
            scope: cursor
            filters:
              - variable: JAVA_SHARED_LANG_INSTANCE_TYPE
                regex: \A(io\.sentry\.protocol\.)?User\z
          - variable: SENTRY_PROTOCOL_OBJ
            detection: java_shared_lang_instance
            scope: cursor
            filters:
              - variable: JAVA_SHARED_LANG_INSTANCE_TYPE
                regex: \A(io\.sentry\.protocol\.)?Message\z
      - variable: SETTER_METHOD
        regex: \Aset[a-zA-Z]+\z
      - variable: DATA_TYPE
        detection: java_shared_lang_datatype
        scope: result
  - pattern: |
      $<SENTRY>.configureScope($<SCOPE> -> {
        $<!>$<SCOPE>.$<METHOD>($<...>$<DATA_TYPE>$<...>);
      });
    filters:
      - variable: SENTRY
        regex: \A(io\.sentry\.)?Sentry\z
      - variable: METHOD
        values:
          - addBreadcrumb
          - captureMessage
          - setContexts
          - setExtra
          - setTag
          - setTransaction
      - variable: DATA_TYPE
        detection: java_shared_lang_datatype
        scope: result
languages:
  - java
skip_data_types:
  - "Unique Identifier"
metadata:
  description: Leakage of sensitive data to Sentry
  remediation_message: |
    ## Description
    Leaking sensitive data to third-party loggers is a common cause of data
    leaks and can lead to data breaches. This rule looks for instances of
    sensitive data sent to Sentry.

    ## Remediations

    When logging errors or events, ensure all sensitive data is removed.

    ## Resources
    - [Sentry Docs](https://docs.sentry.io/platforms/java/)
  cwe_id:
    - 201
  associated_recipe: Sentry
  id: java_third_parties_sentry
  documentation_url: https://docs.bearer.com/reference/rules/java_third_parties_sentry
severity: medium
