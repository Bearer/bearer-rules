imports:
  - java_shared_lang_message_digest_sha1_init
  - java_shared_lang_datatype
patterns:
  - pattern: |
      $<MESSAGE_DIGEST_SHA1_INIT>.update($<DATA_TYPE>)
    filters:
      - variable: MESSAGE_DIGEST_SHA1_INIT
        detection: java_shared_lang_message_digest_sha1_init
        scope: cursor
      - variable: DATA_TYPE
        detection: java_shared_lang_datatype
        scope: result
  - pattern: |
      $<MESSAGE_DIGEST_SHA1_INIT>.update()
    filters:
      - variable: MESSAGE_DIGEST_SHA1_INIT
        detection: java_shared_lang_message_digest_sha1_init
        scope: cursor
languages:
  - java
skip_data_types:
  - "Unique Identifier"
  - Passwords # see java_lang_weak_password_hash_sha1
metadata:
  description: "Usage of weak hashing library (SHA-1)"
  remediation_message: |-
    ## Description

    Using a weak hashing library like SHA-1 increases the risk of data breaches. SHA-1 in particular is vulnerable to collision attacks, where two different inputs can produce the same hash value, compromising data integrity and security.

    ## Remediations

    - **Do not** use SHA-1 for hashing. It is no longer considered secure.
      ```java
      MessageDigest md = MessageDigest.getInstance("SHA-1"); // unsafe
      ```
    - **Do** use stronger hashing algorithms such as SHA-256 to enhance security.
      ```java
      MessageDigest md = MessageDigest.getInstance("SHA-256");
      ```

    ## References

    - [Java MessageDigest class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/MessageDigest.html)
  cwe_id:
    - 328
  id: java_lang_weak_hash_sha1
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_weak_hash_sha1
  cloud_code_suggestions: true
severity: medium
