imports:
  - java_shared_lang_servlet_request
  - java_shared_lang_instance
patterns:
  - pattern: $<REQUEST>.setAttribute($<NAME>, $<VALUE>);
    filters:
      - variable: REQUEST
        detection: java_shared_lang_servlet_request
        scope: cursor
      - either:
          - not:
              variable: NAME
              detection: string_literal
              scope: cursor
          - not:
              variable: VALUE
              detection: string_literal
              scope: cursor
  - pattern: $<SESSION>.$<METHOD>($<NAME>, $<VALUE>);
    filters:
      - variable: SESSION
        detection: java_lang_trust_boundary_violation_session
        scope: cursor
      - variable: METHOD
        values:
          - setAttribute
          - putValue
      - either:
          - not:
              variable: NAME
              detection: string_literal
              scope: cursor
          - not:
              variable: VALUE
              detection: string_literal
              scope: cursor
auxiliary:
  - id: java_lang_trust_boundary_violation_session
    patterns:
      - $<_>.getSession();
      - pattern: $<SESSION_INSTANCE>;
        filters:
          - variable: SESSION_INSTANCE
            detection: java_shared_lang_instance
            scope: cursor
            filters:
              - variable: JAVA_SHARED_LANG_INSTANCE_TYPE
                regex: \A(javax\.servlet\.http\.)?HttpSession\z
languages:
  - java
severity: warning
metadata:
  description: "Trust boundary violation detected."
  remediation_message: |
    ## Description

    Mixing trusted and untrusted data inside the same data structure can lead
    to untrusted data being mistakenly treated as being trusted.

    ## Remediations

    âœ… Avoid adding trusted data to data structures containing untrusted data
  cwe_id:
    - 501
  id: java_lang_trust_boundary_violation
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_trust_boundary_violation
