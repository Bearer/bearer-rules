imports:
  - java_shared_lang_instance
patterns:
  - pattern: $<COOKIE>.setHttpOnly($<TRUE>);
    filters:
      - variable: COOKIE
        detection: java_shared_lang_instance
        scope: cursor
        filters:
          - variable: JAVA_SHARED_LANG_INSTANCE_TYPE
            regex: \A((javax|jakarta)\.servlet\.http\.)?Cookie\z
      - variable: "TRUE"
        detection: java_lang_cookie_missing_http_only_true
        scope: cursor
trigger:
  match_on: absence
  required_detection: java_lang_cookie_missing_http_only_init
auxiliary:
  - id: java_lang_cookie_missing_http_only_init
    patterns:
      - pattern: new $<COOKIE_TYPE>();
        filters:
          - variable: COOKIE_TYPE
            regex: \A((javax|jakarta)\.servlet\.http\.)?Cookie\z
  - id: java_lang_cookie_missing_http_only_true
    patterns:
      - "true;"
languages:
  - java
metadata:
  description: Missing HTTP Only option in cookie configuration
  remediation_message: |
    ## Description

    The "HttpOnly" attribute when set to "true" protects the cookie value from
    being accessed by client side JavaScript such as reading the "document.cookie"
    values. By enabling this protection, a website that is vulnerable to Cross-Site
    Scripting (XSS) will be able to block malicious scripts from accessing the
    cookie value from JavaScript.

    ## Remediations

    âœ… Set `setHttpOnly` to `true`

    ```java
    cookie.setHttpOnly(true);
    ```
  cwe_id:
    - 1004
  id: java_lang_cookie_missing_http_only
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_cookie_missing_http_only
  cloud_code_suggestions: true
severity: low
