imports:
  - java_shared_lang_instance
patterns:
  - pattern: |
      new $<RANDOM>();
    filters:
      - variable: RANDOM
        regex: \A(java\.util\.)?Random\z
        scope: cursor
  - pattern: $<TYPE>.random();
    filters:
      - variable: TYPE
        regex: \A(java\.lang\.)?Math\z
  - pattern: |
      $<CLASS>.$<_>();
    filters:
      - either:
          - variable: CLASS
            regex: \A(org\.apache\.commons\.lang\.)?RandomStringUtils\z
          - variable: CLASS
            regex: \A(org\.apache\.commons\.lang\.math\.)?RandomUtils\z
languages:
  - java
metadata:
  description: "Usage of insufficient random value"
  remediation_message: |-
    ## Description

    The use of predictable random values compromises application security, particularly when these values serve security-related functions.

    ## Remediations

    - **Do** utilize a robust library for generating random values to enhance security.
    ```java
    SecureRandom random = new SecureRandom();
    ```

    ## References

    - [Java SecureRandom class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/SecureRandom.html)
  cwe_id:
    - 330
  id: java_lang_insufficiently_random_values
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_insufficiently_random_values
severity: medium
