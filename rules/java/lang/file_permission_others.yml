patterns:
  - pattern: $<PERMISSIONS>.add($<OTHER_PERMISSION>);
    filters:
      - variable: PERMISSIONS
        detection: java_lang_get_posix_file_permissions
        scope: cursor
      - variable: OTHER_PERMISSION
        regex: ^(PosixFilePermission.)?OTHER_
auxiliary:
  - id: java_lang_get_posix_file_permissions
    patterns:
      - pattern: $<FILES>.getPosixFilePermissions();
        filters:
          - variable: FILES
            regex: \A(java\.nio\.file\.)?Files\z
languages:
  - java
severity: warning
metadata:
  description: Usage of permissive file permission ('other')
  remediation_message: |
    ## Description

    Having overly permissive file permissions, such as extending read, write, or execute privileges to 'other', is risky and could lead to accidental exposure of sensitive information.

    ## Remediations

    âœ… Keep file permissions as restrictive as possible. With the Posix enum, for example, prefer 'groups' to 'other', when extending privileges to users without owner privileges.

    ```java
      permissions.add(PosixFilePermission.GROUP_WRITE)
    ```

    ## Resources
    - [Java Files class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/nio/file/Files.html)
    - [Java PosixFilePermission enum](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/nio/file/attribute/PosixFilePermission.html)
  cwe_id:
    - 732
  id: "java_lang_file_permission_others"
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_file_permission_others
  cloud_code_suggestions: true
