imports:
  - java_shared_lang_instance
  - java_shared_lang_user_input
patterns:
  - pattern: $<CLASS>.forName($<USER_INPUT>);
    filters:
      - variable: CLASS
        regex: \A(java\.lang\.reflect\.)?Class\z
      - variable: USER_INPUT
        detection: java_shared_lang_user_input
  - pattern: $<CLASS>.getMethod($<USER_INPUT>);
    filters:
      - variable: CLASS
        detection: java_lang_reflection_using_user_input_class_for_name
      - variable: USER_INPUT
        detection: java_shared_lang_user_input
auxiliary:
  - id: java_lang_reflection_using_user_input_class_for_name
    patterns:
      - pattern: $<CLASS>.forName($<USER_INPUT>);
        filters:
          - variable: CLASS
            regex: \A(java\.lang\.reflect\.)?Class\z
          - variable: USER_INPUT
            detection: java_shared_lang_user_input
languages:
  - java
metadata:
  description: "Usage of external input in code reflection"
  remediation_message: |-
    ## Description

    Using external input for dynamic class loading or code execution through reflection poses a significant security risk. This practice can be exploited by attackers to load harmful classes or execute malicious methods, potentially resulting in remote code execution and other severe security threats.

    ## Remediations

    - **Do not** - wherever possible - use external input with code reflection. Avoiding this practice altogether significantly lowers the risk of executing unauthorized or malicious code.
    - **Do** limit the allowed class names and method names to a predefined safelist. This approach restricts the scope of classes and methods that can be dynamically accessed, reducing the risk of unauthorized actions.
    - **Do** sanitize external input by removing special and unexpected characters that could facilitate code injection attacks. Characters such as single or double quotation marks and backslashes are particularly risky and should be filtered out.
  cwe_id:
    - 470
  id: java_lang_reflection_using_user_input
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_reflection_using_user_input
severity: high
