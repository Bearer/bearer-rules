imports:
  - java_shared_lang_instance
patterns:
  - pattern: |
      $<PERMISSION_COLLECTION>.add($<PERMISSION>);
    filters:
      - variable: PERMISSION_COLLECTION
        detection: java_shared_lang_instance
        scope: cursor
        filters:
          - variable: JAVA_SHARED_LANG_INSTANCE_TYPE
            values:
              - PermissionCollection
      - variable: PERMISSION
        detection: java_lang_dangerous_permissions_permissions
auxiliary:
  - id: java_lang_dangerous_permissions_permissions
    patterns:
      - pattern: new RuntimePermission($<CREATE_CLASS_LOADER>);
        filters:
          - variable: CREATE_CLASS_LOADER
            string_regex: \AcreateClassLoader\z
      - pattern: new ReflectPermission($<SUPPRESS_ACCESS_CHECKS>);
        filters:
          - variable: SUPPRESS_ACCESS_CHECKS
            string_regex: \AsuppressAccessChecks\z
languages:
  - java
severity: high
metadata:
  description: Usage of dangerous permissions
  remediation_message: |-
    ## Description

    Granting certain (dangerous) permissions compromises application security. Specifically, allowing `RuntimePermission` of `createClassLoader` can lead to unauthorized class loaders being used to load arbitrary classes. Similarly, permitting `ReflectPermission` of `suppressAccessChecks` bypasses Java language access controls, risking unrestricted access to protected and private class members.

    ## Remediations

    - **Do not** grant `RuntimePermission("createClassLoader")`. This permission enables the instantiation of unauthorized class loaders, posing a security risk by potentially loading arbitrary classes.
    - **Do not** grant `ReflectPermission("suppressAccessChecks")`. This permission allows bypassing Java's access checks, leading to a risk of unrestricted access to protected and private class members.
    - **Do** review and restrict permissions to only what is necessary for the application's functionality. Limiting permissions minimizes potential security vulnerabilities.
  cwe_id:
    - 269
  id: java_lang_dangerous_permissions
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_dangerous_permissions
