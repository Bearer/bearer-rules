imports:
  - java_shared_lang_html_user_input
  - java_shared_lang_instance
patterns:
  - pattern: |
      $<WRITER>.$<METHOD>($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: WRITER
        detection: java_lang_xss_response_writer_writer
        scope: cursor
      - variable: METHOD
        values:
          - append
          - format
          - print
          - printf
          - println
          - write
      - variable: USER_INPUT
        detection: java_shared_lang_html_user_input
        scope: result
  - pattern: |
      $<WRITER>.$<METHOD>($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: WRITER
        detection: java_lang_xss_response_writer_writer_fallback
        scope: cursor
      - variable: METHOD
        values:
          - append
          - format
          - print
          - printf
          - println
          - write
      - variable: USER_INPUT
        detection: java_shared_lang_html_user_input
        scope: result
auxiliary:
  - id: java_lang_xss_response_writer_writer
    patterns:
      - pattern: $<RESPONSE_INSTANCE>.getWriter();
        filters:
          - variable: RESPONSE_INSTANCE
            detection: java_shared_lang_instance
            scope: cursor
            filters:
              - variable: JAVA_SHARED_LANG_INSTANCE_TYPE
                regex: \A(javax\.servlet\.http\.)?HttpServletResponse\z
  - id: java_lang_xss_response_writer_writer_fallback
    patterns:
      - pattern: response.getWriter();
languages:
  - java
metadata:
  description: "Unsanitized user input in output stream (XSS)"
  remediation_message: |
    ## Description

    Make sure to encode and sanitize any user input before passing it down to `response.getWriter()` to avoid cross-site scripting (XSS) attacks.

    ✅ Use an encoder to minimize XSS risk

    ```java
      String userInput = req.getQueryString("user");
      String encodedUserInput = Encode.forHtml(userInput)
      response.getWriter().write(encodedUserInput)
    ```

    ✅ Even better, sanitize user input

    ```java
      String userInput = req.getQueryString("user");
      String sanitizedUserInput = sanitize(userInput);
      response.getWriter().write(sanitizedUserInput);
    ```

    ## Resources

    - [OWASP XSS Prevention Cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
    - [OWASP Java Encoder](https://owasp.org/www-project-java-encoder/)
  cwe_id:
    - 79
  id: "java_lang_xss_response_writer"
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_xss_response_writer
severity: low
