imports:
  - java_shared_lang_cipher_des_init
  - java_shared_lang_datatype
patterns:
  - pattern: |
      $<CIPHER_DES>.$<METHOD>($<PASSWORD>)
    filters:
      - variable: CIPHER_DES
        detection: java_shared_lang_cipher_des_init
        scope: cursor
      - variable: METHOD
        values:
          - update
          - updateAAD
          - doFinal
      - variable: PASSWORD
        detection: java_shared_lang_datatype
        scope: result
languages:
  - java
only_data_types:
  - Passwords
metadata:
  description: "Usage of weak encryption algorithm on a password (DES)"
  remediation_message: |-
    ## Description

    The Data Encryption Standard (DES) is recognized as a weak encryption algorithm and should not be used for securing passwords. Encryption, being reversible, is not suitable for password storage because it allows the original password to be retrieved. Passwords should instead be hashed, an irreversible process that transforms them into a fixed-size string of characters.

    ## Remediations

    - **Do not** use DES or any encryption method for password storage. Encryption's reversible nature poses a security risk by potentially allowing the retrieval of the original password.
    - **Do** use a secure and recommended hashing algorithm for password storage. Hashing is a one-way process, making it impossible to reverse-engineer the original password from the hash. The following code snippet demonstrates how to use the SHA-256 hashing algorithm, which is considered secure for password hashing.
      ```java
      MessageDigest md = MessageDigest.getInstance("SHA-256");
      ```

    ## References

    - [Java MessageDigest class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/MessageDigest.html)
  cwe_id:
    - 326
  id: java_lang_weak_password_encryption_des
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_weak_password_encryption_des
  cloud_code_suggestions: true
severity: high
