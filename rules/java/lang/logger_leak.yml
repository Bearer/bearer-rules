imports:
  - java_shared_lang_logger_methods
  - java_shared_lang_datatype
patterns:
  - pattern: $<LOG>.$<METHOD>($<INPUT>)
    filters:
      - not:
          variable: INPUT
          detection: string_literal
          scope: cursor
      - not:
          variable: INPUT
          detection: java_shared_lang_datatype
          scope: result
      - variable: METHOD
        detection: java_shared_lang_logger_methods
      - variable: LOG
        values:
          - log
          - logger
languages:
  - java
severity: low
metadata:
  description: Leakage of information in logger message
  remediation_message: |-
    ## Description

    Information leakage through logger messages can compromise sensitive data. This vulnerability arises when dynamic data or variables, which may contain sensitive information, are included in log messages.

    ## Remediations

    - **Do not** include variables or dynamic data containing sensitive information in logger messages. This can inadvertently expose sensitive data in logs, which are often not adequately protected.
    ```java
    logger.info("user signed in: " + user.uuid) // unsafe
    ```
    - **Do** log static messages that do not contain dynamic variables or attributes. This minimizes the risk of accidentally logging sensitive information.
    ```java
    logger.info("user signed in")
    ```

    ## References

    - [OWASP Logging Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html)
  cwe_id:
    - 532
  id: java_lang_logger_leak
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_logger_leak
