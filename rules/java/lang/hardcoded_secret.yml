patterns:
  - pattern: $<...>char[] $<NAME> = $<STRING_LITERAL>.toCharArray()
    filters:
      - variable: NAME
        detection: java_lang_hardcoded_secret_name
        scope: cursor_strict
      - variable: STRING_LITERAL
        detection: java_lang_hardcoded_secret_literal
        scope: cursor
  - pattern: |
      class $<...>$<_> $<...> {
        $<!>$<...>char[] $<NAME> = $<STRING_LITERAL>.toCharArray()
      }
    filters:
      - variable: NAME
        detection: java_lang_hardcoded_secret_name
        scope: cursor_strict
      - variable: STRING_LITERAL
        detection: java_lang_hardcoded_secret_literal
        scope: cursor
  - pattern: $<...>char[] $<NAME> = {};
    filters:
      - variable: NAME
        detection: java_lang_hardcoded_secret_name
        scope: cursor_strict
  - pattern: |
      class $<...>$<_> $<...> {
        $<!>$<...>char[] $<NAME> = {};
      }
    filters:
      - variable: NAME
        detection: java_lang_hardcoded_secret_name
        scope: cursor_strict
  - pattern: $<...>byte[] $<NAME> = new byte[] {};
    filters:
      - variable: NAME
        detection: java_lang_hardcoded_secret_name
        scope: cursor_strict
  - pattern: |
      class $<...>$<_> $<...> {
        $<!>$<...>byte[] $<NAME> = new byte[] {};
      }
    filters:
      - variable: NAME
        detection: java_lang_hardcoded_secret_name
        scope: cursor_strict
  - pattern: $<...>String $<NAME> = $<STRING_LITERAL>;
    filters:
      - variable: NAME
        detection: java_lang_hardcoded_secret_name
        scope: cursor_strict
      - variable: STRING_LITERAL
        detection: java_lang_hardcoded_secret_literal
        scope: cursor
  - pattern: |
      class $<...>$<_> $<...> {
        $<!>$<...>String $<NAME> = $<STRING_LITERAL>;
      }
    filters:
      - variable: NAME
        detection: java_lang_hardcoded_secret_name
        scope: cursor_strict
      - variable: STRING_LITERAL
        detection: java_lang_hardcoded_secret_literal
        scope: cursor
auxiliary:
  - id: java_lang_hardcoded_secret_name
    patterns:
      - pattern: $<NAME>;
        filters:
          - either:
              - variable: NAME
                regex: (?i)(password|api_?key|api?key|secret)\b
              - variable: NAME
                regex: (?i)(pass|pwd|psw|cipher|crypt|des|aes|mac|private|secret|sign|cert).*
  - id: java_lang_hardcoded_secret_literal
    patterns:
      - pattern: $<STRING>;
        filters:
          - variable: STRING
            detection: string_literal
            scope: cursor_strict
          - not:
              variable: STRING
              string_regex: \A[*•]+\z
          - variable: STRING
            entropy_greater_than: 3.5
languages:
  - java
severity: high
metadata:
  description: "Hard-coded secret detected."
  remediation_message: |
    ## Description

    Applications should store secret values securely and not as literal values
    in the source code.

    ## Remediations

    ✅ Retrieve secrets from a secure location at runtime

    ## Resources
    - [OWASP hardcoded passwords](https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_password)
    - [OWASP secrets management cheat sheet](https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_Cheat_Sheet.html#21-high-availability)
  cwe_id:
    - 798
  id: java_lang_hardcoded_secret
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_hardcoded_secret
