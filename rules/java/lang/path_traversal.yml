imports:
  - java_shared_lang_user_input
patterns:
  - pattern: |
      new $<_>($<...>$<USER_INPUT>$<...>)
    filters:
      - either:
          - type: java.io.File
          - type: java.io.FileReader
          - type: java.io.FileWriter
          - type: java.io.FileInputStream
          - type: java.io.FileOutputStream
      - variable: USER_INPUT
        detection: java_lang_path_traversal_user_input
        scope: result
        is_source: true
  - pattern: |
      new $<_>($<...>$<USER_INPUT>$<...>)
    filters:
      - type: javax.activation.FileDataSource
      - variable: USER_INPUT
        detection: java_lang_path_traversal_user_input
        scope: result
        is_source: true
  - pattern: |
      $<CLASS>.$<METHOD>($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: CLASS
        static_type: java.io.File
      - variable: METHOD
        values:
          - createTempFile
          - createTempDirectory
      - variable: USER_INPUT
        detection: java_lang_path_traversal_user_input
        scope: result
        is_source: true
  - pattern: |
      $<CLASS>.$<METHOD>($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: CLASS
        static_type: java.nio.file.Files
      - variable: METHOD
        values:
          - createTempFile
          - createTempDirectory
      - variable: USER_INPUT
        detection: java_lang_path_traversal_user_input
        scope: result
        is_source: true
  - pattern: |
      $<CLASS>.get($<...>$<USER_INPUT>$<...>)
    filters:
      - variable: CLASS
        static_type: java.nio.file.Paths
      - variable: USER_INPUT
        detection: java_lang_path_traversal_user_input
        scope: result
        is_source: true
auxiliary:
  - id: java_lang_path_traversal_user_input
    sanitizer: java_lang_path_traversal_sanitizer
    patterns:
      - pattern: $<USER_INPUT>
        filters:
          - variable: USER_INPUT
            detection: java_shared_lang_user_input
            scope: cursor
  - id: java_lang_path_traversal_sanitizer
    patterns:
      - pattern: $<CLASS>.getName($<_>)
        filters:
          - variable: CLASS
            static_type: org.apache.commons.io.FilenameUtils
languages:
  - java
metadata:
  description: Possible path traversal vulnerability detected
  remediation_message: |
    ## Description

    Allowing unsanitized user input in path resolution methods means an attacker could gain access to files and folders outside of the intended scope.

    ## Remediations
    ❌ Avoid wherever possible

    ✅ Sanitize user input when resolving paths, for example:
    Use `FilenameUtils.getName()` to mitigate against unwanted patterns in the path (such as `\..\..`)

    ```java
      public class Cls extends HttpServlet
      {

          public void handleRequest(HttpServletRequest request, HttpServletResponse response)
          {
              String image = request.getParameter("user_profile_picture");
              File file = new File("user/profile/" + FilenameUtils.getName(image));
          }
      }
    ```

    ## Resources
    - [OWASP path traversal](https://owasp.org/www-community/attacks/Path_Traversal)
  cwe_id:
    - 22
  id: java_lang_path_traversal
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_path_traversal
