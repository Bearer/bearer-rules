imports:
  - java_shared_lang_message_digest_md5_init
  - java_shared_lang_datatype
patterns:
  - pattern: |
      $<MESSAGE_DIGEST_MD5_INIT>.update($<DATA_TYPE>)
    filters:
      - variable: MESSAGE_DIGEST_MD5_INIT
        detection: java_shared_lang_message_digest_md5_init
        scope: cursor
      - variable: DATA_TYPE
        detection: java_shared_lang_datatype
        scope: result
  - pattern: |
      $<MESSAGE_DIGEST_MD5_INIT>.update()
    filters:
      - variable: MESSAGE_DIGEST_MD5_INIT
        detection: java_shared_lang_message_digest_md5_init
        scope: cursor
languages:
  - java
skip_data_types:
  - "Unique Identifier"
  - Passwords # see java_lang_weak_password_hash_md5
metadata:
  description: "Usage of weak hashing library (MD5)"
  remediation_message: |-
    ## Description

    Using a weak hashing library like MD5 increases the risk of data breaches. MD5 is vulnerable to collision attacks, where two different inputs produce the same output, compromising data integrity and security.

    ## Remediations

    - **Do not** use MD5 for hashing purposes. This algorithm is no longer considered secure and can compromise data integrity.
    ```java
    MessageDigest md = MessageDigest.getInstance("MD5"); // unsafe
    ```
    - **Do** opt for stronger hashing algorithms like SHA-256 to ensure data security.
    ```java
    MessageDigest md = MessageDigest.getInstance("SHA-256");
    ```

    ## References

    - [Java MessageDigest class](https://docs.oracle.com/en/java/javase/20/docs/api/java.base/java/security/MessageDigest.html)
  cwe_id:
    - 328
  id: java_lang_weak_hash_md5
  documentation_url: https://docs.bearer.com/reference/rules/java_lang_weak_hash_md5
  cloud_code_suggestions: true
severity: medium
